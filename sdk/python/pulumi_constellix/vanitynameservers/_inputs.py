# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'NameserverGroupPropertiesArgs',
    'NameserverGroupPropertiesArgsDict',
]

MYPY = False

if not MYPY:
    class NameserverGroupPropertiesArgsDict(TypedDict):
        id: NotRequired[pulumi.Input[int]]
        """
        The ID of the nameserver group
        """
elif False:
    NameserverGroupPropertiesArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class NameserverGroupPropertiesArgs:
    def __init__(__self__, *,
                 id: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[int] id: The ID of the nameserver group
        """
        if id is not None:
            pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[int]]:
        """
        The ID of the nameserver group
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "id", value)


