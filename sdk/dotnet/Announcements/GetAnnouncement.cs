// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CONSTELLIX.Announcements
{
    public static class GetAnnouncement
    {
        public static Task<Outputs.GetAnnouncementProperties> InvokeAsync(GetAnnouncementArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.GetAnnouncementProperties>("constellix:announcements:getAnnouncement", args ?? new GetAnnouncementArgs(), options.WithDefaults());

        public static Output<Outputs.GetAnnouncementProperties> Invoke(GetAnnouncementInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetAnnouncementProperties>("constellix:announcements:getAnnouncement", args ?? new GetAnnouncementInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAnnouncementArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the announcement
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetAnnouncementArgs()
        {
        }
        public static new GetAnnouncementArgs Empty => new GetAnnouncementArgs();
    }

    public sealed class GetAnnouncementInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the announcement
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetAnnouncementInvokeArgs()
        {
        }
        public static new GetAnnouncementInvokeArgs Empty => new GetAnnouncementInvokeArgs();
    }
}
