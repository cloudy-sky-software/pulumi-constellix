// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CONSTELLIX.Domains.Inputs
{

    /// <summary>
    /// The SOA details for the domain
    /// </summary>
    public sealed class SoaPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Email of the administrator for the domain. @ should be replaced with .
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Number of seconds after which secondary nameservers should stop responding to queries, if the master does not respond
        /// </summary>
        [Input("expire")]
        public Input<int>? Expire { get; set; }

        /// <summary>
        /// How long NXDOMAIN responses should be cached for
        /// </summary>
        [Input("negativeCache")]
        public Input<int>? NegativeCache { get; set; }

        /// <summary>
        /// Primary master nameserver for the domain
        /// </summary>
        [Input("primaryNameserver")]
        public Input<string>? PrimaryNameserver { get; set; }

        /// <summary>
        /// The interval for secondary nameservers should query for the SOA record
        /// </summary>
        [Input("refresh")]
        public Input<int>? Refresh { get; set; }

        /// <summary>
        /// The number of seconds after which secondary servers should retry to request the serial number if the master does not respond
        /// </summary>
        [Input("retry")]
        public Input<int>? Retry { get; set; }

        /// <summary>
        /// The Time To Live (TTL) in seconds for the SOA record
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        public SoaPropertiesArgs()
        {
        }
        public static new SoaPropertiesArgs Empty => new SoaPropertiesArgs();
    }
}
