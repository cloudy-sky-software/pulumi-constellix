// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.Constellix.Domains
{
    public static class GetDomainHistoryVersion
    {
        public static Task<Outputs.GetDomainHistoryVersionProperties> InvokeAsync(GetDomainHistoryVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.GetDomainHistoryVersionProperties>("constellix:domains:getDomainHistoryVersion", args ?? new GetDomainHistoryVersionArgs(), options.WithDefaults());

        public static Output<Outputs.GetDomainHistoryVersionProperties> Invoke(GetDomainHistoryVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetDomainHistoryVersionProperties>("constellix:domains:getDomainHistoryVersion", args ?? new GetDomainHistoryVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainHistoryVersionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the domain object
        /// </summary>
        [Input("domainId", required: true)]
        public string DomainId { get; set; } = null!;

        /// <summary>
        /// The version number of the domain
        /// </summary>
        [Input("version", required: true)]
        public string Version { get; set; } = null!;

        public GetDomainHistoryVersionArgs()
        {
        }
        public static new GetDomainHistoryVersionArgs Empty => new GetDomainHistoryVersionArgs();
    }

    public sealed class GetDomainHistoryVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the domain object
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        /// <summary>
        /// The version number of the domain
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public GetDomainHistoryVersionInvokeArgs()
        {
        }
        public static new GetDomainHistoryVersionInvokeArgs Empty => new GetDomainHistoryVersionInvokeArgs();
    }
}
