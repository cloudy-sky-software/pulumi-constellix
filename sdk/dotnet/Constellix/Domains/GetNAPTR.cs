// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.Constellix.Domains
{
    public static class GetNAPTR
    {
        public static Task<Outputs.GetNAPTR> InvokeAsync(GetNAPTRArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.GetNAPTR>("constellix:domains:getNAPTR", args ?? new GetNAPTRArgs(), options.WithDefaults());

        public static Output<Outputs.GetNAPTR> Invoke(GetNAPTRInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetNAPTR>("constellix:domains:getNAPTR", args ?? new GetNAPTRInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNAPTRArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the domain object
        /// </summary>
        [Input("domainId", required: true)]
        public string DomainId { get; set; } = null!;

        /// <summary>
        /// The ID of the record
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetNAPTRArgs()
        {
        }
        public static new GetNAPTRArgs Empty => new GetNAPTRArgs();
    }

    public sealed class GetNAPTRInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the domain object
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        /// <summary>
        /// The ID of the record
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetNAPTRInvokeArgs()
        {
        }
        public static new GetNAPTRInvokeArgs Empty => new GetNAPTRInvokeArgs();
    }
}
