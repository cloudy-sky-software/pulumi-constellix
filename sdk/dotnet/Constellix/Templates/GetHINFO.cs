// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.Constellix.Templates
{
    public static class GetHINFO
    {
        public static Task<Outputs.GetHINFO> InvokeAsync(GetHINFOArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.GetHINFO>("constellix:templates:getHINFO", args ?? new GetHINFOArgs(), options.WithDefaults());

        public static Output<Outputs.GetHINFO> Invoke(GetHINFOInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetHINFO>("constellix:templates:getHINFO", args ?? new GetHINFOInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHINFOArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the record
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The ID of the template object
        /// </summary>
        [Input("templateId", required: true)]
        public string TemplateId { get; set; } = null!;

        public GetHINFOArgs()
        {
        }
        public static new GetHINFOArgs Empty => new GetHINFOArgs();
    }

    public sealed class GetHINFOInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the record
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The ID of the template object
        /// </summary>
        [Input("templateId", required: true)]
        public Input<string> TemplateId { get; set; } = null!;

        public GetHINFOInvokeArgs()
        {
        }
        public static new GetHINFOInvokeArgs Empty => new GetHINFOInvokeArgs();
    }
}
