// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CONSTELLIX.Templates
{
    public static class ListTemplateRecords
    {
        public static Task<Outputs.ListTemplateRecordsProperties> InvokeAsync(ListTemplateRecordsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.ListTemplateRecordsProperties>("constellix:templates:listTemplateRecords", args ?? new ListTemplateRecordsArgs(), options.WithDefaults());

        public static Output<Outputs.ListTemplateRecordsProperties> Invoke(ListTemplateRecordsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.ListTemplateRecordsProperties>("constellix:templates:listTemplateRecords", args ?? new ListTemplateRecordsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListTemplateRecordsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the template object
        /// </summary>
        [Input("templateId", required: true)]
        public string TemplateId { get; set; } = null!;

        public ListTemplateRecordsArgs()
        {
        }
        public static new ListTemplateRecordsArgs Empty => new ListTemplateRecordsArgs();
    }

    public sealed class ListTemplateRecordsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the template object
        /// </summary>
        [Input("templateId", required: true)]
        public Input<string> TemplateId { get; set; } = null!;

        public ListTemplateRecordsInvokeArgs()
        {
        }
        public static new ListTemplateRecordsInvokeArgs Empty => new ListTemplateRecordsInvokeArgs();
    }
}
