// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";

export namespace analytics {
}

export namespace announcements {
}

export namespace contactlists {
}

export namespace domains {
    /**
     * The SOA details for the domain
     */
    export interface SoaPropertiesArgs {
        /**
         * Email of the administrator for the domain. @ should be replaced with .
         */
        email?: pulumi.Input<string>;
        /**
         * Number of seconds after which secondary nameservers should stop responding to queries, if the master does not respond
         */
        expire?: pulumi.Input<number>;
        /**
         * How long NXDOMAIN responses should be cached for
         */
        negativeCache?: pulumi.Input<number>;
        /**
         * Primary master nameserver for the domain
         */
        primaryNameserver?: pulumi.Input<string>;
        /**
         * The interval for secondary nameservers should query for the SOA record
         */
        refresh?: pulumi.Input<number>;
        /**
         * The number of seconds after which secondary servers should retry to request the serial number if the master does not respond
         */
        retry?: pulumi.Input<number>;
        /**
         * The Time To Live (TTL) in seconds for the SOA record
         */
        ttl?: pulumi.Input<number>;
    }

    export interface ValueARequestValueItemPropertiesArgs {
        id?: pulumi.Input<number>;
    }

    /**
     * Failover record mode
     */
    export interface ValueARequestValuePropertiesArgs {
        /**
         * The failover mode
         */
        mode?: pulumi.Input<enums.domains.ValueARequestValuePropertiesMode>;
        values?: pulumi.Input<pulumi.Input<inputs.domains.ValueARequestValuePropertiesValuesItemPropertiesArgs>[]>;
    }

    export interface ValueARequestValuePropertiesValuesItemPropertiesArgs {
        /**
         * Whether the failover entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The sort order of the entry. Lower order entries are preferred over higher order entries
         */
        order?: pulumi.Input<number>;
        /**
         * The ID in Sonar to use for checking if the record should be used
         */
        sonarCheckId?: pulumi.Input<number>;
        value?: pulumi.Input<string>;
    }

    export interface ValueAaaaRequestValueItemPropertiesArgs {
        id?: pulumi.Input<number>;
    }

    /**
     * Failover record mode
     */
    export interface ValueAaaaRequestValuePropertiesArgs {
        /**
         * Whether this failover value is enabled or not
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The failover mode
         */
        mode?: pulumi.Input<enums.domains.ValueAaaaRequestValuePropertiesMode>;
        values?: pulumi.Input<pulumi.Input<inputs.domains.ValueAaaaRequestValuePropertiesValuesItemPropertiesArgs>[]>;
    }

    export interface ValueAaaaRequestValuePropertiesValuesItemPropertiesArgs {
        /**
         * Whether this entry is considered active or not
         */
        active?: pulumi.Input<boolean>;
        /**
         * Whether the failover entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The sort order of the entry. Lower order entries are preferred over higher order entries
         */
        order?: pulumi.Input<number>;
        /**
         * The ID in Sonar to use for checking if the record should be used
         */
        sonarCheckId?: pulumi.Input<number>;
        value?: pulumi.Input<string>;
    }

    export interface ValueAnameRequestValueItemPropertiesArgs {
        id?: pulumi.Input<number>;
    }

    /**
     * Failover record mode
     */
    export interface ValueAnameRequestValuePropertiesArgs {
        /**
         * Whether this failover value is enabled or not
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The failover mode
         */
        mode?: pulumi.Input<enums.domains.ValueAnameRequestValuePropertiesMode>;
        values?: pulumi.Input<pulumi.Input<inputs.domains.ValueAnameRequestValuePropertiesValuesItemPropertiesArgs>[]>;
    }

    export interface ValueAnameRequestValuePropertiesValuesItemPropertiesArgs {
        /**
         * Whether this entry is considered active or not
         */
        active?: pulumi.Input<boolean>;
        /**
         * Whether the failover entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The sort order of the entry. Lower order entries are preferred over higher order entries
         */
        order?: pulumi.Input<number>;
        /**
         * The ID in Sonar to use for checking if the record should be used
         */
        sonarCheckId?: pulumi.Input<number>;
        value?: pulumi.Input<string>;
    }

    export interface ValueCaaValueItemPropertiesArgs {
        /**
         * The value for this tag
         */
        data?: pulumi.Input<string>;
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * A flag byte for any flags on the record.
         */
        flags?: pulumi.Input<number>;
        /**
         * Foo
         */
        tag?: pulumi.Input<enums.domains.ValueCaaValueItemPropertiesTag>;
    }

    export interface ValueCertValueItemPropertiesArgs {
        /**
         * An integer representing the algorithm
         */
        algorithm?: pulumi.Input<number>;
        /**
         * A base 64 encoded string containing the certificate information
         */
        certificate?: pulumi.Input<string>;
        /**
         * An integer representing the type of certificate
         */
        certificateType?: pulumi.Input<number>;
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * An integer representing the key tag
         */
        keyTag?: pulumi.Input<number>;
    }

    export interface ValueCnameRequestValueItemPropertiesArgs {
        id?: pulumi.Input<number>;
    }

    /**
     * Failover record mode
     */
    export interface ValueCnameRequestValuePropertiesArgs {
        /**
         * Whether this failover value is enabled or not
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The failover mode
         */
        mode?: pulumi.Input<enums.domains.ValueCnameRequestValuePropertiesMode>;
        values?: pulumi.Input<pulumi.Input<inputs.domains.ValueCnameRequestValuePropertiesValuesItemPropertiesArgs>[]>;
    }

    export interface ValueCnameRequestValuePropertiesValuesItemPropertiesArgs {
        /**
         * Whether this entry is considered active or not
         */
        active?: pulumi.Input<boolean>;
        /**
         * Whether the failover entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The sort order of the entry. Lower order entries are preferred over higher order entries
         */
        order?: pulumi.Input<number>;
        /**
         * The ID in Sonar to use for checking if the record should be used
         */
        sonarCheckId?: pulumi.Input<number>;
        value?: pulumi.Input<string>;
    }

    export interface ValueHinfoValueItemPropertiesArgs {
        /**
         * Text representing the CPU
         */
        cpu?: pulumi.Input<string>;
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Text representing the OS
         */
        os?: pulumi.Input<string>;
    }

    export interface ValueHttpValuePropertiesArgs {
        /**
         * The description to include in meta tags
         */
        description?: pulumi.Input<string>;
        /**
         * If this is a frame redirect, don't include the URL entered in the browser
         */
        hard?: pulumi.Input<boolean>;
        /**
         * Meta keywords for the page containing the frame
         */
        keywords?: pulumi.Input<string>;
        /**
         * The type of redirect, either 301, 302 or frame.
         */
        redirectType?: pulumi.Input<string>;
        /**
         * The title of the page containing the redirect frame
         */
        title?: pulumi.Input<string>;
        /**
         * The URL to redirect to
         */
        url?: pulumi.Input<string>;
    }

    export interface ValueMxValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * A number representing the priority of the mail server
         */
        priority?: pulumi.Input<number>;
        /**
         * The hostname of the mail server
         */
        server?: pulumi.Input<string>;
    }

    export interface ValueNaptrValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Any flags for this record
         */
        flags?: pulumi.Input<string>;
        /**
         * The order of the record
         */
        order?: pulumi.Input<number>;
        /**
         * The preference for the record
         */
        preference?: pulumi.Input<number>;
        /**
         * A regular expression to use
         */
        regularExpression?: pulumi.Input<string>;
        /**
         * The replacement for the regular expression
         */
        replacement?: pulumi.Input<string>;
        /**
         * The service the record is used for
         */
        service?: pulumi.Input<string>;
    }

    export interface ValueNsValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The hostname for the nameserver
         */
        host?: pulumi.Input<string>;
    }

    export interface ValuePtrValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The hostname for the IP address
         */
        system?: pulumi.Input<string>;
    }

    export interface ValueRpValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The email of the person responsible. Replace @ with .
         */
        mailbox?: pulumi.Input<string>;
        /**
         * The name of a TXT record containing more information
         */
        txt?: pulumi.Input<string>;
    }

    export interface ValueSpfValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The SPF record value
         */
        value?: pulumi.Input<string>;
    }

    export interface ValueSrvValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The hostname for the service
         */
        host?: pulumi.Input<string>;
        /**
         * The port the service runs on
         */
        port?: pulumi.Input<number>;
        /**
         * A priority for this record
         */
        priority?: pulumi.Input<number>;
        /**
         * A weight for this record
         */
        weight?: pulumi.Input<number>;
    }

    export interface ValueTxtValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The text record value
         */
        value?: pulumi.Input<string>;
    }
}

export namespace geoproximities {
}

export namespace ipfilters {
    export interface RegionsItemPropertiesArgs {
        /**
         * Optional AS Number that this rule applies to. Values must be between 0 and 4,294,967,295
         */
        asn?: pulumi.Input<number>;
        /**
         * The continent for this region
         */
        continent?: pulumi.Input<enums.ipfilters.RegionsItemPropertiesContinent>;
        /**
         * Optional 2 digit ISO code for the country - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
         */
        country?: pulumi.Input<string>;
        /**
         * Optional 2 digit code for the region
         */
        region?: pulumi.Input<string>;
    }
}

export namespace ping {
}

export namespace pools {
    export interface PoolitoArgs {
        /**
         * The Ito configuration
         */
        config?: pulumi.Input<inputs.pools.PoolitoConfigPropertiesArgs>;
        /**
         * Is Ito enabled for this pool?
         */
        enabled?: pulumi.Input<boolean>;
    }

    /**
     * The Ito configuration
     */
    export interface PoolitoConfigPropertiesArgs {
        /**
         * Percentage of how much is the response time allowed to deviate?
         */
        deviationAllowance?: pulumi.Input<enums.pools.PoolitoConfigPropertiesDeviationAllowance>;
        handicapFactor?: pulumi.Input<enums.pools.PoolitoConfigPropertiesHandicapFactor>;
        /**
         * The maximum number of results to return
         */
        maximumNumberOfResults?: pulumi.Input<number>;
        /**
         * Where monitoring should be performed from
         */
        monitoringRegion?: pulumi.Input<enums.pools.PoolitoConfigPropertiesMonitoringRegion>;
        /**
         * The number of seconds between each check
         */
        period?: pulumi.Input<enums.pools.PoolitoConfigPropertiesPeriod>;
    }

    /**
     * A possible value for the pool. Depends on the type of pool.
     */
    export interface ValuesItemPropertiesArgs {
        /**
         * Is this value enabled or not?
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * A handicap for this value
         */
        handicap?: pulumi.Input<number>;
        /**
         * The failover/check policy for this value
         */
        policy?: pulumi.Input<enums.pools.ValuesItemPropertiesPolicy>;
        /**
         * The ID of the check to use from Sonar
         */
        sonarCheckId?: pulumi.Input<number>;
        value?: pulumi.Input<string | string | string>;
        /**
         * A weight for the value. Must be between 1 and 1000000
         */
        weight?: pulumi.Input<number>;
    }
}

export namespace search {
}

export namespace tags {
}

export namespace templates {
    export interface ValueARequestValueItemPropertiesArgs {
        id?: pulumi.Input<number>;
    }

    /**
     * Failover record mode
     */
    export interface ValueARequestValuePropertiesArgs {
        /**
         * The failover mode
         */
        mode?: pulumi.Input<enums.templates.ValueARequestValuePropertiesMode>;
        values?: pulumi.Input<pulumi.Input<inputs.templates.ValueARequestValuePropertiesValuesItemPropertiesArgs>[]>;
    }

    export interface ValueARequestValuePropertiesValuesItemPropertiesArgs {
        /**
         * Whether the failover entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The sort order of the entry. Lower order entries are preferred over higher order entries
         */
        order?: pulumi.Input<number>;
        /**
         * The ID in Sonar to use for checking if the record should be used
         */
        sonarCheckId?: pulumi.Input<number>;
        value?: pulumi.Input<string>;
    }

    export interface ValueAaaaRequestValueItemPropertiesArgs {
        id?: pulumi.Input<number>;
    }

    /**
     * Failover record mode
     */
    export interface ValueAaaaRequestValuePropertiesArgs {
        /**
         * Whether this failover value is enabled or not
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The failover mode
         */
        mode?: pulumi.Input<enums.templates.ValueAaaaRequestValuePropertiesMode>;
        values?: pulumi.Input<pulumi.Input<inputs.templates.ValueAaaaRequestValuePropertiesValuesItemPropertiesArgs>[]>;
    }

    export interface ValueAaaaRequestValuePropertiesValuesItemPropertiesArgs {
        /**
         * Whether this entry is considered active or not
         */
        active?: pulumi.Input<boolean>;
        /**
         * Whether the failover entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The sort order of the entry. Lower order entries are preferred over higher order entries
         */
        order?: pulumi.Input<number>;
        /**
         * The ID in Sonar to use for checking if the record should be used
         */
        sonarCheckId?: pulumi.Input<number>;
        value?: pulumi.Input<string>;
    }

    export interface ValueAnameRequestValueItemPropertiesArgs {
        id?: pulumi.Input<number>;
    }

    /**
     * Failover record mode
     */
    export interface ValueAnameRequestValuePropertiesArgs {
        /**
         * Whether this failover value is enabled or not
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The failover mode
         */
        mode?: pulumi.Input<enums.templates.ValueAnameRequestValuePropertiesMode>;
        values?: pulumi.Input<pulumi.Input<inputs.templates.ValueAnameRequestValuePropertiesValuesItemPropertiesArgs>[]>;
    }

    export interface ValueAnameRequestValuePropertiesValuesItemPropertiesArgs {
        /**
         * Whether this entry is considered active or not
         */
        active?: pulumi.Input<boolean>;
        /**
         * Whether the failover entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The sort order of the entry. Lower order entries are preferred over higher order entries
         */
        order?: pulumi.Input<number>;
        /**
         * The ID in Sonar to use for checking if the record should be used
         */
        sonarCheckId?: pulumi.Input<number>;
        value?: pulumi.Input<string>;
    }

    export interface ValueCaaValueItemPropertiesArgs {
        /**
         * The value for this tag
         */
        data?: pulumi.Input<string>;
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * A flag byte for any flags on the record.
         */
        flags?: pulumi.Input<number>;
        /**
         * Foo
         */
        tag?: pulumi.Input<enums.templates.ValueCaaValueItemPropertiesTag>;
    }

    export interface ValueCertValueItemPropertiesArgs {
        /**
         * An integer representing the algorithm
         */
        algorithm?: pulumi.Input<number>;
        /**
         * A base 64 encoded string containing the certificate information
         */
        certificate?: pulumi.Input<string>;
        /**
         * An integer representing the type of certificate
         */
        certificateType?: pulumi.Input<number>;
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * An integer representing the key tag
         */
        keyTag?: pulumi.Input<number>;
    }

    export interface ValueCnameRequestValueItemPropertiesArgs {
        id?: pulumi.Input<number>;
    }

    /**
     * Failover record mode
     */
    export interface ValueCnameRequestValuePropertiesArgs {
        /**
         * Whether this failover value is enabled or not
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The failover mode
         */
        mode?: pulumi.Input<enums.templates.ValueCnameRequestValuePropertiesMode>;
        values?: pulumi.Input<pulumi.Input<inputs.templates.ValueCnameRequestValuePropertiesValuesItemPropertiesArgs>[]>;
    }

    export interface ValueCnameRequestValuePropertiesValuesItemPropertiesArgs {
        /**
         * Whether this entry is considered active or not
         */
        active?: pulumi.Input<boolean>;
        /**
         * Whether the failover entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The sort order of the entry. Lower order entries are preferred over higher order entries
         */
        order?: pulumi.Input<number>;
        /**
         * The ID in Sonar to use for checking if the record should be used
         */
        sonarCheckId?: pulumi.Input<number>;
        value?: pulumi.Input<string>;
    }

    export interface ValueHinfoValueItemPropertiesArgs {
        /**
         * Text representing the CPU
         */
        cpu?: pulumi.Input<string>;
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Text representing the OS
         */
        os?: pulumi.Input<string>;
    }

    export interface ValueHttpValuePropertiesArgs {
        /**
         * The description to include in meta tags
         */
        description?: pulumi.Input<string>;
        /**
         * If this is a frame redirect, don't include the URL entered in the browser
         */
        hard?: pulumi.Input<boolean>;
        /**
         * Meta keywords for the page containing the frame
         */
        keywords?: pulumi.Input<string>;
        /**
         * The type of redirect, either 301, 302 or frame.
         */
        redirectType?: pulumi.Input<string>;
        /**
         * The title of the page containing the redirect frame
         */
        title?: pulumi.Input<string>;
        /**
         * The URL to redirect to
         */
        url?: pulumi.Input<string>;
    }

    export interface ValueMxValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * A number representing the priority of the mail server
         */
        priority?: pulumi.Input<number>;
        /**
         * The hostname of the mail server
         */
        server?: pulumi.Input<string>;
    }

    export interface ValueNaptrValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Any flags for this record
         */
        flags?: pulumi.Input<string>;
        /**
         * The order of the record
         */
        order?: pulumi.Input<number>;
        /**
         * The preference for the record
         */
        preference?: pulumi.Input<number>;
        /**
         * A regular expression to use
         */
        regularExpression?: pulumi.Input<string>;
        /**
         * The replacement for the regular expression
         */
        replacement?: pulumi.Input<string>;
        /**
         * The service the record is used for
         */
        service?: pulumi.Input<string>;
    }

    export interface ValueNsValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The hostname for the nameserver
         */
        host?: pulumi.Input<string>;
    }

    export interface ValuePtrValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The hostname for the IP address
         */
        system?: pulumi.Input<string>;
    }

    export interface ValueRpValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The email of the person responsible. Replace @ with .
         */
        mailbox?: pulumi.Input<string>;
        /**
         * The name of a TXT record containing more information
         */
        txt?: pulumi.Input<string>;
    }

    export interface ValueSpfValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The SPF record value
         */
        value?: pulumi.Input<string>;
    }

    export interface ValueSrvValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The hostname for the service
         */
        host?: pulumi.Input<string>;
        /**
         * The port the service runs on
         */
        port?: pulumi.Input<number>;
        /**
         * A priority for this record
         */
        priority?: pulumi.Input<number>;
        /**
         * A weight for this record
         */
        weight?: pulumi.Input<number>;
    }

    export interface ValueTxtValueItemPropertiesArgs {
        /**
         * Whether the entry is enabled or not. Disabled entries will not be included in a response
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The text record value
         */
        value?: pulumi.Input<string>;
    }
}

export namespace vanitynameservers {
    export interface NameserverGroupPropertiesArgs {
        /**
         * The ID of the nameserver group
         */
        id?: pulumi.Input<number>;
    }

}
