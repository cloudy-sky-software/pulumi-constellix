// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class ContactListSlackWebhook extends pulumi.CustomResource {
    /**
     * Get an existing ContactListSlackWebhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ContactListSlackWebhook {
        return new ContactListSlackWebhook(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'constellix:contactlists:ContactListSlackWebhook';

    /**
     * Returns true if the given object is an instance of ContactListSlackWebhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContactListSlackWebhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContactListSlackWebhook.__pulumiType;
    }

    /**
     * Slack channel to send notifications to
     */
    public readonly channel!: pulumi.Output<string | undefined>;
    public /*out*/ readonly data!: pulumi.Output<outputs.contactlists.DataProperties | undefined>;
    /**
     * Incoming Webhook URL
     */
    public readonly webhook!: pulumi.Output<string | undefined>;

    /**
     * Create a ContactListSlackWebhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ContactListSlackWebhookArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["channel"] = args ? args.channel : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["webhook"] = args ? args.webhook : undefined;
            resourceInputs["data"] = undefined /*out*/;
        } else {
            resourceInputs["channel"] = undefined /*out*/;
            resourceInputs["data"] = undefined /*out*/;
            resourceInputs["webhook"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ContactListSlackWebhook.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ContactListSlackWebhook resource.
 */
export interface ContactListSlackWebhookArgs {
    /**
     * Slack channel to send notifications to
     */
    channel?: pulumi.Input<string>;
    /**
     * The ID of the Contact List
     */
    id?: pulumi.Input<string>;
    /**
     * Incoming Webhook URL
     */
    webhook?: pulumi.Input<string>;
}
