// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ApplyDomainHistoryArgs } from "./applyDomainHistory";
export type ApplyDomainHistory = import("./applyDomainHistory").ApplyDomainHistory;
export const ApplyDomainHistory: typeof import("./applyDomainHistory").ApplyDomainHistory = null as any;
utilities.lazyLoad(exports, ["ApplyDomainHistory"], () => require("./applyDomainHistory"));

export { ApplyDomainSnapshotArgs } from "./applyDomainSnapshot";
export type ApplyDomainSnapshot = import("./applyDomainSnapshot").ApplyDomainSnapshot;
export const ApplyDomainSnapshot: typeof import("./applyDomainSnapshot").ApplyDomainSnapshot = null as any;
utilities.lazyLoad(exports, ["ApplyDomainSnapshot"], () => require("./applyDomainSnapshot"));

export { DomainArgs } from "./domain";
export type Domain = import("./domain").Domain;
export const Domain: typeof import("./domain").Domain = null as any;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));

export { DomainRecordArgs } from "./domainRecord";
export type DomainRecord = import("./domainRecord").DomainRecord;
export const DomainRecord: typeof import("./domainRecord").DomainRecord = null as any;
utilities.lazyLoad(exports, ["DomainRecord"], () => require("./domainRecord"));

export { GetDomainArgs, GetDomainOutputArgs } from "./getDomain";
export const getDomain: typeof import("./getDomain").getDomain = null as any;
export const getDomainOutput: typeof import("./getDomain").getDomainOutput = null as any;
utilities.lazyLoad(exports, ["getDomain","getDomainOutput"], () => require("./getDomain"));

export { GetDomainAnalyticArgs, GetDomainAnalyticOutputArgs } from "./getDomainAnalytic";
export const getDomainAnalytic: typeof import("./getDomainAnalytic").getDomainAnalytic = null as any;
export const getDomainAnalyticOutput: typeof import("./getDomainAnalytic").getDomainAnalyticOutput = null as any;
utilities.lazyLoad(exports, ["getDomainAnalytic","getDomainAnalyticOutput"], () => require("./getDomainAnalytic"));

export { GetDomainHistoryVersionArgs, GetDomainHistoryVersionOutputArgs } from "./getDomainHistoryVersion";
export const getDomainHistoryVersion: typeof import("./getDomainHistoryVersion").getDomainHistoryVersion = null as any;
export const getDomainHistoryVersionOutput: typeof import("./getDomainHistoryVersion").getDomainHistoryVersionOutput = null as any;
utilities.lazyLoad(exports, ["getDomainHistoryVersion","getDomainHistoryVersionOutput"], () => require("./getDomainHistoryVersion"));

export { GetDomainNameserverArgs, GetDomainNameserverOutputArgs } from "./getDomainNameserver";
export const getDomainNameserver: typeof import("./getDomainNameserver").getDomainNameserver = null as any;
export const getDomainNameserverOutput: typeof import("./getDomainNameserver").getDomainNameserverOutput = null as any;
utilities.lazyLoad(exports, ["getDomainNameserver","getDomainNameserverOutput"], () => require("./getDomainNameserver"));

export { GetDomainRecordArgs, GetDomainRecordOutputArgs } from "./getDomainRecord";
export const getDomainRecord: typeof import("./getDomainRecord").getDomainRecord = null as any;
export const getDomainRecordOutput: typeof import("./getDomainRecord").getDomainRecordOutput = null as any;
utilities.lazyLoad(exports, ["getDomainRecord","getDomainRecordOutput"], () => require("./getDomainRecord"));

export { GetDomainSnapshotArgs, GetDomainSnapshotOutputArgs } from "./getDomainSnapshot";
export const getDomainSnapshot: typeof import("./getDomainSnapshot").getDomainSnapshot = null as any;
export const getDomainSnapshotOutput: typeof import("./getDomainSnapshot").getDomainSnapshotOutput = null as any;
utilities.lazyLoad(exports, ["getDomainSnapshot","getDomainSnapshotOutput"], () => require("./getDomainSnapshot"));

export { ListDomainHistoryArgs, ListDomainHistoryOutputArgs } from "./listDomainHistory";
export const listDomainHistory: typeof import("./listDomainHistory").listDomainHistory = null as any;
export const listDomainHistoryOutput: typeof import("./listDomainHistory").listDomainHistoryOutput = null as any;
utilities.lazyLoad(exports, ["listDomainHistory","listDomainHistoryOutput"], () => require("./listDomainHistory"));

export { ListDomainRecordsArgs, ListDomainRecordsOutputArgs } from "./listDomainRecords";
export const listDomainRecords: typeof import("./listDomainRecords").listDomainRecords = null as any;
export const listDomainRecordsOutput: typeof import("./listDomainRecords").listDomainRecordsOutput = null as any;
utilities.lazyLoad(exports, ["listDomainRecords","listDomainRecordsOutput"], () => require("./listDomainRecords"));

export { ListDomainSnapshotsArgs, ListDomainSnapshotsOutputArgs } from "./listDomainSnapshots";
export const listDomainSnapshots: typeof import("./listDomainSnapshots").listDomainSnapshots = null as any;
export const listDomainSnapshotsOutput: typeof import("./listDomainSnapshots").listDomainSnapshotsOutput = null as any;
utilities.lazyLoad(exports, ["listDomainSnapshots","listDomainSnapshotsOutput"], () => require("./listDomainSnapshots"));

export { ListDomainsArgs } from "./listDomains";
export const listDomains: typeof import("./listDomains").listDomains = null as any;
export const listDomainsOutput: typeof import("./listDomains").listDomainsOutput = null as any;
utilities.lazyLoad(exports, ["listDomains","listDomainsOutput"], () => require("./listDomains"));

export { SnapshotDomainHistoryArgs } from "./snapshotDomainHistory";
export type SnapshotDomainHistory = import("./snapshotDomainHistory").SnapshotDomainHistory;
export const SnapshotDomainHistory: typeof import("./snapshotDomainHistory").SnapshotDomainHistory = null as any;
utilities.lazyLoad(exports, ["SnapshotDomainHistory"], () => require("./snapshotDomainHistory"));


// Export enums:
export * from "../types/enums/domains";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "constellix:domains:ApplyDomainHistory":
                return new ApplyDomainHistory(name, <any>undefined, { urn })
            case "constellix:domains:ApplyDomainSnapshot":
                return new ApplyDomainSnapshot(name, <any>undefined, { urn })
            case "constellix:domains:Domain":
                return new Domain(name, <any>undefined, { urn })
            case "constellix:domains:DomainRecord":
                return new DomainRecord(name, <any>undefined, { urn })
            case "constellix:domains:SnapshotDomainHistory":
                return new SnapshotDomainHistory(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("constellix", "domains", _module)
