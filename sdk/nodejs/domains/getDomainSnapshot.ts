// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getDomainSnapshot(args: GetDomainSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<outputs.domains.GetDomainSnapshotProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("constellix:domains:getDomainSnapshot", {
        "domainId": args.domainId,
        "version": args.version,
    }, opts);
}

export interface GetDomainSnapshotArgs {
    /**
     * The ID of the domain object
     */
    domainId: string;
    /**
     * The version number of the snapshot
     */
    version: string;
}
export function getDomainSnapshotOutput(args: GetDomainSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<outputs.domains.GetDomainSnapshotProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("constellix:domains:getDomainSnapshot", {
        "domainId": args.domainId,
        "version": args.version,
    }, opts);
}

export interface GetDomainSnapshotOutputArgs {
    /**
     * The ID of the domain object
     */
    domainId: pulumi.Input<string>;
    /**
     * The version number of the snapshot
     */
    version: pulumi.Input<string>;
}
