// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package contactlists

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContactListEmail struct {
	pulumi.CustomResourceState

	// The email address
	Address pulumi.StringPtrOutput  `pulumi:"address"`
	Data    DataPropertiesPtrOutput `pulumi:"data"`
}

// NewContactListEmail registers a new resource with the given unique name, arguments, and options.
func NewContactListEmail(ctx *pulumi.Context,
	name string, args *ContactListEmailArgs, opts ...pulumi.ResourceOption) (*ContactListEmail, error) {
	if args == nil {
		args = &ContactListEmailArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ContactListEmail
	err := ctx.RegisterResource("constellix:contactlists:ContactListEmail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContactListEmail gets an existing ContactListEmail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContactListEmail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContactListEmailState, opts ...pulumi.ResourceOption) (*ContactListEmail, error) {
	var resource ContactListEmail
	err := ctx.ReadResource("constellix:contactlists:ContactListEmail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContactListEmail resources.
type contactListEmailState struct {
}

type ContactListEmailState struct {
}

func (ContactListEmailState) ElementType() reflect.Type {
	return reflect.TypeOf((*contactListEmailState)(nil)).Elem()
}

type contactListEmailArgs struct {
	// The email address
	Address *string `pulumi:"address"`
	// The ID of the Contact List
	Id *string `pulumi:"id"`
}

// The set of arguments for constructing a ContactListEmail resource.
type ContactListEmailArgs struct {
	// The email address
	Address pulumi.StringPtrInput
	// The ID of the Contact List
	Id pulumi.StringPtrInput
}

func (ContactListEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contactListEmailArgs)(nil)).Elem()
}

type ContactListEmailInput interface {
	pulumi.Input

	ToContactListEmailOutput() ContactListEmailOutput
	ToContactListEmailOutputWithContext(ctx context.Context) ContactListEmailOutput
}

func (*ContactListEmail) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactListEmail)(nil)).Elem()
}

func (i *ContactListEmail) ToContactListEmailOutput() ContactListEmailOutput {
	return i.ToContactListEmailOutputWithContext(context.Background())
}

func (i *ContactListEmail) ToContactListEmailOutputWithContext(ctx context.Context) ContactListEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactListEmailOutput)
}

type ContactListEmailOutput struct{ *pulumi.OutputState }

func (ContactListEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactListEmail)(nil)).Elem()
}

func (o ContactListEmailOutput) ToContactListEmailOutput() ContactListEmailOutput {
	return o
}

func (o ContactListEmailOutput) ToContactListEmailOutputWithContext(ctx context.Context) ContactListEmailOutput {
	return o
}

// The email address
func (o ContactListEmailOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactListEmail) pulumi.StringPtrOutput { return v.Address }).(pulumi.StringPtrOutput)
}

func (o ContactListEmailOutput) Data() DataPropertiesPtrOutput {
	return o.ApplyT(func(v *ContactListEmail) DataPropertiesPtrOutput { return v.Data }).(DataPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContactListEmailInput)(nil)).Elem(), &ContactListEmail{})
	pulumi.RegisterOutputType(ContactListEmailOutput{})
}
