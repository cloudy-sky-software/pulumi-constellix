// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package contactlists

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListContact(ctx *pulumi.Context, args *ListContactArgs, opts ...pulumi.InvokeOption) (*ListContactResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListContactResult
	err := ctx.Invoke("constellix:contactlists:listContact", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListContactArgs struct {
	// The ID of the Contact List
	ContactlistId string `pulumi:"contactlistId"`
}

type ListContactResult struct {
	// Lists of email addresses used for notifications and messages about domains and records.
	Data *ContactlistType `pulumi:"data"`
}

func ListContactOutput(ctx *pulumi.Context, args ListContactOutputArgs, opts ...pulumi.InvokeOption) ListContactResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListContactResultOutput, error) {
			args := v.(ListContactArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListContactResult
			secret, err := ctx.InvokePackageRaw("constellix:contactlists:listContact", args, &rv, "", opts...)
			if err != nil {
				return ListContactResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListContactResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListContactResultOutput), nil
			}
			return output, nil
		}).(ListContactResultOutput)
}

type ListContactOutputArgs struct {
	// The ID of the Contact List
	ContactlistId pulumi.StringInput `pulumi:"contactlistId"`
}

func (ListContactOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListContactArgs)(nil)).Elem()
}

type ListContactResultOutput struct{ *pulumi.OutputState }

func (ListContactResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListContactResult)(nil)).Elem()
}

func (o ListContactResultOutput) ToListContactResultOutput() ListContactResultOutput {
	return o
}

func (o ListContactResultOutput) ToListContactResultOutputWithContext(ctx context.Context) ListContactResultOutput {
	return o
}

// Lists of email addresses used for notifications and messages about domains and records.
func (o ListContactResultOutput) Data() ContactlistTypePtrOutput {
	return o.ApplyT(func(v ListContactResult) *ContactlistType { return v.Data }).(ContactlistTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListContactResultOutput{})
}
