// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package contactlists

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListContactTeam(ctx *pulumi.Context, args *ListContactTeamArgs, opts ...pulumi.InvokeOption) (*ListContactTeamResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListContactTeamResult
	err := ctx.Invoke("constellix:contactlists:listContactTeam", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListContactTeamArgs struct {
	// The ID of the Contact List
	ContactlistId string `pulumi:"contactlistId"`
	// The ID of the MS Teams Webhook
	Id string `pulumi:"id"`
}

type ListContactTeamResult struct {
	Data *ContactlistTeams `pulumi:"data"`
}

func ListContactTeamOutput(ctx *pulumi.Context, args ListContactTeamOutputArgs, opts ...pulumi.InvokeOption) ListContactTeamResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListContactTeamResultOutput, error) {
			args := v.(ListContactTeamArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListContactTeamResult
			secret, err := ctx.InvokePackageRaw("constellix:contactlists:listContactTeam", args, &rv, "", opts...)
			if err != nil {
				return ListContactTeamResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListContactTeamResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListContactTeamResultOutput), nil
			}
			return output, nil
		}).(ListContactTeamResultOutput)
}

type ListContactTeamOutputArgs struct {
	// The ID of the Contact List
	ContactlistId pulumi.StringInput `pulumi:"contactlistId"`
	// The ID of the MS Teams Webhook
	Id pulumi.StringInput `pulumi:"id"`
}

func (ListContactTeamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListContactTeamArgs)(nil)).Elem()
}

type ListContactTeamResultOutput struct{ *pulumi.OutputState }

func (ListContactTeamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListContactTeamResult)(nil)).Elem()
}

func (o ListContactTeamResultOutput) ToListContactTeamResultOutput() ListContactTeamResultOutput {
	return o
}

func (o ListContactTeamResultOutput) ToListContactTeamResultOutputWithContext(ctx context.Context) ListContactTeamResultOutput {
	return o
}

func (o ListContactTeamResultOutput) Data() ContactlistTeamsPtrOutput {
	return o.ApplyT(func(v ListContactTeamResult) *ContactlistTeams { return v.Data }).(ContactlistTeamsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListContactTeamResultOutput{})
}
