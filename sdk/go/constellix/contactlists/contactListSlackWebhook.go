// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package contactlists

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContactListSlackWebhook struct {
	pulumi.CustomResourceState

	// Slack channel to send notifications to
	Channel pulumi.StringPtrOutput  `pulumi:"channel"`
	Data    DataPropertiesPtrOutput `pulumi:"data"`
	// Incoming Webhook URL
	Webhook pulumi.StringPtrOutput `pulumi:"webhook"`
}

// NewContactListSlackWebhook registers a new resource with the given unique name, arguments, and options.
func NewContactListSlackWebhook(ctx *pulumi.Context,
	name string, args *ContactListSlackWebhookArgs, opts ...pulumi.ResourceOption) (*ContactListSlackWebhook, error) {
	if args == nil {
		args = &ContactListSlackWebhookArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ContactListSlackWebhook
	err := ctx.RegisterResource("constellix:contactlists:ContactListSlackWebhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContactListSlackWebhook gets an existing ContactListSlackWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContactListSlackWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContactListSlackWebhookState, opts ...pulumi.ResourceOption) (*ContactListSlackWebhook, error) {
	var resource ContactListSlackWebhook
	err := ctx.ReadResource("constellix:contactlists:ContactListSlackWebhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContactListSlackWebhook resources.
type contactListSlackWebhookState struct {
}

type ContactListSlackWebhookState struct {
}

func (ContactListSlackWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*contactListSlackWebhookState)(nil)).Elem()
}

type contactListSlackWebhookArgs struct {
	// Slack channel to send notifications to
	Channel *string `pulumi:"channel"`
	// The ID of the Contact List
	Id *string `pulumi:"id"`
	// Incoming Webhook URL
	Webhook *string `pulumi:"webhook"`
}

// The set of arguments for constructing a ContactListSlackWebhook resource.
type ContactListSlackWebhookArgs struct {
	// Slack channel to send notifications to
	Channel pulumi.StringPtrInput
	// The ID of the Contact List
	Id pulumi.StringPtrInput
	// Incoming Webhook URL
	Webhook pulumi.StringPtrInput
}

func (ContactListSlackWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contactListSlackWebhookArgs)(nil)).Elem()
}

type ContactListSlackWebhookInput interface {
	pulumi.Input

	ToContactListSlackWebhookOutput() ContactListSlackWebhookOutput
	ToContactListSlackWebhookOutputWithContext(ctx context.Context) ContactListSlackWebhookOutput
}

func (*ContactListSlackWebhook) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactListSlackWebhook)(nil)).Elem()
}

func (i *ContactListSlackWebhook) ToContactListSlackWebhookOutput() ContactListSlackWebhookOutput {
	return i.ToContactListSlackWebhookOutputWithContext(context.Background())
}

func (i *ContactListSlackWebhook) ToContactListSlackWebhookOutputWithContext(ctx context.Context) ContactListSlackWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactListSlackWebhookOutput)
}

type ContactListSlackWebhookOutput struct{ *pulumi.OutputState }

func (ContactListSlackWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactListSlackWebhook)(nil)).Elem()
}

func (o ContactListSlackWebhookOutput) ToContactListSlackWebhookOutput() ContactListSlackWebhookOutput {
	return o
}

func (o ContactListSlackWebhookOutput) ToContactListSlackWebhookOutputWithContext(ctx context.Context) ContactListSlackWebhookOutput {
	return o
}

// Slack channel to send notifications to
func (o ContactListSlackWebhookOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactListSlackWebhook) pulumi.StringPtrOutput { return v.Channel }).(pulumi.StringPtrOutput)
}

func (o ContactListSlackWebhookOutput) Data() DataPropertiesPtrOutput {
	return o.ApplyT(func(v *ContactListSlackWebhook) DataPropertiesPtrOutput { return v.Data }).(DataPropertiesPtrOutput)
}

// Incoming Webhook URL
func (o ContactListSlackWebhookOutput) Webhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactListSlackWebhook) pulumi.StringPtrOutput { return v.Webhook }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContactListSlackWebhookInput)(nil)).Elem(), &ContactListSlackWebhook{})
	pulumi.RegisterOutputType(ContactListSlackWebhookOutput{})
}
