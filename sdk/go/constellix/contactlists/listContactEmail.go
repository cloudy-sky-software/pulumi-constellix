// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package contactlists

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListContactEmail(ctx *pulumi.Context, args *ListContactEmailArgs, opts ...pulumi.InvokeOption) (*ListContactEmailResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListContactEmailResult
	err := ctx.Invoke("constellix:contactlists:listContactEmail", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListContactEmailArgs struct {
	// The ID of the Contact List
	ContactlistId string `pulumi:"contactlistId"`
	// The ID of the email address
	Id string `pulumi:"id"`
}

type ListContactEmailResult struct {
	Data *ContactlistEmailType `pulumi:"data"`
}

func ListContactEmailOutput(ctx *pulumi.Context, args ListContactEmailOutputArgs, opts ...pulumi.InvokeOption) ListContactEmailResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListContactEmailResultOutput, error) {
			args := v.(ListContactEmailArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListContactEmailResult
			secret, err := ctx.InvokePackageRaw("constellix:contactlists:listContactEmail", args, &rv, "", opts...)
			if err != nil {
				return ListContactEmailResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListContactEmailResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListContactEmailResultOutput), nil
			}
			return output, nil
		}).(ListContactEmailResultOutput)
}

type ListContactEmailOutputArgs struct {
	// The ID of the Contact List
	ContactlistId pulumi.StringInput `pulumi:"contactlistId"`
	// The ID of the email address
	Id pulumi.StringInput `pulumi:"id"`
}

func (ListContactEmailOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListContactEmailArgs)(nil)).Elem()
}

type ListContactEmailResultOutput struct{ *pulumi.OutputState }

func (ListContactEmailResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListContactEmailResult)(nil)).Elem()
}

func (o ListContactEmailResultOutput) ToListContactEmailResultOutput() ListContactEmailResultOutput {
	return o
}

func (o ListContactEmailResultOutput) ToListContactEmailResultOutputWithContext(ctx context.Context) ListContactEmailResultOutput {
	return o
}

func (o ListContactEmailResultOutput) Data() ContactlistEmailTypePtrOutput {
	return o.ApplyT(func(v ListContactEmailResult) *ContactlistEmailType { return v.Data }).(ContactlistEmailTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListContactEmailResultOutput{})
}
