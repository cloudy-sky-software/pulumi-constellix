// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package contactlists

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListContactEmails(ctx *pulumi.Context, args *ListContactEmailsArgs, opts ...pulumi.InvokeOption) (*ListContactEmailsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListContactEmailsResult
	err := ctx.Invoke("constellix:contactlists:listContactEmails", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListContactEmailsArgs struct {
	// The ID of the Contact List
	Id string `pulumi:"id"`
}

type ListContactEmailsResult struct {
	// The emails for this page
	Data []ContactlistEmailType `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

func ListContactEmailsOutput(ctx *pulumi.Context, args ListContactEmailsOutputArgs, opts ...pulumi.InvokeOption) ListContactEmailsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListContactEmailsResultOutput, error) {
			args := v.(ListContactEmailsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListContactEmailsResult
			secret, err := ctx.InvokePackageRaw("constellix:contactlists:listContactEmails", args, &rv, "", opts...)
			if err != nil {
				return ListContactEmailsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListContactEmailsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListContactEmailsResultOutput), nil
			}
			return output, nil
		}).(ListContactEmailsResultOutput)
}

type ListContactEmailsOutputArgs struct {
	// The ID of the Contact List
	Id pulumi.StringInput `pulumi:"id"`
}

func (ListContactEmailsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListContactEmailsArgs)(nil)).Elem()
}

type ListContactEmailsResultOutput struct{ *pulumi.OutputState }

func (ListContactEmailsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListContactEmailsResult)(nil)).Elem()
}

func (o ListContactEmailsResultOutput) ToListContactEmailsResultOutput() ListContactEmailsResultOutput {
	return o
}

func (o ListContactEmailsResultOutput) ToListContactEmailsResultOutputWithContext(ctx context.Context) ListContactEmailsResultOutput {
	return o
}

// The emails for this page
func (o ListContactEmailsResultOutput) Data() ContactlistEmailTypeArrayOutput {
	return o.ApplyT(func(v ListContactEmailsResult) []ContactlistEmailType { return v.Data }).(ContactlistEmailTypeArrayOutput)
}

// Metadata for list responses
func (o ListContactEmailsResultOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListContactEmailsResult) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListContactEmailsResultOutput{})
}
