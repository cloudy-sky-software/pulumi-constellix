// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package contactlists

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListContacts(ctx *pulumi.Context, args *ListContactsArgs, opts ...pulumi.InvokeOption) (*ListContactsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListContactsResult
	err := ctx.Invoke("constellix:contactlists:listContacts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListContactsArgs struct {
}

type ListContactsResult struct {
	Data []Contactlistwithoutemails `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

func ListContactsOutput(ctx *pulumi.Context, args ListContactsOutputArgs, opts ...pulumi.InvokeOption) ListContactsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListContactsResultOutput, error) {
			args := v.(ListContactsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListContactsResult
			secret, err := ctx.InvokePackageRaw("constellix:contactlists:listContacts", args, &rv, "", opts...)
			if err != nil {
				return ListContactsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListContactsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListContactsResultOutput), nil
			}
			return output, nil
		}).(ListContactsResultOutput)
}

type ListContactsOutputArgs struct {
}

func (ListContactsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListContactsArgs)(nil)).Elem()
}

type ListContactsResultOutput struct{ *pulumi.OutputState }

func (ListContactsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListContactsResult)(nil)).Elem()
}

func (o ListContactsResultOutput) ToListContactsResultOutput() ListContactsResultOutput {
	return o
}

func (o ListContactsResultOutput) ToListContactsResultOutputWithContext(ctx context.Context) ListContactsResultOutput {
	return o
}

func (o ListContactsResultOutput) Data() ContactlistwithoutemailsArrayOutput {
	return o.ApplyT(func(v ListContactsResult) []Contactlistwithoutemails { return v.Data }).(ContactlistwithoutemailsArrayOutput)
}

// Metadata for list responses
func (o ListContactsResultOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListContactsResult) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListContactsResultOutput{})
}
