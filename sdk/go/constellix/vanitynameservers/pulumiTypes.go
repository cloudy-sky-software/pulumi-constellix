// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vanitynameservers

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DataProperties struct {
	// The ID of the object
	Id    *int                           `pulumi:"id"`
	Links *DataPropertiesLinksProperties `pulumi:"links"`
}

type DataPropertiesOutput struct{ *pulumi.OutputState }

func (DataPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataProperties)(nil)).Elem()
}

func (o DataPropertiesOutput) ToDataPropertiesOutput() DataPropertiesOutput {
	return o
}

func (o DataPropertiesOutput) ToDataPropertiesOutputWithContext(ctx context.Context) DataPropertiesOutput {
	return o
}

// The ID of the object
func (o DataPropertiesOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataProperties) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o DataPropertiesOutput) Links() DataPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v DataProperties) *DataPropertiesLinksProperties { return v.Links }).(DataPropertiesLinksPropertiesPtrOutput)
}

type DataPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataProperties)(nil)).Elem()
}

func (o DataPropertiesPtrOutput) ToDataPropertiesPtrOutput() DataPropertiesPtrOutput {
	return o
}

func (o DataPropertiesPtrOutput) ToDataPropertiesPtrOutputWithContext(ctx context.Context) DataPropertiesPtrOutput {
	return o
}

func (o DataPropertiesPtrOutput) Elem() DataPropertiesOutput {
	return o.ApplyT(func(v *DataProperties) DataProperties {
		if v != nil {
			return *v
		}
		var ret DataProperties
		return ret
	}).(DataPropertiesOutput)
}

// The ID of the object
func (o DataPropertiesPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataProperties) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

func (o DataPropertiesPtrOutput) Links() DataPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *DataProperties) *DataPropertiesLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(DataPropertiesLinksPropertiesPtrOutput)
}

type DataPropertiesLinksProperties struct {
	// The URL for the new object
	Self *string `pulumi:"self"`
}

type DataPropertiesLinksPropertiesOutput struct{ *pulumi.OutputState }

func (DataPropertiesLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPropertiesLinksProperties)(nil)).Elem()
}

func (o DataPropertiesLinksPropertiesOutput) ToDataPropertiesLinksPropertiesOutput() DataPropertiesLinksPropertiesOutput {
	return o
}

func (o DataPropertiesLinksPropertiesOutput) ToDataPropertiesLinksPropertiesOutputWithContext(ctx context.Context) DataPropertiesLinksPropertiesOutput {
	return o
}

// The URL for the new object
func (o DataPropertiesLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPropertiesLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type DataPropertiesLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataPropertiesLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPropertiesLinksProperties)(nil)).Elem()
}

func (o DataPropertiesLinksPropertiesPtrOutput) ToDataPropertiesLinksPropertiesPtrOutput() DataPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o DataPropertiesLinksPropertiesPtrOutput) ToDataPropertiesLinksPropertiesPtrOutputWithContext(ctx context.Context) DataPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o DataPropertiesLinksPropertiesPtrOutput) Elem() DataPropertiesLinksPropertiesOutput {
	return o.ApplyT(func(v *DataPropertiesLinksProperties) DataPropertiesLinksProperties {
		if v != nil {
			return *v
		}
		var ret DataPropertiesLinksProperties
		return ret
	}).(DataPropertiesLinksPropertiesOutput)
}

// The URL for the new object
func (o DataPropertiesLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPropertiesLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type GetVanityNameserverProperties struct {
	// A rebranded nameserver using your own domain name.
	Data *VanitynameserverType `pulumi:"data"`
}

type GetVanityNameserverPropertiesOutput struct{ *pulumi.OutputState }

func (GetVanityNameserverPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVanityNameserverProperties)(nil)).Elem()
}

func (o GetVanityNameserverPropertiesOutput) ToGetVanityNameserverPropertiesOutput() GetVanityNameserverPropertiesOutput {
	return o
}

func (o GetVanityNameserverPropertiesOutput) ToGetVanityNameserverPropertiesOutputWithContext(ctx context.Context) GetVanityNameserverPropertiesOutput {
	return o
}

// A rebranded nameserver using your own domain name.
func (o GetVanityNameserverPropertiesOutput) Data() VanitynameserverTypePtrOutput {
	return o.ApplyT(func(v GetVanityNameserverProperties) *VanitynameserverType { return v.Data }).(VanitynameserverTypePtrOutput)
}

// Metadata for list responses
type ListMetadata struct {
	// Relevant links for this list
	Links *ListMetadataLinksProperties `pulumi:"links"`
	// Pagination details
	Pagination *ListMetadataPaginationProperties `pulumi:"pagination"`
}

// Metadata for list responses
type ListMetadataOutput struct{ *pulumi.OutputState }

func (ListMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadata)(nil)).Elem()
}

func (o ListMetadataOutput) ToListMetadataOutput() ListMetadataOutput {
	return o
}

func (o ListMetadataOutput) ToListMetadataOutputWithContext(ctx context.Context) ListMetadataOutput {
	return o
}

// Relevant links for this list
func (o ListMetadataOutput) Links() ListMetadataLinksPropertiesPtrOutput {
	return o.ApplyT(func(v ListMetadata) *ListMetadataLinksProperties { return v.Links }).(ListMetadataLinksPropertiesPtrOutput)
}

// Pagination details
func (o ListMetadataOutput) Pagination() ListMetadataPaginationPropertiesPtrOutput {
	return o.ApplyT(func(v ListMetadata) *ListMetadataPaginationProperties { return v.Pagination }).(ListMetadataPaginationPropertiesPtrOutput)
}

type ListMetadataPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadata)(nil)).Elem()
}

func (o ListMetadataPtrOutput) ToListMetadataPtrOutput() ListMetadataPtrOutput {
	return o
}

func (o ListMetadataPtrOutput) ToListMetadataPtrOutputWithContext(ctx context.Context) ListMetadataPtrOutput {
	return o
}

func (o ListMetadataPtrOutput) Elem() ListMetadataOutput {
	return o.ApplyT(func(v *ListMetadata) ListMetadata {
		if v != nil {
			return *v
		}
		var ret ListMetadata
		return ret
	}).(ListMetadataOutput)
}

// Relevant links for this list
func (o ListMetadataPtrOutput) Links() ListMetadataLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *ListMetadata) *ListMetadataLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(ListMetadataLinksPropertiesPtrOutput)
}

// Pagination details
func (o ListMetadataPtrOutput) Pagination() ListMetadataPaginationPropertiesPtrOutput {
	return o.ApplyT(func(v *ListMetadata) *ListMetadataPaginationProperties {
		if v == nil {
			return nil
		}
		return v.Pagination
	}).(ListMetadataPaginationPropertiesPtrOutput)
}

// Relevant links for this list
type ListMetadataLinksProperties struct {
	First    *string `pulumi:"first"`
	Last     *string `pulumi:"last"`
	Next     *string `pulumi:"next"`
	Previous *string `pulumi:"previous"`
	Self     *string `pulumi:"self"`
}

// Relevant links for this list
type ListMetadataLinksPropertiesOutput struct{ *pulumi.OutputState }

func (ListMetadataLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadataLinksProperties)(nil)).Elem()
}

func (o ListMetadataLinksPropertiesOutput) ToListMetadataLinksPropertiesOutput() ListMetadataLinksPropertiesOutput {
	return o
}

func (o ListMetadataLinksPropertiesOutput) ToListMetadataLinksPropertiesOutputWithContext(ctx context.Context) ListMetadataLinksPropertiesOutput {
	return o
}

func (o ListMetadataLinksPropertiesOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.First }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Last }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Previous() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Previous }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type ListMetadataLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadataLinksProperties)(nil)).Elem()
}

func (o ListMetadataLinksPropertiesPtrOutput) ToListMetadataLinksPropertiesPtrOutput() ListMetadataLinksPropertiesPtrOutput {
	return o
}

func (o ListMetadataLinksPropertiesPtrOutput) ToListMetadataLinksPropertiesPtrOutputWithContext(ctx context.Context) ListMetadataLinksPropertiesPtrOutput {
	return o
}

func (o ListMetadataLinksPropertiesPtrOutput) Elem() ListMetadataLinksPropertiesOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) ListMetadataLinksProperties {
		if v != nil {
			return *v
		}
		var ret ListMetadataLinksProperties
		return ret
	}).(ListMetadataLinksPropertiesOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.First
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Last
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Previous() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Previous
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// Pagination details
type ListMetadataPaginationProperties struct {
	// The number of items in this page of the response
	Count *int `pulumi:"count"`
	// The current results page
	CurrentPage *int `pulumi:"currentPage"`
	// The number of items per page
	PerPage *int `pulumi:"perPage"`
	// The total number of objects matching the query
	Total *int `pulumi:"total"`
	// The total number of pages
	TotalPages *int `pulumi:"totalPages"`
}

// Pagination details
type ListMetadataPaginationPropertiesOutput struct{ *pulumi.OutputState }

func (ListMetadataPaginationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadataPaginationProperties)(nil)).Elem()
}

func (o ListMetadataPaginationPropertiesOutput) ToListMetadataPaginationPropertiesOutput() ListMetadataPaginationPropertiesOutput {
	return o
}

func (o ListMetadataPaginationPropertiesOutput) ToListMetadataPaginationPropertiesOutputWithContext(ctx context.Context) ListMetadataPaginationPropertiesOutput {
	return o
}

// The number of items in this page of the response
func (o ListMetadataPaginationPropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The current results page
func (o ListMetadataPaginationPropertiesOutput) CurrentPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.CurrentPage }).(pulumi.IntPtrOutput)
}

// The number of items per page
func (o ListMetadataPaginationPropertiesOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// The total number of objects matching the query
func (o ListMetadataPaginationPropertiesOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.Total }).(pulumi.IntPtrOutput)
}

// The total number of pages
func (o ListMetadataPaginationPropertiesOutput) TotalPages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.TotalPages }).(pulumi.IntPtrOutput)
}

type ListMetadataPaginationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataPaginationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadataPaginationProperties)(nil)).Elem()
}

func (o ListMetadataPaginationPropertiesPtrOutput) ToListMetadataPaginationPropertiesPtrOutput() ListMetadataPaginationPropertiesPtrOutput {
	return o
}

func (o ListMetadataPaginationPropertiesPtrOutput) ToListMetadataPaginationPropertiesPtrOutputWithContext(ctx context.Context) ListMetadataPaginationPropertiesPtrOutput {
	return o
}

func (o ListMetadataPaginationPropertiesPtrOutput) Elem() ListMetadataPaginationPropertiesOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) ListMetadataPaginationProperties {
		if v != nil {
			return *v
		}
		var ret ListMetadataPaginationProperties
		return ret
	}).(ListMetadataPaginationPropertiesOutput)
}

// The number of items in this page of the response
func (o ListMetadataPaginationPropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The current results page
func (o ListMetadataPaginationPropertiesPtrOutput) CurrentPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.CurrentPage
	}).(pulumi.IntPtrOutput)
}

// The number of items per page
func (o ListMetadataPaginationPropertiesPtrOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.PerPage
	}).(pulumi.IntPtrOutput)
}

// The total number of objects matching the query
func (o ListMetadataPaginationPropertiesPtrOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.Total
	}).(pulumi.IntPtrOutput)
}

// The total number of pages
func (o ListMetadataPaginationPropertiesPtrOutput) TotalPages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.TotalPages
	}).(pulumi.IntPtrOutput)
}

type ListVanityNameserversProperties struct {
	Data []VanitynameserverType `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

type ListVanityNameserversPropertiesOutput struct{ *pulumi.OutputState }

func (ListVanityNameserversPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListVanityNameserversProperties)(nil)).Elem()
}

func (o ListVanityNameserversPropertiesOutput) ToListVanityNameserversPropertiesOutput() ListVanityNameserversPropertiesOutput {
	return o
}

func (o ListVanityNameserversPropertiesOutput) ToListVanityNameserversPropertiesOutputWithContext(ctx context.Context) ListVanityNameserversPropertiesOutput {
	return o
}

func (o ListVanityNameserversPropertiesOutput) Data() VanitynameserverTypeArrayOutput {
	return o.ApplyT(func(v ListVanityNameserversProperties) []VanitynameserverType { return v.Data }).(VanitynameserverTypeArrayOutput)
}

// Metadata for list responses
func (o ListVanityNameserversPropertiesOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListVanityNameserversProperties) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

type NameserverGroupProperties struct {
	// The ID of the nameserver group
	Id *int `pulumi:"id"`
}

// NameserverGroupPropertiesInput is an input type that accepts NameserverGroupPropertiesArgs and NameserverGroupPropertiesOutput values.
// You can construct a concrete instance of `NameserverGroupPropertiesInput` via:
//
//	NameserverGroupPropertiesArgs{...}
type NameserverGroupPropertiesInput interface {
	pulumi.Input

	ToNameserverGroupPropertiesOutput() NameserverGroupPropertiesOutput
	ToNameserverGroupPropertiesOutputWithContext(context.Context) NameserverGroupPropertiesOutput
}

type NameserverGroupPropertiesArgs struct {
	// The ID of the nameserver group
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (NameserverGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameserverGroupProperties)(nil)).Elem()
}

func (i NameserverGroupPropertiesArgs) ToNameserverGroupPropertiesOutput() NameserverGroupPropertiesOutput {
	return i.ToNameserverGroupPropertiesOutputWithContext(context.Background())
}

func (i NameserverGroupPropertiesArgs) ToNameserverGroupPropertiesOutputWithContext(ctx context.Context) NameserverGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameserverGroupPropertiesOutput)
}

func (i NameserverGroupPropertiesArgs) ToNameserverGroupPropertiesPtrOutput() NameserverGroupPropertiesPtrOutput {
	return i.ToNameserverGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i NameserverGroupPropertiesArgs) ToNameserverGroupPropertiesPtrOutputWithContext(ctx context.Context) NameserverGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameserverGroupPropertiesOutput).ToNameserverGroupPropertiesPtrOutputWithContext(ctx)
}

// NameserverGroupPropertiesPtrInput is an input type that accepts NameserverGroupPropertiesArgs, NameserverGroupPropertiesPtr and NameserverGroupPropertiesPtrOutput values.
// You can construct a concrete instance of `NameserverGroupPropertiesPtrInput` via:
//
//	        NameserverGroupPropertiesArgs{...}
//
//	or:
//
//	        nil
type NameserverGroupPropertiesPtrInput interface {
	pulumi.Input

	ToNameserverGroupPropertiesPtrOutput() NameserverGroupPropertiesPtrOutput
	ToNameserverGroupPropertiesPtrOutputWithContext(context.Context) NameserverGroupPropertiesPtrOutput
}

type nameserverGroupPropertiesPtrType NameserverGroupPropertiesArgs

func NameserverGroupPropertiesPtr(v *NameserverGroupPropertiesArgs) NameserverGroupPropertiesPtrInput {
	return (*nameserverGroupPropertiesPtrType)(v)
}

func (*nameserverGroupPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NameserverGroupProperties)(nil)).Elem()
}

func (i *nameserverGroupPropertiesPtrType) ToNameserverGroupPropertiesPtrOutput() NameserverGroupPropertiesPtrOutput {
	return i.ToNameserverGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i *nameserverGroupPropertiesPtrType) ToNameserverGroupPropertiesPtrOutputWithContext(ctx context.Context) NameserverGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameserverGroupPropertiesPtrOutput)
}

type NameserverGroupPropertiesOutput struct{ *pulumi.OutputState }

func (NameserverGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameserverGroupProperties)(nil)).Elem()
}

func (o NameserverGroupPropertiesOutput) ToNameserverGroupPropertiesOutput() NameserverGroupPropertiesOutput {
	return o
}

func (o NameserverGroupPropertiesOutput) ToNameserverGroupPropertiesOutputWithContext(ctx context.Context) NameserverGroupPropertiesOutput {
	return o
}

func (o NameserverGroupPropertiesOutput) ToNameserverGroupPropertiesPtrOutput() NameserverGroupPropertiesPtrOutput {
	return o.ToNameserverGroupPropertiesPtrOutputWithContext(context.Background())
}

func (o NameserverGroupPropertiesOutput) ToNameserverGroupPropertiesPtrOutputWithContext(ctx context.Context) NameserverGroupPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NameserverGroupProperties) *NameserverGroupProperties {
		return &v
	}).(NameserverGroupPropertiesPtrOutput)
}

// The ID of the nameserver group
func (o NameserverGroupPropertiesOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NameserverGroupProperties) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type NameserverGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (NameserverGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NameserverGroupProperties)(nil)).Elem()
}

func (o NameserverGroupPropertiesPtrOutput) ToNameserverGroupPropertiesPtrOutput() NameserverGroupPropertiesPtrOutput {
	return o
}

func (o NameserverGroupPropertiesPtrOutput) ToNameserverGroupPropertiesPtrOutputWithContext(ctx context.Context) NameserverGroupPropertiesPtrOutput {
	return o
}

func (o NameserverGroupPropertiesPtrOutput) Elem() NameserverGroupPropertiesOutput {
	return o.ApplyT(func(v *NameserverGroupProperties) NameserverGroupProperties {
		if v != nil {
			return *v
		}
		var ret NameserverGroupProperties
		return ret
	}).(NameserverGroupPropertiesOutput)
}

// The ID of the nameserver group
func (o NameserverGroupPropertiesPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NameserverGroupProperties) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// A rebranded nameserver using your own domain name.
type VanitynameserverType struct {
	// Is this the default nameserver for domains in the account
	Default *bool `pulumi:"default"`
	// A unique ID for the vanity nameserver
	Id *int `pulumi:"id"`
	// Links for domain objects
	Links *VanitynameserverLinksProperties `pulumi:"links"`
	// A unique name for this vanity nameserver
	Name            *string                                    `pulumi:"name"`
	NameserverGroup *VanitynameserverNameserverGroupProperties `pulumi:"nameserverGroup"`
	// The nameserver hostnames
	Nameservers []string `pulumi:"nameservers"`
	// Is this nameserver public?
	Public *bool `pulumi:"public"`
}

// A rebranded nameserver using your own domain name.
type VanitynameserverTypeOutput struct{ *pulumi.OutputState }

func (VanitynameserverTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VanitynameserverType)(nil)).Elem()
}

func (o VanitynameserverTypeOutput) ToVanitynameserverTypeOutput() VanitynameserverTypeOutput {
	return o
}

func (o VanitynameserverTypeOutput) ToVanitynameserverTypeOutputWithContext(ctx context.Context) VanitynameserverTypeOutput {
	return o
}

// Is this the default nameserver for domains in the account
func (o VanitynameserverTypeOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VanitynameserverType) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// A unique ID for the vanity nameserver
func (o VanitynameserverTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VanitynameserverType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links for domain objects
func (o VanitynameserverTypeOutput) Links() VanitynameserverLinksPropertiesPtrOutput {
	return o.ApplyT(func(v VanitynameserverType) *VanitynameserverLinksProperties { return v.Links }).(VanitynameserverLinksPropertiesPtrOutput)
}

// A unique name for this vanity nameserver
func (o VanitynameserverTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VanitynameserverType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o VanitynameserverTypeOutput) NameserverGroup() VanitynameserverNameserverGroupPropertiesPtrOutput {
	return o.ApplyT(func(v VanitynameserverType) *VanitynameserverNameserverGroupProperties { return v.NameserverGroup }).(VanitynameserverNameserverGroupPropertiesPtrOutput)
}

// The nameserver hostnames
func (o VanitynameserverTypeOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VanitynameserverType) []string { return v.Nameservers }).(pulumi.StringArrayOutput)
}

// Is this nameserver public?
func (o VanitynameserverTypeOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VanitynameserverType) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

type VanitynameserverTypePtrOutput struct{ *pulumi.OutputState }

func (VanitynameserverTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VanitynameserverType)(nil)).Elem()
}

func (o VanitynameserverTypePtrOutput) ToVanitynameserverTypePtrOutput() VanitynameserverTypePtrOutput {
	return o
}

func (o VanitynameserverTypePtrOutput) ToVanitynameserverTypePtrOutputWithContext(ctx context.Context) VanitynameserverTypePtrOutput {
	return o
}

func (o VanitynameserverTypePtrOutput) Elem() VanitynameserverTypeOutput {
	return o.ApplyT(func(v *VanitynameserverType) VanitynameserverType {
		if v != nil {
			return *v
		}
		var ret VanitynameserverType
		return ret
	}).(VanitynameserverTypeOutput)
}

// Is this the default nameserver for domains in the account
func (o VanitynameserverTypePtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VanitynameserverType) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// A unique ID for the vanity nameserver
func (o VanitynameserverTypePtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VanitynameserverType) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// Links for domain objects
func (o VanitynameserverTypePtrOutput) Links() VanitynameserverLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *VanitynameserverType) *VanitynameserverLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(VanitynameserverLinksPropertiesPtrOutput)
}

// A unique name for this vanity nameserver
func (o VanitynameserverTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VanitynameserverType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o VanitynameserverTypePtrOutput) NameserverGroup() VanitynameserverNameserverGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *VanitynameserverType) *VanitynameserverNameserverGroupProperties {
		if v == nil {
			return nil
		}
		return v.NameserverGroup
	}).(VanitynameserverNameserverGroupPropertiesPtrOutput)
}

// The nameserver hostnames
func (o VanitynameserverTypePtrOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VanitynameserverType) []string {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(pulumi.StringArrayOutput)
}

// Is this nameserver public?
func (o VanitynameserverTypePtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VanitynameserverType) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

type VanitynameserverTypeArrayOutput struct{ *pulumi.OutputState }

func (VanitynameserverTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VanitynameserverType)(nil)).Elem()
}

func (o VanitynameserverTypeArrayOutput) ToVanitynameserverTypeArrayOutput() VanitynameserverTypeArrayOutput {
	return o
}

func (o VanitynameserverTypeArrayOutput) ToVanitynameserverTypeArrayOutputWithContext(ctx context.Context) VanitynameserverTypeArrayOutput {
	return o
}

func (o VanitynameserverTypeArrayOutput) Index(i pulumi.IntInput) VanitynameserverTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VanitynameserverType {
		return vs[0].([]VanitynameserverType)[vs[1].(int)]
	}).(VanitynameserverTypeOutput)
}

// Links for domain objects
type VanitynameserverLinksProperties struct {
	Self *string `pulumi:"self"`
}

// Links for domain objects
type VanitynameserverLinksPropertiesOutput struct{ *pulumi.OutputState }

func (VanitynameserverLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VanitynameserverLinksProperties)(nil)).Elem()
}

func (o VanitynameserverLinksPropertiesOutput) ToVanitynameserverLinksPropertiesOutput() VanitynameserverLinksPropertiesOutput {
	return o
}

func (o VanitynameserverLinksPropertiesOutput) ToVanitynameserverLinksPropertiesOutputWithContext(ctx context.Context) VanitynameserverLinksPropertiesOutput {
	return o
}

func (o VanitynameserverLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VanitynameserverLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type VanitynameserverLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VanitynameserverLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VanitynameserverLinksProperties)(nil)).Elem()
}

func (o VanitynameserverLinksPropertiesPtrOutput) ToVanitynameserverLinksPropertiesPtrOutput() VanitynameserverLinksPropertiesPtrOutput {
	return o
}

func (o VanitynameserverLinksPropertiesPtrOutput) ToVanitynameserverLinksPropertiesPtrOutputWithContext(ctx context.Context) VanitynameserverLinksPropertiesPtrOutput {
	return o
}

func (o VanitynameserverLinksPropertiesPtrOutput) Elem() VanitynameserverLinksPropertiesOutput {
	return o.ApplyT(func(v *VanitynameserverLinksProperties) VanitynameserverLinksProperties {
		if v != nil {
			return *v
		}
		var ret VanitynameserverLinksProperties
		return ret
	}).(VanitynameserverLinksPropertiesOutput)
}

func (o VanitynameserverLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VanitynameserverLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type VanitynameserverNameserverGroupProperties struct {
	// The ID of the nameserver group
	Id *int `pulumi:"id"`
	// The name of the nameserver group
	Name *string `pulumi:"name"`
}

type VanitynameserverNameserverGroupPropertiesOutput struct{ *pulumi.OutputState }

func (VanitynameserverNameserverGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VanitynameserverNameserverGroupProperties)(nil)).Elem()
}

func (o VanitynameserverNameserverGroupPropertiesOutput) ToVanitynameserverNameserverGroupPropertiesOutput() VanitynameserverNameserverGroupPropertiesOutput {
	return o
}

func (o VanitynameserverNameserverGroupPropertiesOutput) ToVanitynameserverNameserverGroupPropertiesOutputWithContext(ctx context.Context) VanitynameserverNameserverGroupPropertiesOutput {
	return o
}

// The ID of the nameserver group
func (o VanitynameserverNameserverGroupPropertiesOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VanitynameserverNameserverGroupProperties) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// The name of the nameserver group
func (o VanitynameserverNameserverGroupPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VanitynameserverNameserverGroupProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VanitynameserverNameserverGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VanitynameserverNameserverGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VanitynameserverNameserverGroupProperties)(nil)).Elem()
}

func (o VanitynameserverNameserverGroupPropertiesPtrOutput) ToVanitynameserverNameserverGroupPropertiesPtrOutput() VanitynameserverNameserverGroupPropertiesPtrOutput {
	return o
}

func (o VanitynameserverNameserverGroupPropertiesPtrOutput) ToVanitynameserverNameserverGroupPropertiesPtrOutputWithContext(ctx context.Context) VanitynameserverNameserverGroupPropertiesPtrOutput {
	return o
}

func (o VanitynameserverNameserverGroupPropertiesPtrOutput) Elem() VanitynameserverNameserverGroupPropertiesOutput {
	return o.ApplyT(func(v *VanitynameserverNameserverGroupProperties) VanitynameserverNameserverGroupProperties {
		if v != nil {
			return *v
		}
		var ret VanitynameserverNameserverGroupProperties
		return ret
	}).(VanitynameserverNameserverGroupPropertiesOutput)
}

// The ID of the nameserver group
func (o VanitynameserverNameserverGroupPropertiesPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VanitynameserverNameserverGroupProperties) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// The name of the nameserver group
func (o VanitynameserverNameserverGroupPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VanitynameserverNameserverGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NameserverGroupPropertiesInput)(nil)).Elem(), NameserverGroupPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NameserverGroupPropertiesPtrInput)(nil)).Elem(), NameserverGroupPropertiesArgs{})
	pulumi.RegisterOutputType(DataPropertiesOutput{})
	pulumi.RegisterOutputType(DataPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataPropertiesLinksPropertiesOutput{})
	pulumi.RegisterOutputType(DataPropertiesLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GetVanityNameserverPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataOutput{})
	pulumi.RegisterOutputType(ListMetadataPtrOutput{})
	pulumi.RegisterOutputType(ListMetadataLinksPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ListMetadataPaginationPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataPaginationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ListVanityNameserversPropertiesOutput{})
	pulumi.RegisterOutputType(NameserverGroupPropertiesOutput{})
	pulumi.RegisterOutputType(NameserverGroupPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VanitynameserverTypeOutput{})
	pulumi.RegisterOutputType(VanitynameserverTypePtrOutput{})
	pulumi.RegisterOutputType(VanitynameserverTypeArrayOutput{})
	pulumi.RegisterOutputType(VanitynameserverLinksPropertiesOutput{})
	pulumi.RegisterOutputType(VanitynameserverLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VanitynameserverNameserverGroupPropertiesOutput{})
	pulumi.RegisterOutputType(VanitynameserverNameserverGroupPropertiesPtrOutput{})
}
