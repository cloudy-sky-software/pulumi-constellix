// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package announcements

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetAnnouncement(ctx *pulumi.Context, args *GetAnnouncementArgs, opts ...pulumi.InvokeOption) (*GetAnnouncementResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAnnouncementResult
	err := ctx.Invoke("constellix:announcements:getAnnouncement", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetAnnouncementArgs struct {
	// The ID of the announcement
	Id string `pulumi:"id"`
}

type GetAnnouncementResult struct {
	Data *Announcement `pulumi:"data"`
}

func GetAnnouncementOutput(ctx *pulumi.Context, args GetAnnouncementOutputArgs, opts ...pulumi.InvokeOption) GetAnnouncementResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAnnouncementResultOutput, error) {
			args := v.(GetAnnouncementArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetAnnouncementResult
			secret, err := ctx.InvokePackageRaw("constellix:announcements:getAnnouncement", args, &rv, "", opts...)
			if err != nil {
				return GetAnnouncementResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetAnnouncementResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetAnnouncementResultOutput), nil
			}
			return output, nil
		}).(GetAnnouncementResultOutput)
}

type GetAnnouncementOutputArgs struct {
	// The ID of the announcement
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAnnouncementOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAnnouncementArgs)(nil)).Elem()
}

type GetAnnouncementResultOutput struct{ *pulumi.OutputState }

func (GetAnnouncementResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAnnouncementResult)(nil)).Elem()
}

func (o GetAnnouncementResultOutput) ToGetAnnouncementResultOutput() GetAnnouncementResultOutput {
	return o
}

func (o GetAnnouncementResultOutput) ToGetAnnouncementResultOutputWithContext(ctx context.Context) GetAnnouncementResultOutput {
	return o
}

func (o GetAnnouncementResultOutput) Data() AnnouncementPtrOutput {
	return o.ApplyT(func(v GetAnnouncementResult) *Announcement { return v.Data }).(AnnouncementPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAnnouncementResultOutput{})
}
