// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domains

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DataProperties struct {
	Links *DataPropertiesLinksProperties `pulumi:"links"`
	// The version of the snapshot
	Version *int `pulumi:"version"`
}

type DataPropertiesOutput struct{ *pulumi.OutputState }

func (DataPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataProperties)(nil)).Elem()
}

func (o DataPropertiesOutput) ToDataPropertiesOutput() DataPropertiesOutput {
	return o
}

func (o DataPropertiesOutput) ToDataPropertiesOutputWithContext(ctx context.Context) DataPropertiesOutput {
	return o
}

func (o DataPropertiesOutput) Links() DataPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v DataProperties) *DataPropertiesLinksProperties { return v.Links }).(DataPropertiesLinksPropertiesPtrOutput)
}

// The version of the snapshot
func (o DataPropertiesOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataProperties) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type DataPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataProperties)(nil)).Elem()
}

func (o DataPropertiesPtrOutput) ToDataPropertiesPtrOutput() DataPropertiesPtrOutput {
	return o
}

func (o DataPropertiesPtrOutput) ToDataPropertiesPtrOutputWithContext(ctx context.Context) DataPropertiesPtrOutput {
	return o
}

func (o DataPropertiesPtrOutput) Elem() DataPropertiesOutput {
	return o.ApplyT(func(v *DataProperties) DataProperties {
		if v != nil {
			return *v
		}
		var ret DataProperties
		return ret
	}).(DataPropertiesOutput)
}

func (o DataPropertiesPtrOutput) Links() DataPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *DataProperties) *DataPropertiesLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(DataPropertiesLinksPropertiesPtrOutput)
}

// The version of the snapshot
func (o DataPropertiesPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataProperties) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

type DataPropertiesLinksProperties struct {
	// The URL for the new object
	Self *string `pulumi:"self"`
}

type DataPropertiesLinksPropertiesOutput struct{ *pulumi.OutputState }

func (DataPropertiesLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPropertiesLinksProperties)(nil)).Elem()
}

func (o DataPropertiesLinksPropertiesOutput) ToDataPropertiesLinksPropertiesOutput() DataPropertiesLinksPropertiesOutput {
	return o
}

func (o DataPropertiesLinksPropertiesOutput) ToDataPropertiesLinksPropertiesOutputWithContext(ctx context.Context) DataPropertiesLinksPropertiesOutput {
	return o
}

// The URL for the new object
func (o DataPropertiesLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPropertiesLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type DataPropertiesLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataPropertiesLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPropertiesLinksProperties)(nil)).Elem()
}

func (o DataPropertiesLinksPropertiesPtrOutput) ToDataPropertiesLinksPropertiesPtrOutput() DataPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o DataPropertiesLinksPropertiesPtrOutput) ToDataPropertiesLinksPropertiesPtrOutputWithContext(ctx context.Context) DataPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o DataPropertiesLinksPropertiesPtrOutput) Elem() DataPropertiesLinksPropertiesOutput {
	return o.ApplyT(func(v *DataPropertiesLinksProperties) DataPropertiesLinksProperties {
		if v != nil {
			return *v
		}
		var ret DataPropertiesLinksProperties
		return ret
	}).(DataPropertiesLinksPropertiesOutput)
}

// The URL for the new object
func (o DataPropertiesLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPropertiesLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type DomainType struct {
	// An array of contact lists that will be notified when records in this domain change.
	Contacts  []SimpleContactlist `pulumi:"contacts"`
	CreatedAt *string             `pulumi:"createdAt"`
	// Is the domain enabled
	Enabled *bool `pulumi:"enabled"`
	// Is GeoIP functionality enabled for the domain
	Geoip *bool `pulumi:"geoip"`
	// Is Global Traffic Director enabled for the domain
	Gtd *bool `pulumi:"gtd"`
	// A unique numeric ID for this domain
	Id *int `pulumi:"id"`
	// Links for domain objects
	Links *DomainLinksProperties `pulumi:"links"`
	// The name of the domain
	Name *string `pulumi:"name"`
	// The nameservers for the domain
	Nameservers []string `pulumi:"nameservers"`
	// A note for the domain
	Note *string `pulumi:"note"`
	// SOA (Start of Authority) Record
	Soa    *Soa          `pulumi:"soa"`
	Status *DomainStatus `pulumi:"status"`
	// An array of tags for this domain.
	Tags      []Tag           `pulumi:"tags"`
	Template  *SimpleTemplate `pulumi:"template"`
	UpdatedAt *string         `pulumi:"updatedAt"`
	// A simplied version of a rebranded nameserver using your own domain name.
	VanityNameserver *SimpleVanitynameserver `pulumi:"vanityNameserver"`
	// The version of the domain resource
	Version *int `pulumi:"version"`
}

type DomainTypeOutput struct{ *pulumi.OutputState }

func (DomainTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainType)(nil)).Elem()
}

func (o DomainTypeOutput) ToDomainTypeOutput() DomainTypeOutput {
	return o
}

func (o DomainTypeOutput) ToDomainTypeOutputWithContext(ctx context.Context) DomainTypeOutput {
	return o
}

// An array of contact lists that will be notified when records in this domain change.
func (o DomainTypeOutput) Contacts() SimpleContactlistArrayOutput {
	return o.ApplyT(func(v DomainType) []SimpleContactlist { return v.Contacts }).(SimpleContactlistArrayOutput)
}

func (o DomainTypeOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainType) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Is the domain enabled
func (o DomainTypeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainType) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Is GeoIP functionality enabled for the domain
func (o DomainTypeOutput) Geoip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainType) *bool { return v.Geoip }).(pulumi.BoolPtrOutput)
}

// Is Global Traffic Director enabled for the domain
func (o DomainTypeOutput) Gtd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainType) *bool { return v.Gtd }).(pulumi.BoolPtrOutput)
}

// A unique numeric ID for this domain
func (o DomainTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links for domain objects
func (o DomainTypeOutput) Links() DomainLinksPropertiesPtrOutput {
	return o.ApplyT(func(v DomainType) *DomainLinksProperties { return v.Links }).(DomainLinksPropertiesPtrOutput)
}

// The name of the domain
func (o DomainTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The nameservers for the domain
func (o DomainTypeOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainType) []string { return v.Nameservers }).(pulumi.StringArrayOutput)
}

// A note for the domain
func (o DomainTypeOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainType) *string { return v.Note }).(pulumi.StringPtrOutput)
}

// SOA (Start of Authority) Record
func (o DomainTypeOutput) Soa() SoaPtrOutput {
	return o.ApplyT(func(v DomainType) *Soa { return v.Soa }).(SoaPtrOutput)
}

func (o DomainTypeOutput) Status() DomainStatusPtrOutput {
	return o.ApplyT(func(v DomainType) *DomainStatus { return v.Status }).(DomainStatusPtrOutput)
}

// An array of tags for this domain.
func (o DomainTypeOutput) Tags() TagArrayOutput {
	return o.ApplyT(func(v DomainType) []Tag { return v.Tags }).(TagArrayOutput)
}

func (o DomainTypeOutput) Template() SimpleTemplatePtrOutput {
	return o.ApplyT(func(v DomainType) *SimpleTemplate { return v.Template }).(SimpleTemplatePtrOutput)
}

func (o DomainTypeOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainType) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// A simplied version of a rebranded nameserver using your own domain name.
func (o DomainTypeOutput) VanityNameserver() SimpleVanitynameserverPtrOutput {
	return o.ApplyT(func(v DomainType) *SimpleVanitynameserver { return v.VanityNameserver }).(SimpleVanitynameserverPtrOutput)
}

// The version of the domain resource
func (o DomainTypeOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainType) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type DomainTypePtrOutput struct{ *pulumi.OutputState }

func (DomainTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainType)(nil)).Elem()
}

func (o DomainTypePtrOutput) ToDomainTypePtrOutput() DomainTypePtrOutput {
	return o
}

func (o DomainTypePtrOutput) ToDomainTypePtrOutputWithContext(ctx context.Context) DomainTypePtrOutput {
	return o
}

func (o DomainTypePtrOutput) Elem() DomainTypeOutput {
	return o.ApplyT(func(v *DomainType) DomainType {
		if v != nil {
			return *v
		}
		var ret DomainType
		return ret
	}).(DomainTypeOutput)
}

// An array of contact lists that will be notified when records in this domain change.
func (o DomainTypePtrOutput) Contacts() SimpleContactlistArrayOutput {
	return o.ApplyT(func(v *DomainType) []SimpleContactlist {
		if v == nil {
			return nil
		}
		return v.Contacts
	}).(SimpleContactlistArrayOutput)
}

func (o DomainTypePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainType) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Is the domain enabled
func (o DomainTypePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainType) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Is GeoIP functionality enabled for the domain
func (o DomainTypePtrOutput) Geoip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainType) *bool {
		if v == nil {
			return nil
		}
		return v.Geoip
	}).(pulumi.BoolPtrOutput)
}

// Is Global Traffic Director enabled for the domain
func (o DomainTypePtrOutput) Gtd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainType) *bool {
		if v == nil {
			return nil
		}
		return v.Gtd
	}).(pulumi.BoolPtrOutput)
}

// A unique numeric ID for this domain
func (o DomainTypePtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainType) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// Links for domain objects
func (o DomainTypePtrOutput) Links() DomainLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *DomainType) *DomainLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(DomainLinksPropertiesPtrOutput)
}

// The name of the domain
func (o DomainTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The nameservers for the domain
func (o DomainTypePtrOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainType) []string {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(pulumi.StringArrayOutput)
}

// A note for the domain
func (o DomainTypePtrOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainType) *string {
		if v == nil {
			return nil
		}
		return v.Note
	}).(pulumi.StringPtrOutput)
}

// SOA (Start of Authority) Record
func (o DomainTypePtrOutput) Soa() SoaPtrOutput {
	return o.ApplyT(func(v *DomainType) *Soa {
		if v == nil {
			return nil
		}
		return v.Soa
	}).(SoaPtrOutput)
}

func (o DomainTypePtrOutput) Status() DomainStatusPtrOutput {
	return o.ApplyT(func(v *DomainType) *DomainStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(DomainStatusPtrOutput)
}

// An array of tags for this domain.
func (o DomainTypePtrOutput) Tags() TagArrayOutput {
	return o.ApplyT(func(v *DomainType) []Tag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(TagArrayOutput)
}

func (o DomainTypePtrOutput) Template() SimpleTemplatePtrOutput {
	return o.ApplyT(func(v *DomainType) *SimpleTemplate {
		if v == nil {
			return nil
		}
		return v.Template
	}).(SimpleTemplatePtrOutput)
}

func (o DomainTypePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainType) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// A simplied version of a rebranded nameserver using your own domain name.
func (o DomainTypePtrOutput) VanityNameserver() SimpleVanitynameserverPtrOutput {
	return o.ApplyT(func(v *DomainType) *SimpleVanitynameserver {
		if v == nil {
			return nil
		}
		return v.VanityNameserver
	}).(SimpleVanitynameserverPtrOutput)
}

// The version of the domain resource
func (o DomainTypePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainType) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

type DomainTypeArrayOutput struct{ *pulumi.OutputState }

func (DomainTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainType)(nil)).Elem()
}

func (o DomainTypeArrayOutput) ToDomainTypeArrayOutput() DomainTypeArrayOutput {
	return o
}

func (o DomainTypeArrayOutput) ToDomainTypeArrayOutputWithContext(ctx context.Context) DomainTypeArrayOutput {
	return o
}

func (o DomainTypeArrayOutput) Index(i pulumi.IntInput) DomainTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainType {
		return vs[0].([]DomainType)[vs[1].(int)]
	}).(DomainTypeOutput)
}

// Links for domain objects
type DomainLinksProperties struct {
	Records *string `pulumi:"records"`
	Self    *string `pulumi:"self"`
}

// Links for domain objects
type DomainLinksPropertiesOutput struct{ *pulumi.OutputState }

func (DomainLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainLinksProperties)(nil)).Elem()
}

func (o DomainLinksPropertiesOutput) ToDomainLinksPropertiesOutput() DomainLinksPropertiesOutput {
	return o
}

func (o DomainLinksPropertiesOutput) ToDomainLinksPropertiesOutputWithContext(ctx context.Context) DomainLinksPropertiesOutput {
	return o
}

func (o DomainLinksPropertiesOutput) Records() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainLinksProperties) *string { return v.Records }).(pulumi.StringPtrOutput)
}

func (o DomainLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type DomainLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DomainLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainLinksProperties)(nil)).Elem()
}

func (o DomainLinksPropertiesPtrOutput) ToDomainLinksPropertiesPtrOutput() DomainLinksPropertiesPtrOutput {
	return o
}

func (o DomainLinksPropertiesPtrOutput) ToDomainLinksPropertiesPtrOutputWithContext(ctx context.Context) DomainLinksPropertiesPtrOutput {
	return o
}

func (o DomainLinksPropertiesPtrOutput) Elem() DomainLinksPropertiesOutput {
	return o.ApplyT(func(v *DomainLinksProperties) DomainLinksProperties {
		if v != nil {
			return *v
		}
		var ret DomainLinksProperties
		return ret
	}).(DomainLinksPropertiesOutput)
}

func (o DomainLinksPropertiesPtrOutput) Records() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Records
	}).(pulumi.StringPtrOutput)
}

func (o DomainLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// Analytics for a specific domain
type Domainanalytics struct {
	Domain *SimpleDomain `pulumi:"domain"`
	// The end date for the analytics
	End *string `pulumi:"end"`
	// Details about the interval between time periods in the analytics
	Interval *DomainanalyticsIntervalProperties `pulumi:"interval"`
	Links    *DomainanalyticsLinksProperties    `pulumi:"links"`
	// An array of analytics data for different types of query
	Queries []DomainanalyticsQueriesItemProperties `pulumi:"queries"`
	// The start date for the analytics
	Start *string `pulumi:"start"`
	// Some statistics for these analytics
	Stats *DomainanalyticsStatsProperties `pulumi:"stats"`
}

// Analytics for a specific domain
type DomainanalyticsOutput struct{ *pulumi.OutputState }

func (DomainanalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Domainanalytics)(nil)).Elem()
}

func (o DomainanalyticsOutput) ToDomainanalyticsOutput() DomainanalyticsOutput {
	return o
}

func (o DomainanalyticsOutput) ToDomainanalyticsOutputWithContext(ctx context.Context) DomainanalyticsOutput {
	return o
}

func (o DomainanalyticsOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v Domainanalytics) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

// The end date for the analytics
func (o DomainanalyticsOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Domainanalytics) *string { return v.End }).(pulumi.StringPtrOutput)
}

// Details about the interval between time periods in the analytics
func (o DomainanalyticsOutput) Interval() DomainanalyticsIntervalPropertiesPtrOutput {
	return o.ApplyT(func(v Domainanalytics) *DomainanalyticsIntervalProperties { return v.Interval }).(DomainanalyticsIntervalPropertiesPtrOutput)
}

func (o DomainanalyticsOutput) Links() DomainanalyticsLinksPropertiesPtrOutput {
	return o.ApplyT(func(v Domainanalytics) *DomainanalyticsLinksProperties { return v.Links }).(DomainanalyticsLinksPropertiesPtrOutput)
}

// An array of analytics data for different types of query
func (o DomainanalyticsOutput) Queries() DomainanalyticsQueriesItemPropertiesArrayOutput {
	return o.ApplyT(func(v Domainanalytics) []DomainanalyticsQueriesItemProperties { return v.Queries }).(DomainanalyticsQueriesItemPropertiesArrayOutput)
}

// The start date for the analytics
func (o DomainanalyticsOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Domainanalytics) *string { return v.Start }).(pulumi.StringPtrOutput)
}

// Some statistics for these analytics
func (o DomainanalyticsOutput) Stats() DomainanalyticsStatsPropertiesPtrOutput {
	return o.ApplyT(func(v Domainanalytics) *DomainanalyticsStatsProperties { return v.Stats }).(DomainanalyticsStatsPropertiesPtrOutput)
}

type DomainanalyticsPtrOutput struct{ *pulumi.OutputState }

func (DomainanalyticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Domainanalytics)(nil)).Elem()
}

func (o DomainanalyticsPtrOutput) ToDomainanalyticsPtrOutput() DomainanalyticsPtrOutput {
	return o
}

func (o DomainanalyticsPtrOutput) ToDomainanalyticsPtrOutputWithContext(ctx context.Context) DomainanalyticsPtrOutput {
	return o
}

func (o DomainanalyticsPtrOutput) Elem() DomainanalyticsOutput {
	return o.ApplyT(func(v *Domainanalytics) Domainanalytics {
		if v != nil {
			return *v
		}
		var ret Domainanalytics
		return ret
	}).(DomainanalyticsOutput)
}

func (o DomainanalyticsPtrOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v *Domainanalytics) *SimpleDomain {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(SimpleDomainPtrOutput)
}

// The end date for the analytics
func (o DomainanalyticsPtrOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domainanalytics) *string {
		if v == nil {
			return nil
		}
		return v.End
	}).(pulumi.StringPtrOutput)
}

// Details about the interval between time periods in the analytics
func (o DomainanalyticsPtrOutput) Interval() DomainanalyticsIntervalPropertiesPtrOutput {
	return o.ApplyT(func(v *Domainanalytics) *DomainanalyticsIntervalProperties {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(DomainanalyticsIntervalPropertiesPtrOutput)
}

func (o DomainanalyticsPtrOutput) Links() DomainanalyticsLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *Domainanalytics) *DomainanalyticsLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(DomainanalyticsLinksPropertiesPtrOutput)
}

// An array of analytics data for different types of query
func (o DomainanalyticsPtrOutput) Queries() DomainanalyticsQueriesItemPropertiesArrayOutput {
	return o.ApplyT(func(v *Domainanalytics) []DomainanalyticsQueriesItemProperties {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(DomainanalyticsQueriesItemPropertiesArrayOutput)
}

// The start date for the analytics
func (o DomainanalyticsPtrOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domainanalytics) *string {
		if v == nil {
			return nil
		}
		return v.Start
	}).(pulumi.StringPtrOutput)
}

// Some statistics for these analytics
func (o DomainanalyticsPtrOutput) Stats() DomainanalyticsStatsPropertiesPtrOutput {
	return o.ApplyT(func(v *Domainanalytics) *DomainanalyticsStatsProperties {
		if v == nil {
			return nil
		}
		return v.Stats
	}).(DomainanalyticsStatsPropertiesPtrOutput)
}

// Details about the interval between time periods in the analytics
type DomainanalyticsIntervalProperties struct {
	// The maximum number of seconds between time periods
	Max *int `pulumi:"max"`
	// The mean average number of seconds between time periods
	Mean *float64 `pulumi:"mean"`
	// The minimum number of seconds between time periods
	Min *int `pulumi:"min"`
}

// Details about the interval between time periods in the analytics
type DomainanalyticsIntervalPropertiesOutput struct{ *pulumi.OutputState }

func (DomainanalyticsIntervalPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainanalyticsIntervalProperties)(nil)).Elem()
}

func (o DomainanalyticsIntervalPropertiesOutput) ToDomainanalyticsIntervalPropertiesOutput() DomainanalyticsIntervalPropertiesOutput {
	return o
}

func (o DomainanalyticsIntervalPropertiesOutput) ToDomainanalyticsIntervalPropertiesOutputWithContext(ctx context.Context) DomainanalyticsIntervalPropertiesOutput {
	return o
}

// The maximum number of seconds between time periods
func (o DomainanalyticsIntervalPropertiesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsIntervalProperties) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The mean average number of seconds between time periods
func (o DomainanalyticsIntervalPropertiesOutput) Mean() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DomainanalyticsIntervalProperties) *float64 { return v.Mean }).(pulumi.Float64PtrOutput)
}

// The minimum number of seconds between time periods
func (o DomainanalyticsIntervalPropertiesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsIntervalProperties) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type DomainanalyticsIntervalPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DomainanalyticsIntervalPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainanalyticsIntervalProperties)(nil)).Elem()
}

func (o DomainanalyticsIntervalPropertiesPtrOutput) ToDomainanalyticsIntervalPropertiesPtrOutput() DomainanalyticsIntervalPropertiesPtrOutput {
	return o
}

func (o DomainanalyticsIntervalPropertiesPtrOutput) ToDomainanalyticsIntervalPropertiesPtrOutputWithContext(ctx context.Context) DomainanalyticsIntervalPropertiesPtrOutput {
	return o
}

func (o DomainanalyticsIntervalPropertiesPtrOutput) Elem() DomainanalyticsIntervalPropertiesOutput {
	return o.ApplyT(func(v *DomainanalyticsIntervalProperties) DomainanalyticsIntervalProperties {
		if v != nil {
			return *v
		}
		var ret DomainanalyticsIntervalProperties
		return ret
	}).(DomainanalyticsIntervalPropertiesOutput)
}

// The maximum number of seconds between time periods
func (o DomainanalyticsIntervalPropertiesPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsIntervalProperties) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The mean average number of seconds between time periods
func (o DomainanalyticsIntervalPropertiesPtrOutput) Mean() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DomainanalyticsIntervalProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Mean
	}).(pulumi.Float64PtrOutput)
}

// The minimum number of seconds between time periods
func (o DomainanalyticsIntervalPropertiesPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsIntervalProperties) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

type DomainanalyticsLinksProperties struct {
	// The URL for the domain
	Domain *string `pulumi:"domain"`
	// The URL for these analytics
	Self *string `pulumi:"self"`
}

type DomainanalyticsLinksPropertiesOutput struct{ *pulumi.OutputState }

func (DomainanalyticsLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainanalyticsLinksProperties)(nil)).Elem()
}

func (o DomainanalyticsLinksPropertiesOutput) ToDomainanalyticsLinksPropertiesOutput() DomainanalyticsLinksPropertiesOutput {
	return o
}

func (o DomainanalyticsLinksPropertiesOutput) ToDomainanalyticsLinksPropertiesOutputWithContext(ctx context.Context) DomainanalyticsLinksPropertiesOutput {
	return o
}

// The URL for the domain
func (o DomainanalyticsLinksPropertiesOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainanalyticsLinksProperties) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The URL for these analytics
func (o DomainanalyticsLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainanalyticsLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type DomainanalyticsLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DomainanalyticsLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainanalyticsLinksProperties)(nil)).Elem()
}

func (o DomainanalyticsLinksPropertiesPtrOutput) ToDomainanalyticsLinksPropertiesPtrOutput() DomainanalyticsLinksPropertiesPtrOutput {
	return o
}

func (o DomainanalyticsLinksPropertiesPtrOutput) ToDomainanalyticsLinksPropertiesPtrOutputWithContext(ctx context.Context) DomainanalyticsLinksPropertiesPtrOutput {
	return o
}

func (o DomainanalyticsLinksPropertiesPtrOutput) Elem() DomainanalyticsLinksPropertiesOutput {
	return o.ApplyT(func(v *DomainanalyticsLinksProperties) DomainanalyticsLinksProperties {
		if v != nil {
			return *v
		}
		var ret DomainanalyticsLinksProperties
		return ret
	}).(DomainanalyticsLinksPropertiesOutput)
}

// The URL for the domain
func (o DomainanalyticsLinksPropertiesPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// The URL for these analytics
func (o DomainanalyticsLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// Analytics for a particular query type
type DomainanalyticsQueriesItemProperties struct {
	// Some statistics for these analytics
	Stats *DomainanalyticsQueriesItemPropertiesStatsProperties `pulumi:"stats"`
	// The type of query the analytics are for
	Type *DomainanalyticsQueriesItemPropertiesType `pulumi:"type"`
	// Query counts for all dates within the requested range
	Values []DomainanalyticsQueriesItemPropertiesValuesItemProperties `pulumi:"values"`
}

// Analytics for a particular query type
type DomainanalyticsQueriesItemPropertiesOutput struct{ *pulumi.OutputState }

func (DomainanalyticsQueriesItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainanalyticsQueriesItemProperties)(nil)).Elem()
}

func (o DomainanalyticsQueriesItemPropertiesOutput) ToDomainanalyticsQueriesItemPropertiesOutput() DomainanalyticsQueriesItemPropertiesOutput {
	return o
}

func (o DomainanalyticsQueriesItemPropertiesOutput) ToDomainanalyticsQueriesItemPropertiesOutputWithContext(ctx context.Context) DomainanalyticsQueriesItemPropertiesOutput {
	return o
}

// Some statistics for these analytics
func (o DomainanalyticsQueriesItemPropertiesOutput) Stats() DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput {
	return o.ApplyT(func(v DomainanalyticsQueriesItemProperties) *DomainanalyticsQueriesItemPropertiesStatsProperties {
		return v.Stats
	}).(DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput)
}

// The type of query the analytics are for
func (o DomainanalyticsQueriesItemPropertiesOutput) Type() DomainanalyticsQueriesItemPropertiesTypePtrOutput {
	return o.ApplyT(func(v DomainanalyticsQueriesItemProperties) *DomainanalyticsQueriesItemPropertiesType { return v.Type }).(DomainanalyticsQueriesItemPropertiesTypePtrOutput)
}

// Query counts for all dates within the requested range
func (o DomainanalyticsQueriesItemPropertiesOutput) Values() DomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput {
	return o.ApplyT(func(v DomainanalyticsQueriesItemProperties) []DomainanalyticsQueriesItemPropertiesValuesItemProperties {
		return v.Values
	}).(DomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput)
}

type DomainanalyticsQueriesItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (DomainanalyticsQueriesItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainanalyticsQueriesItemProperties)(nil)).Elem()
}

func (o DomainanalyticsQueriesItemPropertiesArrayOutput) ToDomainanalyticsQueriesItemPropertiesArrayOutput() DomainanalyticsQueriesItemPropertiesArrayOutput {
	return o
}

func (o DomainanalyticsQueriesItemPropertiesArrayOutput) ToDomainanalyticsQueriesItemPropertiesArrayOutputWithContext(ctx context.Context) DomainanalyticsQueriesItemPropertiesArrayOutput {
	return o
}

func (o DomainanalyticsQueriesItemPropertiesArrayOutput) Index(i pulumi.IntInput) DomainanalyticsQueriesItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainanalyticsQueriesItemProperties {
		return vs[0].([]DomainanalyticsQueriesItemProperties)[vs[1].(int)]
	}).(DomainanalyticsQueriesItemPropertiesOutput)
}

// Some statistics for these analytics
type DomainanalyticsQueriesItemPropertiesStatsProperties struct {
	// The number of time periods
	Count *int `pulumi:"count"`
	// The maximum number of queries for one time period
	Max *int `pulumi:"max"`
	// The mean average number of queries per time period
	Mean *float64 `pulumi:"mean"`
	// The minimum number of queries for one time period
	Min *int `pulumi:"min"`
	// The sum of queries for this date range
	Sum *int `pulumi:"sum"`
}

// Some statistics for these analytics
type DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput struct{ *pulumi.OutputState }

func (DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainanalyticsQueriesItemPropertiesStatsProperties)(nil)).Elem()
}

func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput) ToDomainanalyticsQueriesItemPropertiesStatsPropertiesOutput() DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput {
	return o
}

func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput) ToDomainanalyticsQueriesItemPropertiesStatsPropertiesOutputWithContext(ctx context.Context) DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput {
	return o
}

// The number of time periods
func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsQueriesItemPropertiesStatsProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The maximum number of queries for one time period
func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsQueriesItemPropertiesStatsProperties) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The mean average number of queries per time period
func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput) Mean() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DomainanalyticsQueriesItemPropertiesStatsProperties) *float64 { return v.Mean }).(pulumi.Float64PtrOutput)
}

// The minimum number of queries for one time period
func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsQueriesItemPropertiesStatsProperties) *int { return v.Min }).(pulumi.IntPtrOutput)
}

// The sum of queries for this date range
func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput) Sum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsQueriesItemPropertiesStatsProperties) *int { return v.Sum }).(pulumi.IntPtrOutput)
}

type DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainanalyticsQueriesItemPropertiesStatsProperties)(nil)).Elem()
}

func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput) ToDomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput() DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput {
	return o
}

func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput) ToDomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutputWithContext(ctx context.Context) DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput {
	return o
}

func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput) Elem() DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput {
	return o.ApplyT(func(v *DomainanalyticsQueriesItemPropertiesStatsProperties) DomainanalyticsQueriesItemPropertiesStatsProperties {
		if v != nil {
			return *v
		}
		var ret DomainanalyticsQueriesItemPropertiesStatsProperties
		return ret
	}).(DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput)
}

// The number of time periods
func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsQueriesItemPropertiesStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The maximum number of queries for one time period
func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsQueriesItemPropertiesStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The mean average number of queries per time period
func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput) Mean() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DomainanalyticsQueriesItemPropertiesStatsProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Mean
	}).(pulumi.Float64PtrOutput)
}

// The minimum number of queries for one time period
func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsQueriesItemPropertiesStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// The sum of queries for this date range
func (o DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput) Sum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsQueriesItemPropertiesStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Sum
	}).(pulumi.IntPtrOutput)
}

// Query count for a particular date
type DomainanalyticsQueriesItemPropertiesValuesItemProperties struct {
	Date  *string `pulumi:"date"`
	Value *int    `pulumi:"value"`
}

// Query count for a particular date
type DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput struct{ *pulumi.OutputState }

func (DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainanalyticsQueriesItemPropertiesValuesItemProperties)(nil)).Elem()
}

func (o DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput) ToDomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput() DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput {
	return o
}

func (o DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput) ToDomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutputWithContext(ctx context.Context) DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput {
	return o
}

func (o DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainanalyticsQueriesItemPropertiesValuesItemProperties) *string { return v.Date }).(pulumi.StringPtrOutput)
}

func (o DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsQueriesItemPropertiesValuesItemProperties) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type DomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (DomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainanalyticsQueriesItemPropertiesValuesItemProperties)(nil)).Elem()
}

func (o DomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput) ToDomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput() DomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput {
	return o
}

func (o DomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput) ToDomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutputWithContext(ctx context.Context) DomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput {
	return o
}

func (o DomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput) Index(i pulumi.IntInput) DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainanalyticsQueriesItemPropertiesValuesItemProperties {
		return vs[0].([]DomainanalyticsQueriesItemPropertiesValuesItemProperties)[vs[1].(int)]
	}).(DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput)
}

// Some statistics for these analytics
type DomainanalyticsStatsProperties struct {
	// The number of time periods
	Count *int `pulumi:"count"`
	// The maximum number of queries for one time period
	Max *int `pulumi:"max"`
	// The mean average number of queries per time period
	Mean *float64 `pulumi:"mean"`
	// The minimum number of queries for one time period
	Min *int `pulumi:"min"`
	// The sum of queries for this date range
	Sum *int `pulumi:"sum"`
}

// Some statistics for these analytics
type DomainanalyticsStatsPropertiesOutput struct{ *pulumi.OutputState }

func (DomainanalyticsStatsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainanalyticsStatsProperties)(nil)).Elem()
}

func (o DomainanalyticsStatsPropertiesOutput) ToDomainanalyticsStatsPropertiesOutput() DomainanalyticsStatsPropertiesOutput {
	return o
}

func (o DomainanalyticsStatsPropertiesOutput) ToDomainanalyticsStatsPropertiesOutputWithContext(ctx context.Context) DomainanalyticsStatsPropertiesOutput {
	return o
}

// The number of time periods
func (o DomainanalyticsStatsPropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsStatsProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The maximum number of queries for one time period
func (o DomainanalyticsStatsPropertiesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsStatsProperties) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The mean average number of queries per time period
func (o DomainanalyticsStatsPropertiesOutput) Mean() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DomainanalyticsStatsProperties) *float64 { return v.Mean }).(pulumi.Float64PtrOutput)
}

// The minimum number of queries for one time period
func (o DomainanalyticsStatsPropertiesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsStatsProperties) *int { return v.Min }).(pulumi.IntPtrOutput)
}

// The sum of queries for this date range
func (o DomainanalyticsStatsPropertiesOutput) Sum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainanalyticsStatsProperties) *int { return v.Sum }).(pulumi.IntPtrOutput)
}

type DomainanalyticsStatsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DomainanalyticsStatsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainanalyticsStatsProperties)(nil)).Elem()
}

func (o DomainanalyticsStatsPropertiesPtrOutput) ToDomainanalyticsStatsPropertiesPtrOutput() DomainanalyticsStatsPropertiesPtrOutput {
	return o
}

func (o DomainanalyticsStatsPropertiesPtrOutput) ToDomainanalyticsStatsPropertiesPtrOutputWithContext(ctx context.Context) DomainanalyticsStatsPropertiesPtrOutput {
	return o
}

func (o DomainanalyticsStatsPropertiesPtrOutput) Elem() DomainanalyticsStatsPropertiesOutput {
	return o.ApplyT(func(v *DomainanalyticsStatsProperties) DomainanalyticsStatsProperties {
		if v != nil {
			return *v
		}
		var ret DomainanalyticsStatsProperties
		return ret
	}).(DomainanalyticsStatsPropertiesOutput)
}

// The number of time periods
func (o DomainanalyticsStatsPropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The maximum number of queries for one time period
func (o DomainanalyticsStatsPropertiesPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The mean average number of queries per time period
func (o DomainanalyticsStatsPropertiesPtrOutput) Mean() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DomainanalyticsStatsProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Mean
	}).(pulumi.Float64PtrOutput)
}

// The minimum number of queries for one time period
func (o DomainanalyticsStatsPropertiesPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// The sum of queries for this date range
func (o DomainanalyticsStatsPropertiesPtrOutput) Sum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainanalyticsStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Sum
	}).(pulumi.IntPtrOutput)
}

type Domainhistory struct {
	Domain *SimpleDomain `pulumi:"domain"`
	// The name of the domain
	Name      *string `pulumi:"name"`
	UpdatedAt *string `pulumi:"updatedAt"`
	// The version of the domain resource
	Version *int `pulumi:"version"`
}

type DomainhistoryOutput struct{ *pulumi.OutputState }

func (DomainhistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Domainhistory)(nil)).Elem()
}

func (o DomainhistoryOutput) ToDomainhistoryOutput() DomainhistoryOutput {
	return o
}

func (o DomainhistoryOutput) ToDomainhistoryOutputWithContext(ctx context.Context) DomainhistoryOutput {
	return o
}

func (o DomainhistoryOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v Domainhistory) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

// The name of the domain
func (o DomainhistoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Domainhistory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DomainhistoryOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Domainhistory) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The version of the domain resource
func (o DomainhistoryOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Domainhistory) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type DomainhistoryPtrOutput struct{ *pulumi.OutputState }

func (DomainhistoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Domainhistory)(nil)).Elem()
}

func (o DomainhistoryPtrOutput) ToDomainhistoryPtrOutput() DomainhistoryPtrOutput {
	return o
}

func (o DomainhistoryPtrOutput) ToDomainhistoryPtrOutputWithContext(ctx context.Context) DomainhistoryPtrOutput {
	return o
}

func (o DomainhistoryPtrOutput) Elem() DomainhistoryOutput {
	return o.ApplyT(func(v *Domainhistory) Domainhistory {
		if v != nil {
			return *v
		}
		var ret Domainhistory
		return ret
	}).(DomainhistoryOutput)
}

func (o DomainhistoryPtrOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v *Domainhistory) *SimpleDomain {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(SimpleDomainPtrOutput)
}

// The name of the domain
func (o DomainhistoryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domainhistory) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DomainhistoryPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domainhistory) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// The version of the domain resource
func (o DomainhistoryPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Domainhistory) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// Links for the domain record
type DomainrecordPropertiesLinksProperties struct {
	Self *string `pulumi:"self"`
}

// Links for the domain record
type DomainrecordPropertiesLinksPropertiesOutput struct{ *pulumi.OutputState }

func (DomainrecordPropertiesLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainrecordPropertiesLinksProperties)(nil)).Elem()
}

func (o DomainrecordPropertiesLinksPropertiesOutput) ToDomainrecordPropertiesLinksPropertiesOutput() DomainrecordPropertiesLinksPropertiesOutput {
	return o
}

func (o DomainrecordPropertiesLinksPropertiesOutput) ToDomainrecordPropertiesLinksPropertiesOutputWithContext(ctx context.Context) DomainrecordPropertiesLinksPropertiesOutput {
	return o
}

func (o DomainrecordPropertiesLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainrecordPropertiesLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type DomainrecordPropertiesLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DomainrecordPropertiesLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainrecordPropertiesLinksProperties)(nil)).Elem()
}

func (o DomainrecordPropertiesLinksPropertiesPtrOutput) ToDomainrecordPropertiesLinksPropertiesPtrOutput() DomainrecordPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o DomainrecordPropertiesLinksPropertiesPtrOutput) ToDomainrecordPropertiesLinksPropertiesPtrOutputWithContext(ctx context.Context) DomainrecordPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o DomainrecordPropertiesLinksPropertiesPtrOutput) Elem() DomainrecordPropertiesLinksPropertiesOutput {
	return o.ApplyT(func(v *DomainrecordPropertiesLinksProperties) DomainrecordPropertiesLinksProperties {
		if v != nil {
			return *v
		}
		var ret DomainrecordPropertiesLinksProperties
		return ret
	}).(DomainrecordPropertiesLinksPropertiesOutput)
}

func (o DomainrecordPropertiesLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainrecordPropertiesLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type Domainsnapshot struct {
	Domain *SimpleDomain `pulumi:"domain"`
	// The name of the domain
	Name      *string `pulumi:"name"`
	UpdatedAt *string `pulumi:"updatedAt"`
	// The version of the domain resource
	Version *int `pulumi:"version"`
}

type DomainsnapshotOutput struct{ *pulumi.OutputState }

func (DomainsnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Domainsnapshot)(nil)).Elem()
}

func (o DomainsnapshotOutput) ToDomainsnapshotOutput() DomainsnapshotOutput {
	return o
}

func (o DomainsnapshotOutput) ToDomainsnapshotOutputWithContext(ctx context.Context) DomainsnapshotOutput {
	return o
}

func (o DomainsnapshotOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v Domainsnapshot) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

// The name of the domain
func (o DomainsnapshotOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Domainsnapshot) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DomainsnapshotOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Domainsnapshot) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The version of the domain resource
func (o DomainsnapshotOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Domainsnapshot) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type DomainsnapshotPtrOutput struct{ *pulumi.OutputState }

func (DomainsnapshotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Domainsnapshot)(nil)).Elem()
}

func (o DomainsnapshotPtrOutput) ToDomainsnapshotPtrOutput() DomainsnapshotPtrOutput {
	return o
}

func (o DomainsnapshotPtrOutput) ToDomainsnapshotPtrOutputWithContext(ctx context.Context) DomainsnapshotPtrOutput {
	return o
}

func (o DomainsnapshotPtrOutput) Elem() DomainsnapshotOutput {
	return o.ApplyT(func(v *Domainsnapshot) Domainsnapshot {
		if v != nil {
			return *v
		}
		var ret Domainsnapshot
		return ret
	}).(DomainsnapshotOutput)
}

func (o DomainsnapshotPtrOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v *Domainsnapshot) *SimpleDomain {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(SimpleDomainPtrOutput)
}

// The name of the domain
func (o DomainsnapshotPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domainsnapshot) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DomainsnapshotPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domainsnapshot) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// The version of the domain resource
func (o DomainsnapshotPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Domainsnapshot) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

type GetDomainAnalyticProperties struct {
	// Analytics for a specific domain
	Data *Domainanalytics `pulumi:"data"`
}

type GetDomainAnalyticPropertiesOutput struct{ *pulumi.OutputState }

func (GetDomainAnalyticPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAnalyticProperties)(nil)).Elem()
}

func (o GetDomainAnalyticPropertiesOutput) ToGetDomainAnalyticPropertiesOutput() GetDomainAnalyticPropertiesOutput {
	return o
}

func (o GetDomainAnalyticPropertiesOutput) ToGetDomainAnalyticPropertiesOutputWithContext(ctx context.Context) GetDomainAnalyticPropertiesOutput {
	return o
}

// Analytics for a specific domain
func (o GetDomainAnalyticPropertiesOutput) Data() DomainanalyticsPtrOutput {
	return o.ApplyT(func(v GetDomainAnalyticProperties) *Domainanalytics { return v.Data }).(DomainanalyticsPtrOutput)
}

type GetDomainHistoryVersionProperties struct {
	Data *Domainhistory `pulumi:"data"`
}

type GetDomainHistoryVersionPropertiesOutput struct{ *pulumi.OutputState }

func (GetDomainHistoryVersionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainHistoryVersionProperties)(nil)).Elem()
}

func (o GetDomainHistoryVersionPropertiesOutput) ToGetDomainHistoryVersionPropertiesOutput() GetDomainHistoryVersionPropertiesOutput {
	return o
}

func (o GetDomainHistoryVersionPropertiesOutput) ToGetDomainHistoryVersionPropertiesOutputWithContext(ctx context.Context) GetDomainHistoryVersionPropertiesOutput {
	return o
}

func (o GetDomainHistoryVersionPropertiesOutput) Data() DomainhistoryPtrOutput {
	return o.ApplyT(func(v GetDomainHistoryVersionProperties) *Domainhistory { return v.Data }).(DomainhistoryPtrOutput)
}

type GetDomainNameserverProperties struct {
	Data *GetDomainNameserverPropertiesDataProperties `pulumi:"data"`
}

type GetDomainNameserverPropertiesOutput struct{ *pulumi.OutputState }

func (GetDomainNameserverPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameserverProperties)(nil)).Elem()
}

func (o GetDomainNameserverPropertiesOutput) ToGetDomainNameserverPropertiesOutput() GetDomainNameserverPropertiesOutput {
	return o
}

func (o GetDomainNameserverPropertiesOutput) ToGetDomainNameserverPropertiesOutputWithContext(ctx context.Context) GetDomainNameserverPropertiesOutput {
	return o
}

func (o GetDomainNameserverPropertiesOutput) Data() GetDomainNameserverPropertiesDataPropertiesPtrOutput {
	return o.ApplyT(func(v GetDomainNameserverProperties) *GetDomainNameserverPropertiesDataProperties { return v.Data }).(GetDomainNameserverPropertiesDataPropertiesPtrOutput)
}

type GetDomainNameserverPropertiesDataProperties struct {
	Domain      *SimpleDomain                                               `pulumi:"domain"`
	Links       *GetDomainNameserverPropertiesDataPropertiesLinksProperties `pulumi:"links"`
	Nameservers []string                                                    `pulumi:"nameservers"`
}

type GetDomainNameserverPropertiesDataPropertiesOutput struct{ *pulumi.OutputState }

func (GetDomainNameserverPropertiesDataPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameserverPropertiesDataProperties)(nil)).Elem()
}

func (o GetDomainNameserverPropertiesDataPropertiesOutput) ToGetDomainNameserverPropertiesDataPropertiesOutput() GetDomainNameserverPropertiesDataPropertiesOutput {
	return o
}

func (o GetDomainNameserverPropertiesDataPropertiesOutput) ToGetDomainNameserverPropertiesDataPropertiesOutputWithContext(ctx context.Context) GetDomainNameserverPropertiesDataPropertiesOutput {
	return o
}

func (o GetDomainNameserverPropertiesDataPropertiesOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v GetDomainNameserverPropertiesDataProperties) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

func (o GetDomainNameserverPropertiesDataPropertiesOutput) Links() GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v GetDomainNameserverPropertiesDataProperties) *GetDomainNameserverPropertiesDataPropertiesLinksProperties {
		return v.Links
	}).(GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput)
}

func (o GetDomainNameserverPropertiesDataPropertiesOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainNameserverPropertiesDataProperties) []string { return v.Nameservers }).(pulumi.StringArrayOutput)
}

type GetDomainNameserverPropertiesDataPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GetDomainNameserverPropertiesDataPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetDomainNameserverPropertiesDataProperties)(nil)).Elem()
}

func (o GetDomainNameserverPropertiesDataPropertiesPtrOutput) ToGetDomainNameserverPropertiesDataPropertiesPtrOutput() GetDomainNameserverPropertiesDataPropertiesPtrOutput {
	return o
}

func (o GetDomainNameserverPropertiesDataPropertiesPtrOutput) ToGetDomainNameserverPropertiesDataPropertiesPtrOutputWithContext(ctx context.Context) GetDomainNameserverPropertiesDataPropertiesPtrOutput {
	return o
}

func (o GetDomainNameserverPropertiesDataPropertiesPtrOutput) Elem() GetDomainNameserverPropertiesDataPropertiesOutput {
	return o.ApplyT(func(v *GetDomainNameserverPropertiesDataProperties) GetDomainNameserverPropertiesDataProperties {
		if v != nil {
			return *v
		}
		var ret GetDomainNameserverPropertiesDataProperties
		return ret
	}).(GetDomainNameserverPropertiesDataPropertiesOutput)
}

func (o GetDomainNameserverPropertiesDataPropertiesPtrOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v *GetDomainNameserverPropertiesDataProperties) *SimpleDomain {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(SimpleDomainPtrOutput)
}

func (o GetDomainNameserverPropertiesDataPropertiesPtrOutput) Links() GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *GetDomainNameserverPropertiesDataProperties) *GetDomainNameserverPropertiesDataPropertiesLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput)
}

func (o GetDomainNameserverPropertiesDataPropertiesPtrOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetDomainNameserverPropertiesDataProperties) []string {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(pulumi.StringArrayOutput)
}

type GetDomainNameserverPropertiesDataPropertiesLinksProperties struct {
	// The URL for the domain
	Domain *string `pulumi:"domain"`
	// The URL for these nameservers
	Self *string `pulumi:"self"`
}

type GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput struct{ *pulumi.OutputState }

func (GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameserverPropertiesDataPropertiesLinksProperties)(nil)).Elem()
}

func (o GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput) ToGetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput() GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput {
	return o
}

func (o GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput) ToGetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutputWithContext(ctx context.Context) GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput {
	return o
}

// The URL for the domain
func (o GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainNameserverPropertiesDataPropertiesLinksProperties) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The URL for these nameservers
func (o GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainNameserverPropertiesDataPropertiesLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetDomainNameserverPropertiesDataPropertiesLinksProperties)(nil)).Elem()
}

func (o GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput) ToGetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput() GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput) ToGetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutputWithContext(ctx context.Context) GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput) Elem() GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput {
	return o.ApplyT(func(v *GetDomainNameserverPropertiesDataPropertiesLinksProperties) GetDomainNameserverPropertiesDataPropertiesLinksProperties {
		if v != nil {
			return *v
		}
		var ret GetDomainNameserverPropertiesDataPropertiesLinksProperties
		return ret
	}).(GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput)
}

// The URL for the domain
func (o GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetDomainNameserverPropertiesDataPropertiesLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// The URL for these nameservers
func (o GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetDomainNameserverPropertiesDataPropertiesLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type GetDomainProperties struct {
	Data *DomainType `pulumi:"data"`
}

type GetDomainPropertiesOutput struct{ *pulumi.OutputState }

func (GetDomainPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainProperties)(nil)).Elem()
}

func (o GetDomainPropertiesOutput) ToGetDomainPropertiesOutput() GetDomainPropertiesOutput {
	return o
}

func (o GetDomainPropertiesOutput) ToGetDomainPropertiesOutputWithContext(ctx context.Context) GetDomainPropertiesOutput {
	return o
}

func (o GetDomainPropertiesOutput) Data() DomainTypePtrOutput {
	return o.ApplyT(func(v GetDomainProperties) *DomainType { return v.Data }).(DomainTypePtrOutput)
}

type GetDomainRecordType struct {
	Domain *SimpleDomain `pulumi:"domain"`
	// Links for the domain record
	Links *DomainrecordPropertiesLinksProperties `pulumi:"links"`
}

type GetDomainRecordTypeOutput struct{ *pulumi.OutputState }

func (GetDomainRecordTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordType)(nil)).Elem()
}

func (o GetDomainRecordTypeOutput) ToGetDomainRecordTypeOutput() GetDomainRecordTypeOutput {
	return o
}

func (o GetDomainRecordTypeOutput) ToGetDomainRecordTypeOutputWithContext(ctx context.Context) GetDomainRecordTypeOutput {
	return o
}

func (o GetDomainRecordTypeOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v GetDomainRecordType) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

// Links for the domain record
func (o GetDomainRecordTypeOutput) Links() DomainrecordPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v GetDomainRecordType) *DomainrecordPropertiesLinksProperties { return v.Links }).(DomainrecordPropertiesLinksPropertiesPtrOutput)
}

type GetDomainSnapshotProperties struct {
	Data *Domainsnapshot `pulumi:"data"`
}

type GetDomainSnapshotPropertiesOutput struct{ *pulumi.OutputState }

func (GetDomainSnapshotPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainSnapshotProperties)(nil)).Elem()
}

func (o GetDomainSnapshotPropertiesOutput) ToGetDomainSnapshotPropertiesOutput() GetDomainSnapshotPropertiesOutput {
	return o
}

func (o GetDomainSnapshotPropertiesOutput) ToGetDomainSnapshotPropertiesOutputWithContext(ctx context.Context) GetDomainSnapshotPropertiesOutput {
	return o
}

func (o GetDomainSnapshotPropertiesOutput) Data() DomainsnapshotPtrOutput {
	return o.ApplyT(func(v GetDomainSnapshotProperties) *Domainsnapshot { return v.Data }).(DomainsnapshotPtrOutput)
}

type ListDomainHistoryProperties struct {
	// The domain history for this page
	Data []ListDomainHistoryPropertiesDataItem `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

type ListDomainHistoryPropertiesOutput struct{ *pulumi.OutputState }

func (ListDomainHistoryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainHistoryProperties)(nil)).Elem()
}

func (o ListDomainHistoryPropertiesOutput) ToListDomainHistoryPropertiesOutput() ListDomainHistoryPropertiesOutput {
	return o
}

func (o ListDomainHistoryPropertiesOutput) ToListDomainHistoryPropertiesOutputWithContext(ctx context.Context) ListDomainHistoryPropertiesOutput {
	return o
}

// The domain history for this page
func (o ListDomainHistoryPropertiesOutput) Data() ListDomainHistoryPropertiesDataItemArrayOutput {
	return o.ApplyT(func(v ListDomainHistoryProperties) []ListDomainHistoryPropertiesDataItem { return v.Data }).(ListDomainHistoryPropertiesDataItemArrayOutput)
}

// Metadata for list responses
func (o ListDomainHistoryPropertiesOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListDomainHistoryProperties) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

type ListDomainHistoryPropertiesDataItem struct {
	Domain *SimpleDomain `pulumi:"domain"`
	// The name of the domain
	Name      *string `pulumi:"name"`
	UpdatedAt *string `pulumi:"updatedAt"`
	// The version of the domain resource
	Version *int `pulumi:"version"`
}

type ListDomainHistoryPropertiesDataItemOutput struct{ *pulumi.OutputState }

func (ListDomainHistoryPropertiesDataItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainHistoryPropertiesDataItem)(nil)).Elem()
}

func (o ListDomainHistoryPropertiesDataItemOutput) ToListDomainHistoryPropertiesDataItemOutput() ListDomainHistoryPropertiesDataItemOutput {
	return o
}

func (o ListDomainHistoryPropertiesDataItemOutput) ToListDomainHistoryPropertiesDataItemOutputWithContext(ctx context.Context) ListDomainHistoryPropertiesDataItemOutput {
	return o
}

func (o ListDomainHistoryPropertiesDataItemOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v ListDomainHistoryPropertiesDataItem) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

// The name of the domain
func (o ListDomainHistoryPropertiesDataItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListDomainHistoryPropertiesDataItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ListDomainHistoryPropertiesDataItemOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListDomainHistoryPropertiesDataItem) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The version of the domain resource
func (o ListDomainHistoryPropertiesDataItemOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListDomainHistoryPropertiesDataItem) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type ListDomainHistoryPropertiesDataItemArrayOutput struct{ *pulumi.OutputState }

func (ListDomainHistoryPropertiesDataItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListDomainHistoryPropertiesDataItem)(nil)).Elem()
}

func (o ListDomainHistoryPropertiesDataItemArrayOutput) ToListDomainHistoryPropertiesDataItemArrayOutput() ListDomainHistoryPropertiesDataItemArrayOutput {
	return o
}

func (o ListDomainHistoryPropertiesDataItemArrayOutput) ToListDomainHistoryPropertiesDataItemArrayOutputWithContext(ctx context.Context) ListDomainHistoryPropertiesDataItemArrayOutput {
	return o
}

func (o ListDomainHistoryPropertiesDataItemArrayOutput) Index(i pulumi.IntInput) ListDomainHistoryPropertiesDataItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListDomainHistoryPropertiesDataItem {
		return vs[0].([]ListDomainHistoryPropertiesDataItem)[vs[1].(int)]
	}).(ListDomainHistoryPropertiesDataItemOutput)
}

type ListDomainRecordsProperties struct {
	// The records for this page
	Data []ListDomainRecordsPropertiesDataItem `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

type ListDomainRecordsPropertiesOutput struct{ *pulumi.OutputState }

func (ListDomainRecordsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainRecordsProperties)(nil)).Elem()
}

func (o ListDomainRecordsPropertiesOutput) ToListDomainRecordsPropertiesOutput() ListDomainRecordsPropertiesOutput {
	return o
}

func (o ListDomainRecordsPropertiesOutput) ToListDomainRecordsPropertiesOutputWithContext(ctx context.Context) ListDomainRecordsPropertiesOutput {
	return o
}

// The records for this page
func (o ListDomainRecordsPropertiesOutput) Data() ListDomainRecordsPropertiesDataItemArrayOutput {
	return o.ApplyT(func(v ListDomainRecordsProperties) []ListDomainRecordsPropertiesDataItem { return v.Data }).(ListDomainRecordsPropertiesDataItemArrayOutput)
}

// Metadata for list responses
func (o ListDomainRecordsPropertiesOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListDomainRecordsProperties) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

type ListDomainRecordsPropertiesDataItem struct {
	Domain *SimpleDomain `pulumi:"domain"`
	// Links for the domain record
	Links *DomainrecordPropertiesLinksProperties `pulumi:"links"`
}

type ListDomainRecordsPropertiesDataItemOutput struct{ *pulumi.OutputState }

func (ListDomainRecordsPropertiesDataItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainRecordsPropertiesDataItem)(nil)).Elem()
}

func (o ListDomainRecordsPropertiesDataItemOutput) ToListDomainRecordsPropertiesDataItemOutput() ListDomainRecordsPropertiesDataItemOutput {
	return o
}

func (o ListDomainRecordsPropertiesDataItemOutput) ToListDomainRecordsPropertiesDataItemOutputWithContext(ctx context.Context) ListDomainRecordsPropertiesDataItemOutput {
	return o
}

func (o ListDomainRecordsPropertiesDataItemOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v ListDomainRecordsPropertiesDataItem) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

// Links for the domain record
func (o ListDomainRecordsPropertiesDataItemOutput) Links() DomainrecordPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v ListDomainRecordsPropertiesDataItem) *DomainrecordPropertiesLinksProperties { return v.Links }).(DomainrecordPropertiesLinksPropertiesPtrOutput)
}

type ListDomainRecordsPropertiesDataItemArrayOutput struct{ *pulumi.OutputState }

func (ListDomainRecordsPropertiesDataItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListDomainRecordsPropertiesDataItem)(nil)).Elem()
}

func (o ListDomainRecordsPropertiesDataItemArrayOutput) ToListDomainRecordsPropertiesDataItemArrayOutput() ListDomainRecordsPropertiesDataItemArrayOutput {
	return o
}

func (o ListDomainRecordsPropertiesDataItemArrayOutput) ToListDomainRecordsPropertiesDataItemArrayOutputWithContext(ctx context.Context) ListDomainRecordsPropertiesDataItemArrayOutput {
	return o
}

func (o ListDomainRecordsPropertiesDataItemArrayOutput) Index(i pulumi.IntInput) ListDomainRecordsPropertiesDataItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListDomainRecordsPropertiesDataItem {
		return vs[0].([]ListDomainRecordsPropertiesDataItem)[vs[1].(int)]
	}).(ListDomainRecordsPropertiesDataItemOutput)
}

type ListDomainSnapshotsProperties struct {
	// The domain snapshots for this page
	Data []ListDomainSnapshotsPropertiesDataItem `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

type ListDomainSnapshotsPropertiesOutput struct{ *pulumi.OutputState }

func (ListDomainSnapshotsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainSnapshotsProperties)(nil)).Elem()
}

func (o ListDomainSnapshotsPropertiesOutput) ToListDomainSnapshotsPropertiesOutput() ListDomainSnapshotsPropertiesOutput {
	return o
}

func (o ListDomainSnapshotsPropertiesOutput) ToListDomainSnapshotsPropertiesOutputWithContext(ctx context.Context) ListDomainSnapshotsPropertiesOutput {
	return o
}

// The domain snapshots for this page
func (o ListDomainSnapshotsPropertiesOutput) Data() ListDomainSnapshotsPropertiesDataItemArrayOutput {
	return o.ApplyT(func(v ListDomainSnapshotsProperties) []ListDomainSnapshotsPropertiesDataItem { return v.Data }).(ListDomainSnapshotsPropertiesDataItemArrayOutput)
}

// Metadata for list responses
func (o ListDomainSnapshotsPropertiesOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListDomainSnapshotsProperties) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

type ListDomainSnapshotsPropertiesDataItem struct {
	Domain *SimpleDomain `pulumi:"domain"`
	// The name of the domain
	Name      *string `pulumi:"name"`
	UpdatedAt *string `pulumi:"updatedAt"`
	// The version of the domain resource
	Version *int `pulumi:"version"`
}

type ListDomainSnapshotsPropertiesDataItemOutput struct{ *pulumi.OutputState }

func (ListDomainSnapshotsPropertiesDataItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainSnapshotsPropertiesDataItem)(nil)).Elem()
}

func (o ListDomainSnapshotsPropertiesDataItemOutput) ToListDomainSnapshotsPropertiesDataItemOutput() ListDomainSnapshotsPropertiesDataItemOutput {
	return o
}

func (o ListDomainSnapshotsPropertiesDataItemOutput) ToListDomainSnapshotsPropertiesDataItemOutputWithContext(ctx context.Context) ListDomainSnapshotsPropertiesDataItemOutput {
	return o
}

func (o ListDomainSnapshotsPropertiesDataItemOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v ListDomainSnapshotsPropertiesDataItem) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

// The name of the domain
func (o ListDomainSnapshotsPropertiesDataItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListDomainSnapshotsPropertiesDataItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ListDomainSnapshotsPropertiesDataItemOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListDomainSnapshotsPropertiesDataItem) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The version of the domain resource
func (o ListDomainSnapshotsPropertiesDataItemOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListDomainSnapshotsPropertiesDataItem) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type ListDomainSnapshotsPropertiesDataItemArrayOutput struct{ *pulumi.OutputState }

func (ListDomainSnapshotsPropertiesDataItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListDomainSnapshotsPropertiesDataItem)(nil)).Elem()
}

func (o ListDomainSnapshotsPropertiesDataItemArrayOutput) ToListDomainSnapshotsPropertiesDataItemArrayOutput() ListDomainSnapshotsPropertiesDataItemArrayOutput {
	return o
}

func (o ListDomainSnapshotsPropertiesDataItemArrayOutput) ToListDomainSnapshotsPropertiesDataItemArrayOutputWithContext(ctx context.Context) ListDomainSnapshotsPropertiesDataItemArrayOutput {
	return o
}

func (o ListDomainSnapshotsPropertiesDataItemArrayOutput) Index(i pulumi.IntInput) ListDomainSnapshotsPropertiesDataItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListDomainSnapshotsPropertiesDataItem {
		return vs[0].([]ListDomainSnapshotsPropertiesDataItem)[vs[1].(int)]
	}).(ListDomainSnapshotsPropertiesDataItemOutput)
}

type ListDomainsProperties struct {
	// The domains for this page
	Data []DomainType `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

type ListDomainsPropertiesOutput struct{ *pulumi.OutputState }

func (ListDomainsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainsProperties)(nil)).Elem()
}

func (o ListDomainsPropertiesOutput) ToListDomainsPropertiesOutput() ListDomainsPropertiesOutput {
	return o
}

func (o ListDomainsPropertiesOutput) ToListDomainsPropertiesOutputWithContext(ctx context.Context) ListDomainsPropertiesOutput {
	return o
}

// The domains for this page
func (o ListDomainsPropertiesOutput) Data() DomainTypeArrayOutput {
	return o.ApplyT(func(v ListDomainsProperties) []DomainType { return v.Data }).(DomainTypeArrayOutput)
}

// Metadata for list responses
func (o ListDomainsPropertiesOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListDomainsProperties) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

// Metadata for list responses
type ListMetadata struct {
	// Relevant links for this list
	Links *ListMetadataLinksProperties `pulumi:"links"`
	// Pagination details
	Pagination *ListMetadataPaginationProperties `pulumi:"pagination"`
}

// Metadata for list responses
type ListMetadataOutput struct{ *pulumi.OutputState }

func (ListMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadata)(nil)).Elem()
}

func (o ListMetadataOutput) ToListMetadataOutput() ListMetadataOutput {
	return o
}

func (o ListMetadataOutput) ToListMetadataOutputWithContext(ctx context.Context) ListMetadataOutput {
	return o
}

// Relevant links for this list
func (o ListMetadataOutput) Links() ListMetadataLinksPropertiesPtrOutput {
	return o.ApplyT(func(v ListMetadata) *ListMetadataLinksProperties { return v.Links }).(ListMetadataLinksPropertiesPtrOutput)
}

// Pagination details
func (o ListMetadataOutput) Pagination() ListMetadataPaginationPropertiesPtrOutput {
	return o.ApplyT(func(v ListMetadata) *ListMetadataPaginationProperties { return v.Pagination }).(ListMetadataPaginationPropertiesPtrOutput)
}

type ListMetadataPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadata)(nil)).Elem()
}

func (o ListMetadataPtrOutput) ToListMetadataPtrOutput() ListMetadataPtrOutput {
	return o
}

func (o ListMetadataPtrOutput) ToListMetadataPtrOutputWithContext(ctx context.Context) ListMetadataPtrOutput {
	return o
}

func (o ListMetadataPtrOutput) Elem() ListMetadataOutput {
	return o.ApplyT(func(v *ListMetadata) ListMetadata {
		if v != nil {
			return *v
		}
		var ret ListMetadata
		return ret
	}).(ListMetadataOutput)
}

// Relevant links for this list
func (o ListMetadataPtrOutput) Links() ListMetadataLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *ListMetadata) *ListMetadataLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(ListMetadataLinksPropertiesPtrOutput)
}

// Pagination details
func (o ListMetadataPtrOutput) Pagination() ListMetadataPaginationPropertiesPtrOutput {
	return o.ApplyT(func(v *ListMetadata) *ListMetadataPaginationProperties {
		if v == nil {
			return nil
		}
		return v.Pagination
	}).(ListMetadataPaginationPropertiesPtrOutput)
}

// Relevant links for this list
type ListMetadataLinksProperties struct {
	First    *string `pulumi:"first"`
	Last     *string `pulumi:"last"`
	Next     *string `pulumi:"next"`
	Previous *string `pulumi:"previous"`
	Self     *string `pulumi:"self"`
}

// Relevant links for this list
type ListMetadataLinksPropertiesOutput struct{ *pulumi.OutputState }

func (ListMetadataLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadataLinksProperties)(nil)).Elem()
}

func (o ListMetadataLinksPropertiesOutput) ToListMetadataLinksPropertiesOutput() ListMetadataLinksPropertiesOutput {
	return o
}

func (o ListMetadataLinksPropertiesOutput) ToListMetadataLinksPropertiesOutputWithContext(ctx context.Context) ListMetadataLinksPropertiesOutput {
	return o
}

func (o ListMetadataLinksPropertiesOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.First }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Last }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Previous() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Previous }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type ListMetadataLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadataLinksProperties)(nil)).Elem()
}

func (o ListMetadataLinksPropertiesPtrOutput) ToListMetadataLinksPropertiesPtrOutput() ListMetadataLinksPropertiesPtrOutput {
	return o
}

func (o ListMetadataLinksPropertiesPtrOutput) ToListMetadataLinksPropertiesPtrOutputWithContext(ctx context.Context) ListMetadataLinksPropertiesPtrOutput {
	return o
}

func (o ListMetadataLinksPropertiesPtrOutput) Elem() ListMetadataLinksPropertiesOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) ListMetadataLinksProperties {
		if v != nil {
			return *v
		}
		var ret ListMetadataLinksProperties
		return ret
	}).(ListMetadataLinksPropertiesOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.First
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Last
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Previous() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Previous
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// Pagination details
type ListMetadataPaginationProperties struct {
	// The number of items in this page of the response
	Count *int `pulumi:"count"`
	// The current results page
	CurrentPage *int `pulumi:"currentPage"`
	// The number of items per page
	PerPage *int `pulumi:"perPage"`
	// The total number of objects matching the query
	Total *int `pulumi:"total"`
	// The total number of pages
	TotalPages *int `pulumi:"totalPages"`
}

// Pagination details
type ListMetadataPaginationPropertiesOutput struct{ *pulumi.OutputState }

func (ListMetadataPaginationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadataPaginationProperties)(nil)).Elem()
}

func (o ListMetadataPaginationPropertiesOutput) ToListMetadataPaginationPropertiesOutput() ListMetadataPaginationPropertiesOutput {
	return o
}

func (o ListMetadataPaginationPropertiesOutput) ToListMetadataPaginationPropertiesOutputWithContext(ctx context.Context) ListMetadataPaginationPropertiesOutput {
	return o
}

// The number of items in this page of the response
func (o ListMetadataPaginationPropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The current results page
func (o ListMetadataPaginationPropertiesOutput) CurrentPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.CurrentPage }).(pulumi.IntPtrOutput)
}

// The number of items per page
func (o ListMetadataPaginationPropertiesOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// The total number of objects matching the query
func (o ListMetadataPaginationPropertiesOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.Total }).(pulumi.IntPtrOutput)
}

// The total number of pages
func (o ListMetadataPaginationPropertiesOutput) TotalPages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.TotalPages }).(pulumi.IntPtrOutput)
}

type ListMetadataPaginationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataPaginationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadataPaginationProperties)(nil)).Elem()
}

func (o ListMetadataPaginationPropertiesPtrOutput) ToListMetadataPaginationPropertiesPtrOutput() ListMetadataPaginationPropertiesPtrOutput {
	return o
}

func (o ListMetadataPaginationPropertiesPtrOutput) ToListMetadataPaginationPropertiesPtrOutputWithContext(ctx context.Context) ListMetadataPaginationPropertiesPtrOutput {
	return o
}

func (o ListMetadataPaginationPropertiesPtrOutput) Elem() ListMetadataPaginationPropertiesOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) ListMetadataPaginationProperties {
		if v != nil {
			return *v
		}
		var ret ListMetadataPaginationProperties
		return ret
	}).(ListMetadataPaginationPropertiesOutput)
}

// The number of items in this page of the response
func (o ListMetadataPaginationPropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The current results page
func (o ListMetadataPaginationPropertiesPtrOutput) CurrentPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.CurrentPage
	}).(pulumi.IntPtrOutput)
}

// The number of items per page
func (o ListMetadataPaginationPropertiesPtrOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.PerPage
	}).(pulumi.IntPtrOutput)
}

// The total number of objects matching the query
func (o ListMetadataPaginationPropertiesPtrOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.Total
	}).(pulumi.IntPtrOutput)
}

// The total number of pages
func (o ListMetadataPaginationPropertiesPtrOutput) TotalPages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.TotalPages
	}).(pulumi.IntPtrOutput)
}

// A simple version of a contact list when inclued with other resources
type SimpleContactlist struct {
	// Unique ID for the contact list
	Id *int `pulumi:"id"`
	// Links for domain objects
	Links *SimpleContactlistLinksProperties `pulumi:"links"`
}

// A simple version of a contact list when inclued with other resources
type SimpleContactlistOutput struct{ *pulumi.OutputState }

func (SimpleContactlistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleContactlist)(nil)).Elem()
}

func (o SimpleContactlistOutput) ToSimpleContactlistOutput() SimpleContactlistOutput {
	return o
}

func (o SimpleContactlistOutput) ToSimpleContactlistOutputWithContext(ctx context.Context) SimpleContactlistOutput {
	return o
}

// Unique ID for the contact list
func (o SimpleContactlistOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleContactlist) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links for domain objects
func (o SimpleContactlistOutput) Links() SimpleContactlistLinksPropertiesPtrOutput {
	return o.ApplyT(func(v SimpleContactlist) *SimpleContactlistLinksProperties { return v.Links }).(SimpleContactlistLinksPropertiesPtrOutput)
}

type SimpleContactlistArrayOutput struct{ *pulumi.OutputState }

func (SimpleContactlistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SimpleContactlist)(nil)).Elem()
}

func (o SimpleContactlistArrayOutput) ToSimpleContactlistArrayOutput() SimpleContactlistArrayOutput {
	return o
}

func (o SimpleContactlistArrayOutput) ToSimpleContactlistArrayOutputWithContext(ctx context.Context) SimpleContactlistArrayOutput {
	return o
}

func (o SimpleContactlistArrayOutput) Index(i pulumi.IntInput) SimpleContactlistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SimpleContactlist {
		return vs[0].([]SimpleContactlist)[vs[1].(int)]
	}).(SimpleContactlistOutput)
}

// Links for domain objects
type SimpleContactlistLinksProperties struct {
	Self *string `pulumi:"self"`
}

// Links for domain objects
type SimpleContactlistLinksPropertiesOutput struct{ *pulumi.OutputState }

func (SimpleContactlistLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleContactlistLinksProperties)(nil)).Elem()
}

func (o SimpleContactlistLinksPropertiesOutput) ToSimpleContactlistLinksPropertiesOutput() SimpleContactlistLinksPropertiesOutput {
	return o
}

func (o SimpleContactlistLinksPropertiesOutput) ToSimpleContactlistLinksPropertiesOutputWithContext(ctx context.Context) SimpleContactlistLinksPropertiesOutput {
	return o
}

func (o SimpleContactlistLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleContactlistLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type SimpleContactlistLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SimpleContactlistLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleContactlistLinksProperties)(nil)).Elem()
}

func (o SimpleContactlistLinksPropertiesPtrOutput) ToSimpleContactlistLinksPropertiesPtrOutput() SimpleContactlistLinksPropertiesPtrOutput {
	return o
}

func (o SimpleContactlistLinksPropertiesPtrOutput) ToSimpleContactlistLinksPropertiesPtrOutputWithContext(ctx context.Context) SimpleContactlistLinksPropertiesPtrOutput {
	return o
}

func (o SimpleContactlistLinksPropertiesPtrOutput) Elem() SimpleContactlistLinksPropertiesOutput {
	return o.ApplyT(func(v *SimpleContactlistLinksProperties) SimpleContactlistLinksProperties {
		if v != nil {
			return *v
		}
		var ret SimpleContactlistLinksProperties
		return ret
	}).(SimpleContactlistLinksPropertiesOutput)
}

func (o SimpleContactlistLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleContactlistLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type SimpleDomain struct {
	CreatedAt *string `pulumi:"createdAt"`
	// Is the domain enabled
	Enabled *bool `pulumi:"enabled"`
	// Is GeoIP functionality enabled for the domain
	Geoip *bool `pulumi:"geoip"`
	// Is Global Traffic Director enabled for the domain
	Gtd *bool `pulumi:"gtd"`
	// A unique numeric ID for this domain
	Id *int `pulumi:"id"`
	// Links for domain objects
	Links *SimpleDomainLinksProperties `pulumi:"links"`
	// The name of the domain
	Name *string `pulumi:"name"`
	// A note for the domain
	Note   *string             `pulumi:"note"`
	Status *SimpleDomainStatus `pulumi:"status"`
	// An array of tags for this domain.
	Tags      []Tag   `pulumi:"tags"`
	UpdatedAt *string `pulumi:"updatedAt"`
	// The version of the domain resource
	Version *int `pulumi:"version"`
}

type SimpleDomainOutput struct{ *pulumi.OutputState }

func (SimpleDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleDomain)(nil)).Elem()
}

func (o SimpleDomainOutput) ToSimpleDomainOutput() SimpleDomainOutput {
	return o
}

func (o SimpleDomainOutput) ToSimpleDomainOutputWithContext(ctx context.Context) SimpleDomainOutput {
	return o
}

func (o SimpleDomainOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Is the domain enabled
func (o SimpleDomainOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Is GeoIP functionality enabled for the domain
func (o SimpleDomainOutput) Geoip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *bool { return v.Geoip }).(pulumi.BoolPtrOutput)
}

// Is Global Traffic Director enabled for the domain
func (o SimpleDomainOutput) Gtd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *bool { return v.Gtd }).(pulumi.BoolPtrOutput)
}

// A unique numeric ID for this domain
func (o SimpleDomainOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links for domain objects
func (o SimpleDomainOutput) Links() SimpleDomainLinksPropertiesPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *SimpleDomainLinksProperties { return v.Links }).(SimpleDomainLinksPropertiesPtrOutput)
}

// The name of the domain
func (o SimpleDomainOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A note for the domain
func (o SimpleDomainOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *string { return v.Note }).(pulumi.StringPtrOutput)
}

func (o SimpleDomainOutput) Status() SimpleDomainStatusPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *SimpleDomainStatus { return v.Status }).(SimpleDomainStatusPtrOutput)
}

// An array of tags for this domain.
func (o SimpleDomainOutput) Tags() TagArrayOutput {
	return o.ApplyT(func(v SimpleDomain) []Tag { return v.Tags }).(TagArrayOutput)
}

func (o SimpleDomainOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The version of the domain resource
func (o SimpleDomainOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type SimpleDomainPtrOutput struct{ *pulumi.OutputState }

func (SimpleDomainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleDomain)(nil)).Elem()
}

func (o SimpleDomainPtrOutput) ToSimpleDomainPtrOutput() SimpleDomainPtrOutput {
	return o
}

func (o SimpleDomainPtrOutput) ToSimpleDomainPtrOutputWithContext(ctx context.Context) SimpleDomainPtrOutput {
	return o
}

func (o SimpleDomainPtrOutput) Elem() SimpleDomainOutput {
	return o.ApplyT(func(v *SimpleDomain) SimpleDomain {
		if v != nil {
			return *v
		}
		var ret SimpleDomain
		return ret
	}).(SimpleDomainOutput)
}

func (o SimpleDomainPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Is the domain enabled
func (o SimpleDomainPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Is GeoIP functionality enabled for the domain
func (o SimpleDomainPtrOutput) Geoip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *bool {
		if v == nil {
			return nil
		}
		return v.Geoip
	}).(pulumi.BoolPtrOutput)
}

// Is Global Traffic Director enabled for the domain
func (o SimpleDomainPtrOutput) Gtd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *bool {
		if v == nil {
			return nil
		}
		return v.Gtd
	}).(pulumi.BoolPtrOutput)
}

// A unique numeric ID for this domain
func (o SimpleDomainPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// Links for domain objects
func (o SimpleDomainPtrOutput) Links() SimpleDomainLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *SimpleDomainLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(SimpleDomainLinksPropertiesPtrOutput)
}

// The name of the domain
func (o SimpleDomainPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A note for the domain
func (o SimpleDomainPtrOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *string {
		if v == nil {
			return nil
		}
		return v.Note
	}).(pulumi.StringPtrOutput)
}

func (o SimpleDomainPtrOutput) Status() SimpleDomainStatusPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *SimpleDomainStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(SimpleDomainStatusPtrOutput)
}

// An array of tags for this domain.
func (o SimpleDomainPtrOutput) Tags() TagArrayOutput {
	return o.ApplyT(func(v *SimpleDomain) []Tag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(TagArrayOutput)
}

func (o SimpleDomainPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// The version of the domain resource
func (o SimpleDomainPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SimpleDomain) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// Links for domain objects
type SimpleDomainLinksProperties struct {
	Records *string `pulumi:"records"`
	Self    *string `pulumi:"self"`
}

// Links for domain objects
type SimpleDomainLinksPropertiesOutput struct{ *pulumi.OutputState }

func (SimpleDomainLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleDomainLinksProperties)(nil)).Elem()
}

func (o SimpleDomainLinksPropertiesOutput) ToSimpleDomainLinksPropertiesOutput() SimpleDomainLinksPropertiesOutput {
	return o
}

func (o SimpleDomainLinksPropertiesOutput) ToSimpleDomainLinksPropertiesOutputWithContext(ctx context.Context) SimpleDomainLinksPropertiesOutput {
	return o
}

func (o SimpleDomainLinksPropertiesOutput) Records() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomainLinksProperties) *string { return v.Records }).(pulumi.StringPtrOutput)
}

func (o SimpleDomainLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomainLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type SimpleDomainLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SimpleDomainLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleDomainLinksProperties)(nil)).Elem()
}

func (o SimpleDomainLinksPropertiesPtrOutput) ToSimpleDomainLinksPropertiesPtrOutput() SimpleDomainLinksPropertiesPtrOutput {
	return o
}

func (o SimpleDomainLinksPropertiesPtrOutput) ToSimpleDomainLinksPropertiesPtrOutputWithContext(ctx context.Context) SimpleDomainLinksPropertiesPtrOutput {
	return o
}

func (o SimpleDomainLinksPropertiesPtrOutput) Elem() SimpleDomainLinksPropertiesOutput {
	return o.ApplyT(func(v *SimpleDomainLinksProperties) SimpleDomainLinksProperties {
		if v != nil {
			return *v
		}
		var ret SimpleDomainLinksProperties
		return ret
	}).(SimpleDomainLinksPropertiesOutput)
}

func (o SimpleDomainLinksPropertiesPtrOutput) Records() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleDomainLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Records
	}).(pulumi.StringPtrOutput)
}

func (o SimpleDomainLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleDomainLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type SimpleTemplate struct {
	// The unique ID for this template
	Id *int `pulumi:"id"`
	// Links for the template
	Links *SimpleTemplateLinksProperties `pulumi:"links"`
	// The name for the template
	Name *string `pulumi:"name"`
	// The version of the template resource
	Version *int `pulumi:"version"`
}

type SimpleTemplateOutput struct{ *pulumi.OutputState }

func (SimpleTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleTemplate)(nil)).Elem()
}

func (o SimpleTemplateOutput) ToSimpleTemplateOutput() SimpleTemplateOutput {
	return o
}

func (o SimpleTemplateOutput) ToSimpleTemplateOutputWithContext(ctx context.Context) SimpleTemplateOutput {
	return o
}

// The unique ID for this template
func (o SimpleTemplateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleTemplate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links for the template
func (o SimpleTemplateOutput) Links() SimpleTemplateLinksPropertiesPtrOutput {
	return o.ApplyT(func(v SimpleTemplate) *SimpleTemplateLinksProperties { return v.Links }).(SimpleTemplateLinksPropertiesPtrOutput)
}

// The name for the template
func (o SimpleTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The version of the template resource
func (o SimpleTemplateOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleTemplate) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type SimpleTemplatePtrOutput struct{ *pulumi.OutputState }

func (SimpleTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleTemplate)(nil)).Elem()
}

func (o SimpleTemplatePtrOutput) ToSimpleTemplatePtrOutput() SimpleTemplatePtrOutput {
	return o
}

func (o SimpleTemplatePtrOutput) ToSimpleTemplatePtrOutputWithContext(ctx context.Context) SimpleTemplatePtrOutput {
	return o
}

func (o SimpleTemplatePtrOutput) Elem() SimpleTemplateOutput {
	return o.ApplyT(func(v *SimpleTemplate) SimpleTemplate {
		if v != nil {
			return *v
		}
		var ret SimpleTemplate
		return ret
	}).(SimpleTemplateOutput)
}

// The unique ID for this template
func (o SimpleTemplatePtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SimpleTemplate) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// Links for the template
func (o SimpleTemplatePtrOutput) Links() SimpleTemplateLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *SimpleTemplate) *SimpleTemplateLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(SimpleTemplateLinksPropertiesPtrOutput)
}

// The name for the template
func (o SimpleTemplatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The version of the template resource
func (o SimpleTemplatePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SimpleTemplate) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// Links for the template
type SimpleTemplateLinksProperties struct {
	Records *string `pulumi:"records"`
	Self    *string `pulumi:"self"`
}

// Links for the template
type SimpleTemplateLinksPropertiesOutput struct{ *pulumi.OutputState }

func (SimpleTemplateLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleTemplateLinksProperties)(nil)).Elem()
}

func (o SimpleTemplateLinksPropertiesOutput) ToSimpleTemplateLinksPropertiesOutput() SimpleTemplateLinksPropertiesOutput {
	return o
}

func (o SimpleTemplateLinksPropertiesOutput) ToSimpleTemplateLinksPropertiesOutputWithContext(ctx context.Context) SimpleTemplateLinksPropertiesOutput {
	return o
}

func (o SimpleTemplateLinksPropertiesOutput) Records() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleTemplateLinksProperties) *string { return v.Records }).(pulumi.StringPtrOutput)
}

func (o SimpleTemplateLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleTemplateLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type SimpleTemplateLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SimpleTemplateLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleTemplateLinksProperties)(nil)).Elem()
}

func (o SimpleTemplateLinksPropertiesPtrOutput) ToSimpleTemplateLinksPropertiesPtrOutput() SimpleTemplateLinksPropertiesPtrOutput {
	return o
}

func (o SimpleTemplateLinksPropertiesPtrOutput) ToSimpleTemplateLinksPropertiesPtrOutputWithContext(ctx context.Context) SimpleTemplateLinksPropertiesPtrOutput {
	return o
}

func (o SimpleTemplateLinksPropertiesPtrOutput) Elem() SimpleTemplateLinksPropertiesOutput {
	return o.ApplyT(func(v *SimpleTemplateLinksProperties) SimpleTemplateLinksProperties {
		if v != nil {
			return *v
		}
		var ret SimpleTemplateLinksProperties
		return ret
	}).(SimpleTemplateLinksPropertiesOutput)
}

func (o SimpleTemplateLinksPropertiesPtrOutput) Records() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleTemplateLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Records
	}).(pulumi.StringPtrOutput)
}

func (o SimpleTemplateLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleTemplateLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// A simplied version of a rebranded nameserver using your own domain name.
type SimpleVanitynameserver struct {
	// A unique ID for the vanity nameserver
	Id *int `pulumi:"id"`
	// Links relevant to this object
	Links *SimpleVanitynameserverLinksProperties `pulumi:"links"`
}

// A simplied version of a rebranded nameserver using your own domain name.
type SimpleVanitynameserverOutput struct{ *pulumi.OutputState }

func (SimpleVanitynameserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleVanitynameserver)(nil)).Elem()
}

func (o SimpleVanitynameserverOutput) ToSimpleVanitynameserverOutput() SimpleVanitynameserverOutput {
	return o
}

func (o SimpleVanitynameserverOutput) ToSimpleVanitynameserverOutputWithContext(ctx context.Context) SimpleVanitynameserverOutput {
	return o
}

// A unique ID for the vanity nameserver
func (o SimpleVanitynameserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleVanitynameserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links relevant to this object
func (o SimpleVanitynameserverOutput) Links() SimpleVanitynameserverLinksPropertiesPtrOutput {
	return o.ApplyT(func(v SimpleVanitynameserver) *SimpleVanitynameserverLinksProperties { return v.Links }).(SimpleVanitynameserverLinksPropertiesPtrOutput)
}

type SimpleVanitynameserverPtrOutput struct{ *pulumi.OutputState }

func (SimpleVanitynameserverPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleVanitynameserver)(nil)).Elem()
}

func (o SimpleVanitynameserverPtrOutput) ToSimpleVanitynameserverPtrOutput() SimpleVanitynameserverPtrOutput {
	return o
}

func (o SimpleVanitynameserverPtrOutput) ToSimpleVanitynameserverPtrOutputWithContext(ctx context.Context) SimpleVanitynameserverPtrOutput {
	return o
}

func (o SimpleVanitynameserverPtrOutput) Elem() SimpleVanitynameserverOutput {
	return o.ApplyT(func(v *SimpleVanitynameserver) SimpleVanitynameserver {
		if v != nil {
			return *v
		}
		var ret SimpleVanitynameserver
		return ret
	}).(SimpleVanitynameserverOutput)
}

// A unique ID for the vanity nameserver
func (o SimpleVanitynameserverPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SimpleVanitynameserver) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// Links relevant to this object
func (o SimpleVanitynameserverPtrOutput) Links() SimpleVanitynameserverLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *SimpleVanitynameserver) *SimpleVanitynameserverLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(SimpleVanitynameserverLinksPropertiesPtrOutput)
}

// Links relevant to this object
type SimpleVanitynameserverLinksProperties struct {
	Self *string `pulumi:"self"`
}

// Links relevant to this object
type SimpleVanitynameserverLinksPropertiesOutput struct{ *pulumi.OutputState }

func (SimpleVanitynameserverLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleVanitynameserverLinksProperties)(nil)).Elem()
}

func (o SimpleVanitynameserverLinksPropertiesOutput) ToSimpleVanitynameserverLinksPropertiesOutput() SimpleVanitynameserverLinksPropertiesOutput {
	return o
}

func (o SimpleVanitynameserverLinksPropertiesOutput) ToSimpleVanitynameserverLinksPropertiesOutputWithContext(ctx context.Context) SimpleVanitynameserverLinksPropertiesOutput {
	return o
}

func (o SimpleVanitynameserverLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleVanitynameserverLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type SimpleVanitynameserverLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SimpleVanitynameserverLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleVanitynameserverLinksProperties)(nil)).Elem()
}

func (o SimpleVanitynameserverLinksPropertiesPtrOutput) ToSimpleVanitynameserverLinksPropertiesPtrOutput() SimpleVanitynameserverLinksPropertiesPtrOutput {
	return o
}

func (o SimpleVanitynameserverLinksPropertiesPtrOutput) ToSimpleVanitynameserverLinksPropertiesPtrOutputWithContext(ctx context.Context) SimpleVanitynameserverLinksPropertiesPtrOutput {
	return o
}

func (o SimpleVanitynameserverLinksPropertiesPtrOutput) Elem() SimpleVanitynameserverLinksPropertiesOutput {
	return o.ApplyT(func(v *SimpleVanitynameserverLinksProperties) SimpleVanitynameserverLinksProperties {
		if v != nil {
			return *v
		}
		var ret SimpleVanitynameserverLinksProperties
		return ret
	}).(SimpleVanitynameserverLinksPropertiesOutput)
}

func (o SimpleVanitynameserverLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleVanitynameserverLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// SOA (Start of Authority) Record
type Soa struct {
	// Email of the administrator for the domain. @ should be replaced with .
	Email *string `pulumi:"email"`
	// Number of seconds after which secondary nameservers should stop responding to queries, if the master does not respond
	Expire *int `pulumi:"expire"`
	// How long NXDOMAIN responses should be cached for
	NegativeCache *int `pulumi:"negativeCache"`
	// Primary master nameserver for the domain
	PrimaryNameserver *string `pulumi:"primaryNameserver"`
	// The interval for secondary nameservers should query for the SOA record
	Refresh *int `pulumi:"refresh"`
	// The number of seconds after which secondary servers should retry to request the serial number if the master does not respond
	Retry *int `pulumi:"retry"`
	// A serial number for this version of the records for this domain
	Serial *int `pulumi:"serial"`
	// The Time To Live (TTL) in seconds for the SOA record
	Ttl *int `pulumi:"ttl"`
}

// SOA (Start of Authority) Record
type SoaOutput struct{ *pulumi.OutputState }

func (SoaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Soa)(nil)).Elem()
}

func (o SoaOutput) ToSoaOutput() SoaOutput {
	return o
}

func (o SoaOutput) ToSoaOutputWithContext(ctx context.Context) SoaOutput {
	return o
}

// Email of the administrator for the domain. @ should be replaced with .
func (o SoaOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Soa) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Number of seconds after which secondary nameservers should stop responding to queries, if the master does not respond
func (o SoaOutput) Expire() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Soa) *int { return v.Expire }).(pulumi.IntPtrOutput)
}

// How long NXDOMAIN responses should be cached for
func (o SoaOutput) NegativeCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Soa) *int { return v.NegativeCache }).(pulumi.IntPtrOutput)
}

// Primary master nameserver for the domain
func (o SoaOutput) PrimaryNameserver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Soa) *string { return v.PrimaryNameserver }).(pulumi.StringPtrOutput)
}

// The interval for secondary nameservers should query for the SOA record
func (o SoaOutput) Refresh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Soa) *int { return v.Refresh }).(pulumi.IntPtrOutput)
}

// The number of seconds after which secondary servers should retry to request the serial number if the master does not respond
func (o SoaOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Soa) *int { return v.Retry }).(pulumi.IntPtrOutput)
}

// A serial number for this version of the records for this domain
func (o SoaOutput) Serial() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Soa) *int { return v.Serial }).(pulumi.IntPtrOutput)
}

// The Time To Live (TTL) in seconds for the SOA record
func (o SoaOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Soa) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type SoaPtrOutput struct{ *pulumi.OutputState }

func (SoaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Soa)(nil)).Elem()
}

func (o SoaPtrOutput) ToSoaPtrOutput() SoaPtrOutput {
	return o
}

func (o SoaPtrOutput) ToSoaPtrOutputWithContext(ctx context.Context) SoaPtrOutput {
	return o
}

func (o SoaPtrOutput) Elem() SoaOutput {
	return o.ApplyT(func(v *Soa) Soa {
		if v != nil {
			return *v
		}
		var ret Soa
		return ret
	}).(SoaOutput)
}

// Email of the administrator for the domain. @ should be replaced with .
func (o SoaPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Soa) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Number of seconds after which secondary nameservers should stop responding to queries, if the master does not respond
func (o SoaPtrOutput) Expire() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Soa) *int {
		if v == nil {
			return nil
		}
		return v.Expire
	}).(pulumi.IntPtrOutput)
}

// How long NXDOMAIN responses should be cached for
func (o SoaPtrOutput) NegativeCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Soa) *int {
		if v == nil {
			return nil
		}
		return v.NegativeCache
	}).(pulumi.IntPtrOutput)
}

// Primary master nameserver for the domain
func (o SoaPtrOutput) PrimaryNameserver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Soa) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryNameserver
	}).(pulumi.StringPtrOutput)
}

// The interval for secondary nameservers should query for the SOA record
func (o SoaPtrOutput) Refresh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Soa) *int {
		if v == nil {
			return nil
		}
		return v.Refresh
	}).(pulumi.IntPtrOutput)
}

// The number of seconds after which secondary servers should retry to request the serial number if the master does not respond
func (o SoaPtrOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Soa) *int {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(pulumi.IntPtrOutput)
}

// A serial number for this version of the records for this domain
func (o SoaPtrOutput) Serial() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Soa) *int {
		if v == nil {
			return nil
		}
		return v.Serial
	}).(pulumi.IntPtrOutput)
}

// The Time To Live (TTL) in seconds for the SOA record
func (o SoaPtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Soa) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

// The SOA details for the domain
type SoaProperties struct {
	// Email of the administrator for the domain. @ should be replaced with .
	Email *string `pulumi:"email"`
	// Number of seconds after which secondary nameservers should stop responding to queries, if the master does not respond
	Expire *int `pulumi:"expire"`
	// How long NXDOMAIN responses should be cached for
	NegativeCache *int `pulumi:"negativeCache"`
	// Primary master nameserver for the domain
	PrimaryNameserver *string `pulumi:"primaryNameserver"`
	// The interval for secondary nameservers should query for the SOA record
	Refresh *int `pulumi:"refresh"`
	// The number of seconds after which secondary servers should retry to request the serial number if the master does not respond
	Retry *int `pulumi:"retry"`
	// The Time To Live (TTL) in seconds for the SOA record
	Ttl *int `pulumi:"ttl"`
}

// SoaPropertiesInput is an input type that accepts SoaPropertiesArgs and SoaPropertiesOutput values.
// You can construct a concrete instance of `SoaPropertiesInput` via:
//
//	SoaPropertiesArgs{...}
type SoaPropertiesInput interface {
	pulumi.Input

	ToSoaPropertiesOutput() SoaPropertiesOutput
	ToSoaPropertiesOutputWithContext(context.Context) SoaPropertiesOutput
}

// The SOA details for the domain
type SoaPropertiesArgs struct {
	// Email of the administrator for the domain. @ should be replaced with .
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Number of seconds after which secondary nameservers should stop responding to queries, if the master does not respond
	Expire pulumi.IntPtrInput `pulumi:"expire"`
	// How long NXDOMAIN responses should be cached for
	NegativeCache pulumi.IntPtrInput `pulumi:"negativeCache"`
	// Primary master nameserver for the domain
	PrimaryNameserver pulumi.StringPtrInput `pulumi:"primaryNameserver"`
	// The interval for secondary nameservers should query for the SOA record
	Refresh pulumi.IntPtrInput `pulumi:"refresh"`
	// The number of seconds after which secondary servers should retry to request the serial number if the master does not respond
	Retry pulumi.IntPtrInput `pulumi:"retry"`
	// The Time To Live (TTL) in seconds for the SOA record
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (SoaPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaProperties)(nil)).Elem()
}

func (i SoaPropertiesArgs) ToSoaPropertiesOutput() SoaPropertiesOutput {
	return i.ToSoaPropertiesOutputWithContext(context.Background())
}

func (i SoaPropertiesArgs) ToSoaPropertiesOutputWithContext(ctx context.Context) SoaPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaPropertiesOutput)
}

func (i SoaPropertiesArgs) ToSoaPropertiesPtrOutput() SoaPropertiesPtrOutput {
	return i.ToSoaPropertiesPtrOutputWithContext(context.Background())
}

func (i SoaPropertiesArgs) ToSoaPropertiesPtrOutputWithContext(ctx context.Context) SoaPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaPropertiesOutput).ToSoaPropertiesPtrOutputWithContext(ctx)
}

// SoaPropertiesPtrInput is an input type that accepts SoaPropertiesArgs, SoaPropertiesPtr and SoaPropertiesPtrOutput values.
// You can construct a concrete instance of `SoaPropertiesPtrInput` via:
//
//	        SoaPropertiesArgs{...}
//
//	or:
//
//	        nil
type SoaPropertiesPtrInput interface {
	pulumi.Input

	ToSoaPropertiesPtrOutput() SoaPropertiesPtrOutput
	ToSoaPropertiesPtrOutputWithContext(context.Context) SoaPropertiesPtrOutput
}

type soaPropertiesPtrType SoaPropertiesArgs

func SoaPropertiesPtr(v *SoaPropertiesArgs) SoaPropertiesPtrInput {
	return (*soaPropertiesPtrType)(v)
}

func (*soaPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaProperties)(nil)).Elem()
}

func (i *soaPropertiesPtrType) ToSoaPropertiesPtrOutput() SoaPropertiesPtrOutput {
	return i.ToSoaPropertiesPtrOutputWithContext(context.Background())
}

func (i *soaPropertiesPtrType) ToSoaPropertiesPtrOutputWithContext(ctx context.Context) SoaPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaPropertiesPtrOutput)
}

// The SOA details for the domain
type SoaPropertiesOutput struct{ *pulumi.OutputState }

func (SoaPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaProperties)(nil)).Elem()
}

func (o SoaPropertiesOutput) ToSoaPropertiesOutput() SoaPropertiesOutput {
	return o
}

func (o SoaPropertiesOutput) ToSoaPropertiesOutputWithContext(ctx context.Context) SoaPropertiesOutput {
	return o
}

func (o SoaPropertiesOutput) ToSoaPropertiesPtrOutput() SoaPropertiesPtrOutput {
	return o.ToSoaPropertiesPtrOutputWithContext(context.Background())
}

func (o SoaPropertiesOutput) ToSoaPropertiesPtrOutputWithContext(ctx context.Context) SoaPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoaProperties) *SoaProperties {
		return &v
	}).(SoaPropertiesPtrOutput)
}

// Email of the administrator for the domain. @ should be replaced with .
func (o SoaPropertiesOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaProperties) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Number of seconds after which secondary nameservers should stop responding to queries, if the master does not respond
func (o SoaPropertiesOutput) Expire() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaProperties) *int { return v.Expire }).(pulumi.IntPtrOutput)
}

// How long NXDOMAIN responses should be cached for
func (o SoaPropertiesOutput) NegativeCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaProperties) *int { return v.NegativeCache }).(pulumi.IntPtrOutput)
}

// Primary master nameserver for the domain
func (o SoaPropertiesOutput) PrimaryNameserver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaProperties) *string { return v.PrimaryNameserver }).(pulumi.StringPtrOutput)
}

// The interval for secondary nameservers should query for the SOA record
func (o SoaPropertiesOutput) Refresh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaProperties) *int { return v.Refresh }).(pulumi.IntPtrOutput)
}

// The number of seconds after which secondary servers should retry to request the serial number if the master does not respond
func (o SoaPropertiesOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaProperties) *int { return v.Retry }).(pulumi.IntPtrOutput)
}

// The Time To Live (TTL) in seconds for the SOA record
func (o SoaPropertiesOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaProperties) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type SoaPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SoaPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaProperties)(nil)).Elem()
}

func (o SoaPropertiesPtrOutput) ToSoaPropertiesPtrOutput() SoaPropertiesPtrOutput {
	return o
}

func (o SoaPropertiesPtrOutput) ToSoaPropertiesPtrOutputWithContext(ctx context.Context) SoaPropertiesPtrOutput {
	return o
}

func (o SoaPropertiesPtrOutput) Elem() SoaPropertiesOutput {
	return o.ApplyT(func(v *SoaProperties) SoaProperties {
		if v != nil {
			return *v
		}
		var ret SoaProperties
		return ret
	}).(SoaPropertiesOutput)
}

// Email of the administrator for the domain. @ should be replaced with .
func (o SoaPropertiesPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaProperties) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Number of seconds after which secondary nameservers should stop responding to queries, if the master does not respond
func (o SoaPropertiesPtrOutput) Expire() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaProperties) *int {
		if v == nil {
			return nil
		}
		return v.Expire
	}).(pulumi.IntPtrOutput)
}

// How long NXDOMAIN responses should be cached for
func (o SoaPropertiesPtrOutput) NegativeCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaProperties) *int {
		if v == nil {
			return nil
		}
		return v.NegativeCache
	}).(pulumi.IntPtrOutput)
}

// Primary master nameserver for the domain
func (o SoaPropertiesPtrOutput) PrimaryNameserver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryNameserver
	}).(pulumi.StringPtrOutput)
}

// The interval for secondary nameservers should query for the SOA record
func (o SoaPropertiesPtrOutput) Refresh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaProperties) *int {
		if v == nil {
			return nil
		}
		return v.Refresh
	}).(pulumi.IntPtrOutput)
}

// The number of seconds after which secondary servers should retry to request the serial number if the master does not respond
func (o SoaPropertiesPtrOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaProperties) *int {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(pulumi.IntPtrOutput)
}

// The Time To Live (TTL) in seconds for the SOA record
func (o SoaPropertiesPtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaProperties) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

// A tag is used to group resources together
type Tag struct {
	// Unique ID for the tag
	Id *int `pulumi:"id"`
	// Links for tags
	Links *TagLinksProperties `pulumi:"links"`
	// A name for this tag
	Name *string `pulumi:"name"`
}

// A tag is used to group resources together
type TagOutput struct{ *pulumi.OutputState }

func (TagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tag)(nil)).Elem()
}

func (o TagOutput) ToTagOutput() TagOutput {
	return o
}

func (o TagOutput) ToTagOutputWithContext(ctx context.Context) TagOutput {
	return o
}

// Unique ID for the tag
func (o TagOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Tag) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links for tags
func (o TagOutput) Links() TagLinksPropertiesPtrOutput {
	return o.ApplyT(func(v Tag) *TagLinksProperties { return v.Links }).(TagLinksPropertiesPtrOutput)
}

// A name for this tag
func (o TagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Tag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type TagArrayOutput struct{ *pulumi.OutputState }

func (TagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tag)(nil)).Elem()
}

func (o TagArrayOutput) ToTagArrayOutput() TagArrayOutput {
	return o
}

func (o TagArrayOutput) ToTagArrayOutputWithContext(ctx context.Context) TagArrayOutput {
	return o
}

func (o TagArrayOutput) Index(i pulumi.IntInput) TagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Tag {
		return vs[0].([]Tag)[vs[1].(int)]
	}).(TagOutput)
}

// Links for tags
type TagLinksProperties struct {
	Self *string `pulumi:"self"`
}

// Links for tags
type TagLinksPropertiesOutput struct{ *pulumi.OutputState }

func (TagLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagLinksProperties)(nil)).Elem()
}

func (o TagLinksPropertiesOutput) ToTagLinksPropertiesOutput() TagLinksPropertiesOutput {
	return o
}

func (o TagLinksPropertiesOutput) ToTagLinksPropertiesOutputWithContext(ctx context.Context) TagLinksPropertiesOutput {
	return o
}

func (o TagLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type TagLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TagLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagLinksProperties)(nil)).Elem()
}

func (o TagLinksPropertiesPtrOutput) ToTagLinksPropertiesPtrOutput() TagLinksPropertiesPtrOutput {
	return o
}

func (o TagLinksPropertiesPtrOutput) ToTagLinksPropertiesPtrOutputWithContext(ctx context.Context) TagLinksPropertiesPtrOutput {
	return o
}

func (o TagLinksPropertiesPtrOutput) Elem() TagLinksPropertiesOutput {
	return o.ApplyT(func(v *TagLinksProperties) TagLinksProperties {
		if v != nil {
			return *v
		}
		var ret TagLinksProperties
		return ret
	}).(TagLinksPropertiesOutput)
}

func (o TagLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SoaPropertiesInput)(nil)).Elem(), SoaPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoaPropertiesPtrInput)(nil)).Elem(), SoaPropertiesArgs{})
	pulumi.RegisterOutputType(DataPropertiesOutput{})
	pulumi.RegisterOutputType(DataPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataPropertiesLinksPropertiesOutput{})
	pulumi.RegisterOutputType(DataPropertiesLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DomainTypeOutput{})
	pulumi.RegisterOutputType(DomainTypePtrOutput{})
	pulumi.RegisterOutputType(DomainTypeArrayOutput{})
	pulumi.RegisterOutputType(DomainLinksPropertiesOutput{})
	pulumi.RegisterOutputType(DomainLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DomainanalyticsOutput{})
	pulumi.RegisterOutputType(DomainanalyticsPtrOutput{})
	pulumi.RegisterOutputType(DomainanalyticsIntervalPropertiesOutput{})
	pulumi.RegisterOutputType(DomainanalyticsIntervalPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DomainanalyticsLinksPropertiesOutput{})
	pulumi.RegisterOutputType(DomainanalyticsLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DomainanalyticsQueriesItemPropertiesOutput{})
	pulumi.RegisterOutputType(DomainanalyticsQueriesItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(DomainanalyticsQueriesItemPropertiesStatsPropertiesOutput{})
	pulumi.RegisterOutputType(DomainanalyticsQueriesItemPropertiesStatsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DomainanalyticsQueriesItemPropertiesValuesItemPropertiesOutput{})
	pulumi.RegisterOutputType(DomainanalyticsQueriesItemPropertiesValuesItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(DomainanalyticsStatsPropertiesOutput{})
	pulumi.RegisterOutputType(DomainanalyticsStatsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DomainhistoryOutput{})
	pulumi.RegisterOutputType(DomainhistoryPtrOutput{})
	pulumi.RegisterOutputType(DomainrecordPropertiesLinksPropertiesOutput{})
	pulumi.RegisterOutputType(DomainrecordPropertiesLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DomainsnapshotOutput{})
	pulumi.RegisterOutputType(DomainsnapshotPtrOutput{})
	pulumi.RegisterOutputType(GetDomainAnalyticPropertiesOutput{})
	pulumi.RegisterOutputType(GetDomainHistoryVersionPropertiesOutput{})
	pulumi.RegisterOutputType(GetDomainNameserverPropertiesOutput{})
	pulumi.RegisterOutputType(GetDomainNameserverPropertiesDataPropertiesOutput{})
	pulumi.RegisterOutputType(GetDomainNameserverPropertiesDataPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GetDomainNameserverPropertiesDataPropertiesLinksPropertiesOutput{})
	pulumi.RegisterOutputType(GetDomainNameserverPropertiesDataPropertiesLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GetDomainPropertiesOutput{})
	pulumi.RegisterOutputType(GetDomainRecordTypeOutput{})
	pulumi.RegisterOutputType(GetDomainSnapshotPropertiesOutput{})
	pulumi.RegisterOutputType(ListDomainHistoryPropertiesOutput{})
	pulumi.RegisterOutputType(ListDomainHistoryPropertiesDataItemOutput{})
	pulumi.RegisterOutputType(ListDomainHistoryPropertiesDataItemArrayOutput{})
	pulumi.RegisterOutputType(ListDomainRecordsPropertiesOutput{})
	pulumi.RegisterOutputType(ListDomainRecordsPropertiesDataItemOutput{})
	pulumi.RegisterOutputType(ListDomainRecordsPropertiesDataItemArrayOutput{})
	pulumi.RegisterOutputType(ListDomainSnapshotsPropertiesOutput{})
	pulumi.RegisterOutputType(ListDomainSnapshotsPropertiesDataItemOutput{})
	pulumi.RegisterOutputType(ListDomainSnapshotsPropertiesDataItemArrayOutput{})
	pulumi.RegisterOutputType(ListDomainsPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataOutput{})
	pulumi.RegisterOutputType(ListMetadataPtrOutput{})
	pulumi.RegisterOutputType(ListMetadataLinksPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ListMetadataPaginationPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataPaginationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SimpleContactlistOutput{})
	pulumi.RegisterOutputType(SimpleContactlistArrayOutput{})
	pulumi.RegisterOutputType(SimpleContactlistLinksPropertiesOutput{})
	pulumi.RegisterOutputType(SimpleContactlistLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SimpleDomainOutput{})
	pulumi.RegisterOutputType(SimpleDomainPtrOutput{})
	pulumi.RegisterOutputType(SimpleDomainLinksPropertiesOutput{})
	pulumi.RegisterOutputType(SimpleDomainLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SimpleTemplateOutput{})
	pulumi.RegisterOutputType(SimpleTemplatePtrOutput{})
	pulumi.RegisterOutputType(SimpleTemplateLinksPropertiesOutput{})
	pulumi.RegisterOutputType(SimpleTemplateLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SimpleVanitynameserverOutput{})
	pulumi.RegisterOutputType(SimpleVanitynameserverPtrOutput{})
	pulumi.RegisterOutputType(SimpleVanitynameserverLinksPropertiesOutput{})
	pulumi.RegisterOutputType(SimpleVanitynameserverLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SoaOutput{})
	pulumi.RegisterOutputType(SoaPtrOutput{})
	pulumi.RegisterOutputType(SoaPropertiesOutput{})
	pulumi.RegisterOutputType(SoaPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TagOutput{})
	pulumi.RegisterOutputType(TagArrayOutput{})
	pulumi.RegisterOutputType(TagLinksPropertiesOutput{})
	pulumi.RegisterOutputType(TagLinksPropertiesPtrOutput{})
}
