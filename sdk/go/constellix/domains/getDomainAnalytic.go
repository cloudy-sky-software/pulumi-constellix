// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domains

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDomainAnalytic(ctx *pulumi.Context, args *GetDomainAnalyticArgs, opts ...pulumi.InvokeOption) (*GetDomainAnalyticResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainAnalyticResult
	err := ctx.Invoke("constellix:domains:getDomainAnalytic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetDomainAnalyticArgs struct {
	// The ID of the domain object
	Id string `pulumi:"id"`
}

type GetDomainAnalyticResult struct {
	// Analytics for a specific domain
	Data *Domainanalytics `pulumi:"data"`
}

func GetDomainAnalyticOutput(ctx *pulumi.Context, args GetDomainAnalyticOutputArgs, opts ...pulumi.InvokeOption) GetDomainAnalyticResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDomainAnalyticResultOutput, error) {
			args := v.(GetDomainAnalyticArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetDomainAnalyticResult
			secret, err := ctx.InvokePackageRaw("constellix:domains:getDomainAnalytic", args, &rv, "", opts...)
			if err != nil {
				return GetDomainAnalyticResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetDomainAnalyticResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetDomainAnalyticResultOutput), nil
			}
			return output, nil
		}).(GetDomainAnalyticResultOutput)
}

type GetDomainAnalyticOutputArgs struct {
	// The ID of the domain object
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDomainAnalyticOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAnalyticArgs)(nil)).Elem()
}

type GetDomainAnalyticResultOutput struct{ *pulumi.OutputState }

func (GetDomainAnalyticResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAnalyticResult)(nil)).Elem()
}

func (o GetDomainAnalyticResultOutput) ToGetDomainAnalyticResultOutput() GetDomainAnalyticResultOutput {
	return o
}

func (o GetDomainAnalyticResultOutput) ToGetDomainAnalyticResultOutputWithContext(ctx context.Context) GetDomainAnalyticResultOutput {
	return o
}

// Analytics for a specific domain
func (o GetDomainAnalyticResultOutput) Data() DomainanalyticsPtrOutput {
	return o.ApplyT(func(v GetDomainAnalyticResult) *Domainanalytics { return v.Data }).(DomainanalyticsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainAnalyticResultOutput{})
}
