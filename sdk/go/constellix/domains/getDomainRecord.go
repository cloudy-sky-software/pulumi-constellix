// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domains

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDomainRecord(ctx *pulumi.Context, args *LookupDomainRecordArgs, opts ...pulumi.InvokeOption) (*LookupDomainRecordResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDomainRecordResult
	err := ctx.Invoke("constellix:domains:getDomainRecord", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDomainRecordArgs struct {
	// The ID of the domain object
	DomainId string `pulumi:"domainId"`
	// The ID of the record
	Id string `pulumi:"id"`
}

type LookupDomainRecordResult struct {
	Domain *SimpleDomain `pulumi:"domain"`
	// Links for the domain record
	Links *DomainrecordPropertiesLinksProperties `pulumi:"links"`
}

func LookupDomainRecordOutput(ctx *pulumi.Context, args LookupDomainRecordOutputArgs, opts ...pulumi.InvokeOption) LookupDomainRecordResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainRecordResultOutput, error) {
			args := v.(LookupDomainRecordArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupDomainRecordResult
			secret, err := ctx.InvokePackageRaw("constellix:domains:getDomainRecord", args, &rv, "", opts...)
			if err != nil {
				return LookupDomainRecordResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupDomainRecordResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupDomainRecordResultOutput), nil
			}
			return output, nil
		}).(LookupDomainRecordResultOutput)
}

type LookupDomainRecordOutputArgs struct {
	// The ID of the domain object
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// The ID of the record
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDomainRecordOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainRecordArgs)(nil)).Elem()
}

type LookupDomainRecordResultOutput struct{ *pulumi.OutputState }

func (LookupDomainRecordResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainRecordResult)(nil)).Elem()
}

func (o LookupDomainRecordResultOutput) ToLookupDomainRecordResultOutput() LookupDomainRecordResultOutput {
	return o
}

func (o LookupDomainRecordResultOutput) ToLookupDomainRecordResultOutputWithContext(ctx context.Context) LookupDomainRecordResultOutput {
	return o
}

func (o LookupDomainRecordResultOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

// Links for the domain record
func (o LookupDomainRecordResultOutput) Links() DomainrecordPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) *DomainrecordPropertiesLinksProperties { return v.Links }).(DomainrecordPropertiesLinksPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainRecordResultOutput{})
}
