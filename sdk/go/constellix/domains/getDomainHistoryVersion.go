// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domains

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDomainHistoryVersion(ctx *pulumi.Context, args *GetDomainHistoryVersionArgs, opts ...pulumi.InvokeOption) (*GetDomainHistoryVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainHistoryVersionResult
	err := ctx.Invoke("constellix:domains:getDomainHistoryVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetDomainHistoryVersionArgs struct {
	// The ID of the domain object
	DomainId string `pulumi:"domainId"`
	// The version number of the domain
	Version string `pulumi:"version"`
}

type GetDomainHistoryVersionResult struct {
	Data *Domainhistory `pulumi:"data"`
}

func GetDomainHistoryVersionOutput(ctx *pulumi.Context, args GetDomainHistoryVersionOutputArgs, opts ...pulumi.InvokeOption) GetDomainHistoryVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDomainHistoryVersionResultOutput, error) {
			args := v.(GetDomainHistoryVersionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetDomainHistoryVersionResult
			secret, err := ctx.InvokePackageRaw("constellix:domains:getDomainHistoryVersion", args, &rv, "", opts...)
			if err != nil {
				return GetDomainHistoryVersionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetDomainHistoryVersionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetDomainHistoryVersionResultOutput), nil
			}
			return output, nil
		}).(GetDomainHistoryVersionResultOutput)
}

type GetDomainHistoryVersionOutputArgs struct {
	// The ID of the domain object
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// The version number of the domain
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDomainHistoryVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainHistoryVersionArgs)(nil)).Elem()
}

type GetDomainHistoryVersionResultOutput struct{ *pulumi.OutputState }

func (GetDomainHistoryVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainHistoryVersionResult)(nil)).Elem()
}

func (o GetDomainHistoryVersionResultOutput) ToGetDomainHistoryVersionResultOutput() GetDomainHistoryVersionResultOutput {
	return o
}

func (o GetDomainHistoryVersionResultOutput) ToGetDomainHistoryVersionResultOutputWithContext(ctx context.Context) GetDomainHistoryVersionResultOutput {
	return o
}

func (o GetDomainHistoryVersionResultOutput) Data() DomainhistoryPtrOutput {
	return o.ApplyT(func(v GetDomainHistoryVersionResult) *Domainhistory { return v.Data }).(DomainhistoryPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainHistoryVersionResultOutput{})
}
