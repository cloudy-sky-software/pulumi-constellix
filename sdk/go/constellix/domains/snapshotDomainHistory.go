// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domains

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SnapshotDomainHistory struct {
	pulumi.CustomResourceState

	Data DataPropertiesPtrOutput `pulumi:"data"`
}

// NewSnapshotDomainHistory registers a new resource with the given unique name, arguments, and options.
func NewSnapshotDomainHistory(ctx *pulumi.Context,
	name string, args *SnapshotDomainHistoryArgs, opts ...pulumi.ResourceOption) (*SnapshotDomainHistory, error) {
	if args == nil {
		args = &SnapshotDomainHistoryArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SnapshotDomainHistory
	err := ctx.RegisterResource("constellix:domains:SnapshotDomainHistory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnapshotDomainHistory gets an existing SnapshotDomainHistory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshotDomainHistory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnapshotDomainHistoryState, opts ...pulumi.ResourceOption) (*SnapshotDomainHistory, error) {
	var resource SnapshotDomainHistory
	err := ctx.ReadResource("constellix:domains:SnapshotDomainHistory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SnapshotDomainHistory resources.
type snapshotDomainHistoryState struct {
}

type SnapshotDomainHistoryState struct {
}

func (SnapshotDomainHistoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotDomainHistoryState)(nil)).Elem()
}

type snapshotDomainHistoryArgs struct {
	// The ID of the domain object
	DomainId *string `pulumi:"domainId"`
	// The version number of the domain
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a SnapshotDomainHistory resource.
type SnapshotDomainHistoryArgs struct {
	// The ID of the domain object
	DomainId pulumi.StringPtrInput
	// The version number of the domain
	Version pulumi.StringPtrInput
}

func (SnapshotDomainHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotDomainHistoryArgs)(nil)).Elem()
}

type SnapshotDomainHistoryInput interface {
	pulumi.Input

	ToSnapshotDomainHistoryOutput() SnapshotDomainHistoryOutput
	ToSnapshotDomainHistoryOutputWithContext(ctx context.Context) SnapshotDomainHistoryOutput
}

func (*SnapshotDomainHistory) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotDomainHistory)(nil)).Elem()
}

func (i *SnapshotDomainHistory) ToSnapshotDomainHistoryOutput() SnapshotDomainHistoryOutput {
	return i.ToSnapshotDomainHistoryOutputWithContext(context.Background())
}

func (i *SnapshotDomainHistory) ToSnapshotDomainHistoryOutputWithContext(ctx context.Context) SnapshotDomainHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotDomainHistoryOutput)
}

type SnapshotDomainHistoryOutput struct{ *pulumi.OutputState }

func (SnapshotDomainHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotDomainHistory)(nil)).Elem()
}

func (o SnapshotDomainHistoryOutput) ToSnapshotDomainHistoryOutput() SnapshotDomainHistoryOutput {
	return o
}

func (o SnapshotDomainHistoryOutput) ToSnapshotDomainHistoryOutputWithContext(ctx context.Context) SnapshotDomainHistoryOutput {
	return o
}

func (o SnapshotDomainHistoryOutput) Data() DataPropertiesPtrOutput {
	return o.ApplyT(func(v *SnapshotDomainHistory) DataPropertiesPtrOutput { return v.Data }).(DataPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotDomainHistoryInput)(nil)).Elem(), &SnapshotDomainHistory{})
	pulumi.RegisterOutputType(SnapshotDomainHistoryOutput{})
}
