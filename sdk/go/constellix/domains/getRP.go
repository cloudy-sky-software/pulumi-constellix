// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domains

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRP(ctx *pulumi.Context, args *LookupRPArgs, opts ...pulumi.InvokeOption) (*LookupRPResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRPResult
	err := ctx.Invoke("constellix:domains:getRP", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRPArgs struct {
	// The ID of the domain object
	DomainId string `pulumi:"domainId"`
	// The ID of the record
	Id string `pulumi:"id"`
}

type LookupRPResult struct {
	// A simple version of a contact list when inclued with other resources
	Contacts *SimpleContactlist `pulumi:"contacts"`
	Domain   *SimpleDomain      `pulumi:"domain"`
	// Whether the record is enabled or not. A disabled record will return an NXDOMAIN response.
	Enabled *bool `pulumi:"enabled"`
	// Disable the record if all hosts fail. If all hosts fail, another matching IP Filter, nearest Proximity or World (Default) record will be used instead.
	GeoFailover *bool `pulumi:"geoFailover"`
	// Geo Proximity Location
	Geoproximity *SimpleGeoproximity `pulumi:"geoproximity"`
	// A unique ID for this domain record
	Id       *int            `pulumi:"id"`
	Ipfilter *SimpleIpfilter `pulumi:"ipfilter"`
	// If the requesting IP matches the IP filter, don't return a response
	IpfilterDrop *bool `pulumi:"ipfilterDrop"`
	// The previous values of the record in the different modes
	LastValues *GetRPPropertiesLastValuesProperties `pulumi:"lastValues"`
	// Links for the domain record
	Links *TemplaterecordLinksProperties `pulumi:"links"`
	// How the record should work
	Mode *GetRPPropertiesMode `pulumi:"mode"`
	// The name of the record
	Name *string `pulumi:"name"`
	// A note about the record. Max 512 characters.
	Notes *string `pulumi:"notes"`
	// The region for this record
	Region *RecordRegion `pulumi:"region"`
	// Only used on POST or PATCH requests for ANAME records, used to specify whether the hostname should be looked up immediately. Will be null otherwise.
	SkipLookup *bool           `pulumi:"skipLookup"`
	Template   *SimpleTemplate `pulumi:"template"`
	// The time to live in seconds for this record. must be between 0 and 2147483647
	Ttl *int `pulumi:"ttl"`
	// The type of record
	Type *GetRPPropertiesType `pulumi:"type"`
	// Standard record mode
	Value []ValueRpValueItemProperties `pulumi:"value"`
}

func LookupRPOutput(ctx *pulumi.Context, args LookupRPOutputArgs, opts ...pulumi.InvokeOption) LookupRPResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRPResultOutput, error) {
			args := v.(LookupRPArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupRPResult
			secret, err := ctx.InvokePackageRaw("constellix:domains:getRP", args, &rv, "", opts...)
			if err != nil {
				return LookupRPResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupRPResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupRPResultOutput), nil
			}
			return output, nil
		}).(LookupRPResultOutput)
}

type LookupRPOutputArgs struct {
	// The ID of the domain object
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// The ID of the record
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupRPOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRPArgs)(nil)).Elem()
}

type LookupRPResultOutput struct{ *pulumi.OutputState }

func (LookupRPResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRPResult)(nil)).Elem()
}

func (o LookupRPResultOutput) ToLookupRPResultOutput() LookupRPResultOutput {
	return o
}

func (o LookupRPResultOutput) ToLookupRPResultOutputWithContext(ctx context.Context) LookupRPResultOutput {
	return o
}

// A simple version of a contact list when inclued with other resources
func (o LookupRPResultOutput) Contacts() SimpleContactlistPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *SimpleContactlist { return v.Contacts }).(SimpleContactlistPtrOutput)
}

func (o LookupRPResultOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

// Whether the record is enabled or not. A disabled record will return an NXDOMAIN response.
func (o LookupRPResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Disable the record if all hosts fail. If all hosts fail, another matching IP Filter, nearest Proximity or World (Default) record will be used instead.
func (o LookupRPResultOutput) GeoFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *bool { return v.GeoFailover }).(pulumi.BoolPtrOutput)
}

// Geo Proximity Location
func (o LookupRPResultOutput) Geoproximity() SimpleGeoproximityPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *SimpleGeoproximity { return v.Geoproximity }).(SimpleGeoproximityPtrOutput)
}

// A unique ID for this domain record
func (o LookupRPResultOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LookupRPResultOutput) Ipfilter() SimpleIpfilterPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *SimpleIpfilter { return v.Ipfilter }).(SimpleIpfilterPtrOutput)
}

// If the requesting IP matches the IP filter, don't return a response
func (o LookupRPResultOutput) IpfilterDrop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *bool { return v.IpfilterDrop }).(pulumi.BoolPtrOutput)
}

// The previous values of the record in the different modes
func (o LookupRPResultOutput) LastValues() GetRPPropertiesLastValuesPropertiesPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *GetRPPropertiesLastValuesProperties { return v.LastValues }).(GetRPPropertiesLastValuesPropertiesPtrOutput)
}

// Links for the domain record
func (o LookupRPResultOutput) Links() TemplaterecordLinksPropertiesPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *TemplaterecordLinksProperties { return v.Links }).(TemplaterecordLinksPropertiesPtrOutput)
}

// How the record should work
func (o LookupRPResultOutput) Mode() GetRPPropertiesModePtrOutput {
	return o.ApplyT(func(v LookupRPResult) *GetRPPropertiesMode { return v.Mode }).(GetRPPropertiesModePtrOutput)
}

// The name of the record
func (o LookupRPResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A note about the record. Max 512 characters.
func (o LookupRPResultOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The region for this record
func (o LookupRPResultOutput) Region() RecordRegionPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *RecordRegion { return v.Region }).(RecordRegionPtrOutput)
}

// Only used on POST or PATCH requests for ANAME records, used to specify whether the hostname should be looked up immediately. Will be null otherwise.
func (o LookupRPResultOutput) SkipLookup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *bool { return v.SkipLookup }).(pulumi.BoolPtrOutput)
}

func (o LookupRPResultOutput) Template() SimpleTemplatePtrOutput {
	return o.ApplyT(func(v LookupRPResult) *SimpleTemplate { return v.Template }).(SimpleTemplatePtrOutput)
}

// The time to live in seconds for this record. must be between 0 and 2147483647
func (o LookupRPResultOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRPResult) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

// The type of record
func (o LookupRPResultOutput) Type() GetRPPropertiesTypePtrOutput {
	return o.ApplyT(func(v LookupRPResult) *GetRPPropertiesType { return v.Type }).(GetRPPropertiesTypePtrOutput)
}

// Standard record mode
func (o LookupRPResultOutput) Value() ValueRpValueItemPropertiesArrayOutput {
	return o.ApplyT(func(v LookupRPResult) []ValueRpValueItemProperties { return v.Value }).(ValueRpValueItemPropertiesArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRPResultOutput{})
}
