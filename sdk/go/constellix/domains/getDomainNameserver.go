// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domains

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDomainNameserver(ctx *pulumi.Context, args *GetDomainNameserverArgs, opts ...pulumi.InvokeOption) (*GetDomainNameserverResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainNameserverResult
	err := ctx.Invoke("constellix:domains:getDomainNameserver", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetDomainNameserverArgs struct {
	// The ID of the domain object
	Id string `pulumi:"id"`
}

type GetDomainNameserverResult struct {
	Data *GetDomainNameserverPropertiesDataProperties `pulumi:"data"`
}

func GetDomainNameserverOutput(ctx *pulumi.Context, args GetDomainNameserverOutputArgs, opts ...pulumi.InvokeOption) GetDomainNameserverResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDomainNameserverResultOutput, error) {
			args := v.(GetDomainNameserverArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetDomainNameserverResult
			secret, err := ctx.InvokePackageRaw("constellix:domains:getDomainNameserver", args, &rv, "", opts...)
			if err != nil {
				return GetDomainNameserverResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetDomainNameserverResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetDomainNameserverResultOutput), nil
			}
			return output, nil
		}).(GetDomainNameserverResultOutput)
}

type GetDomainNameserverOutputArgs struct {
	// The ID of the domain object
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDomainNameserverOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameserverArgs)(nil)).Elem()
}

type GetDomainNameserverResultOutput struct{ *pulumi.OutputState }

func (GetDomainNameserverResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameserverResult)(nil)).Elem()
}

func (o GetDomainNameserverResultOutput) ToGetDomainNameserverResultOutput() GetDomainNameserverResultOutput {
	return o
}

func (o GetDomainNameserverResultOutput) ToGetDomainNameserverResultOutputWithContext(ctx context.Context) GetDomainNameserverResultOutput {
	return o
}

func (o GetDomainNameserverResultOutput) Data() GetDomainNameserverPropertiesDataPropertiesPtrOutput {
	return o.ApplyT(func(v GetDomainNameserverResult) *GetDomainNameserverPropertiesDataProperties { return v.Data }).(GetDomainNameserverPropertiesDataPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainNameserverResultOutput{})
}
