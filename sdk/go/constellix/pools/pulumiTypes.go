// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pools

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DataProperties struct {
	// The ID of the object
	Id    *int                           `pulumi:"id"`
	Links *DataPropertiesLinksProperties `pulumi:"links"`
}

type DataPropertiesOutput struct{ *pulumi.OutputState }

func (DataPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataProperties)(nil)).Elem()
}

func (o DataPropertiesOutput) ToDataPropertiesOutput() DataPropertiesOutput {
	return o
}

func (o DataPropertiesOutput) ToDataPropertiesOutputWithContext(ctx context.Context) DataPropertiesOutput {
	return o
}

// The ID of the object
func (o DataPropertiesOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataProperties) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o DataPropertiesOutput) Links() DataPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v DataProperties) *DataPropertiesLinksProperties { return v.Links }).(DataPropertiesLinksPropertiesPtrOutput)
}

type DataPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataProperties)(nil)).Elem()
}

func (o DataPropertiesPtrOutput) ToDataPropertiesPtrOutput() DataPropertiesPtrOutput {
	return o
}

func (o DataPropertiesPtrOutput) ToDataPropertiesPtrOutputWithContext(ctx context.Context) DataPropertiesPtrOutput {
	return o
}

func (o DataPropertiesPtrOutput) Elem() DataPropertiesOutput {
	return o.ApplyT(func(v *DataProperties) DataProperties {
		if v != nil {
			return *v
		}
		var ret DataProperties
		return ret
	}).(DataPropertiesOutput)
}

// The ID of the object
func (o DataPropertiesPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataProperties) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

func (o DataPropertiesPtrOutput) Links() DataPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *DataProperties) *DataPropertiesLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(DataPropertiesLinksPropertiesPtrOutput)
}

type DataPropertiesLinksProperties struct {
	// The URL for the new object
	Self *string `pulumi:"self"`
}

type DataPropertiesLinksPropertiesOutput struct{ *pulumi.OutputState }

func (DataPropertiesLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPropertiesLinksProperties)(nil)).Elem()
}

func (o DataPropertiesLinksPropertiesOutput) ToDataPropertiesLinksPropertiesOutput() DataPropertiesLinksPropertiesOutput {
	return o
}

func (o DataPropertiesLinksPropertiesOutput) ToDataPropertiesLinksPropertiesOutputWithContext(ctx context.Context) DataPropertiesLinksPropertiesOutput {
	return o
}

// The URL for the new object
func (o DataPropertiesLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPropertiesLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type DataPropertiesLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataPropertiesLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPropertiesLinksProperties)(nil)).Elem()
}

func (o DataPropertiesLinksPropertiesPtrOutput) ToDataPropertiesLinksPropertiesPtrOutput() DataPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o DataPropertiesLinksPropertiesPtrOutput) ToDataPropertiesLinksPropertiesPtrOutputWithContext(ctx context.Context) DataPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o DataPropertiesLinksPropertiesPtrOutput) Elem() DataPropertiesLinksPropertiesOutput {
	return o.ApplyT(func(v *DataPropertiesLinksProperties) DataPropertiesLinksProperties {
		if v != nil {
			return *v
		}
		var ret DataPropertiesLinksProperties
		return ret
	}).(DataPropertiesLinksPropertiesOutput)
}

// The URL for the new object
func (o DataPropertiesLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPropertiesLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type GetPoolProperties struct {
	Data *PoolType `pulumi:"data"`
}

type GetPoolPropertiesOutput struct{ *pulumi.OutputState }

func (GetPoolPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolProperties)(nil)).Elem()
}

func (o GetPoolPropertiesOutput) ToGetPoolPropertiesOutput() GetPoolPropertiesOutput {
	return o
}

func (o GetPoolPropertiesOutput) ToGetPoolPropertiesOutputWithContext(ctx context.Context) GetPoolPropertiesOutput {
	return o
}

func (o GetPoolPropertiesOutput) Data() PoolTypePtrOutput {
	return o.ApplyT(func(v GetPoolProperties) *PoolType { return v.Data }).(PoolTypePtrOutput)
}

// Metadata for list responses
type ListMetadata struct {
	// Relevant links for this list
	Links *ListMetadataLinksProperties `pulumi:"links"`
	// Pagination details
	Pagination *ListMetadataPaginationProperties `pulumi:"pagination"`
}

// Metadata for list responses
type ListMetadataOutput struct{ *pulumi.OutputState }

func (ListMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadata)(nil)).Elem()
}

func (o ListMetadataOutput) ToListMetadataOutput() ListMetadataOutput {
	return o
}

func (o ListMetadataOutput) ToListMetadataOutputWithContext(ctx context.Context) ListMetadataOutput {
	return o
}

// Relevant links for this list
func (o ListMetadataOutput) Links() ListMetadataLinksPropertiesPtrOutput {
	return o.ApplyT(func(v ListMetadata) *ListMetadataLinksProperties { return v.Links }).(ListMetadataLinksPropertiesPtrOutput)
}

// Pagination details
func (o ListMetadataOutput) Pagination() ListMetadataPaginationPropertiesPtrOutput {
	return o.ApplyT(func(v ListMetadata) *ListMetadataPaginationProperties { return v.Pagination }).(ListMetadataPaginationPropertiesPtrOutput)
}

type ListMetadataPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadata)(nil)).Elem()
}

func (o ListMetadataPtrOutput) ToListMetadataPtrOutput() ListMetadataPtrOutput {
	return o
}

func (o ListMetadataPtrOutput) ToListMetadataPtrOutputWithContext(ctx context.Context) ListMetadataPtrOutput {
	return o
}

func (o ListMetadataPtrOutput) Elem() ListMetadataOutput {
	return o.ApplyT(func(v *ListMetadata) ListMetadata {
		if v != nil {
			return *v
		}
		var ret ListMetadata
		return ret
	}).(ListMetadataOutput)
}

// Relevant links for this list
func (o ListMetadataPtrOutput) Links() ListMetadataLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *ListMetadata) *ListMetadataLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(ListMetadataLinksPropertiesPtrOutput)
}

// Pagination details
func (o ListMetadataPtrOutput) Pagination() ListMetadataPaginationPropertiesPtrOutput {
	return o.ApplyT(func(v *ListMetadata) *ListMetadataPaginationProperties {
		if v == nil {
			return nil
		}
		return v.Pagination
	}).(ListMetadataPaginationPropertiesPtrOutput)
}

// Relevant links for this list
type ListMetadataLinksProperties struct {
	First    *string `pulumi:"first"`
	Last     *string `pulumi:"last"`
	Next     *string `pulumi:"next"`
	Previous *string `pulumi:"previous"`
	Self     *string `pulumi:"self"`
}

// Relevant links for this list
type ListMetadataLinksPropertiesOutput struct{ *pulumi.OutputState }

func (ListMetadataLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadataLinksProperties)(nil)).Elem()
}

func (o ListMetadataLinksPropertiesOutput) ToListMetadataLinksPropertiesOutput() ListMetadataLinksPropertiesOutput {
	return o
}

func (o ListMetadataLinksPropertiesOutput) ToListMetadataLinksPropertiesOutputWithContext(ctx context.Context) ListMetadataLinksPropertiesOutput {
	return o
}

func (o ListMetadataLinksPropertiesOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.First }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Last }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Previous() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Previous }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type ListMetadataLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadataLinksProperties)(nil)).Elem()
}

func (o ListMetadataLinksPropertiesPtrOutput) ToListMetadataLinksPropertiesPtrOutput() ListMetadataLinksPropertiesPtrOutput {
	return o
}

func (o ListMetadataLinksPropertiesPtrOutput) ToListMetadataLinksPropertiesPtrOutputWithContext(ctx context.Context) ListMetadataLinksPropertiesPtrOutput {
	return o
}

func (o ListMetadataLinksPropertiesPtrOutput) Elem() ListMetadataLinksPropertiesOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) ListMetadataLinksProperties {
		if v != nil {
			return *v
		}
		var ret ListMetadataLinksProperties
		return ret
	}).(ListMetadataLinksPropertiesOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.First
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Last
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Previous() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Previous
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// Pagination details
type ListMetadataPaginationProperties struct {
	// The number of items in this page of the response
	Count *int `pulumi:"count"`
	// The current results page
	CurrentPage *int `pulumi:"currentPage"`
	// The number of items per page
	PerPage *int `pulumi:"perPage"`
	// The total number of objects matching the query
	Total *int `pulumi:"total"`
	// The total number of pages
	TotalPages *int `pulumi:"totalPages"`
}

// Pagination details
type ListMetadataPaginationPropertiesOutput struct{ *pulumi.OutputState }

func (ListMetadataPaginationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadataPaginationProperties)(nil)).Elem()
}

func (o ListMetadataPaginationPropertiesOutput) ToListMetadataPaginationPropertiesOutput() ListMetadataPaginationPropertiesOutput {
	return o
}

func (o ListMetadataPaginationPropertiesOutput) ToListMetadataPaginationPropertiesOutputWithContext(ctx context.Context) ListMetadataPaginationPropertiesOutput {
	return o
}

// The number of items in this page of the response
func (o ListMetadataPaginationPropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The current results page
func (o ListMetadataPaginationPropertiesOutput) CurrentPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.CurrentPage }).(pulumi.IntPtrOutput)
}

// The number of items per page
func (o ListMetadataPaginationPropertiesOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// The total number of objects matching the query
func (o ListMetadataPaginationPropertiesOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.Total }).(pulumi.IntPtrOutput)
}

// The total number of pages
func (o ListMetadataPaginationPropertiesOutput) TotalPages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.TotalPages }).(pulumi.IntPtrOutput)
}

type ListMetadataPaginationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataPaginationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadataPaginationProperties)(nil)).Elem()
}

func (o ListMetadataPaginationPropertiesPtrOutput) ToListMetadataPaginationPropertiesPtrOutput() ListMetadataPaginationPropertiesPtrOutput {
	return o
}

func (o ListMetadataPaginationPropertiesPtrOutput) ToListMetadataPaginationPropertiesPtrOutputWithContext(ctx context.Context) ListMetadataPaginationPropertiesPtrOutput {
	return o
}

func (o ListMetadataPaginationPropertiesPtrOutput) Elem() ListMetadataPaginationPropertiesOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) ListMetadataPaginationProperties {
		if v != nil {
			return *v
		}
		var ret ListMetadataPaginationProperties
		return ret
	}).(ListMetadataPaginationPropertiesOutput)
}

// The number of items in this page of the response
func (o ListMetadataPaginationPropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The current results page
func (o ListMetadataPaginationPropertiesPtrOutput) CurrentPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.CurrentPage
	}).(pulumi.IntPtrOutput)
}

// The number of items per page
func (o ListMetadataPaginationPropertiesPtrOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.PerPage
	}).(pulumi.IntPtrOutput)
}

// The total number of objects matching the query
func (o ListMetadataPaginationPropertiesPtrOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.Total
	}).(pulumi.IntPtrOutput)
}

// The total number of pages
func (o ListMetadataPaginationPropertiesPtrOutput) TotalPages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.TotalPages
	}).(pulumi.IntPtrOutput)
}

type ListPoolsProperties struct {
	// The pools for this page
	Data []Poolindex `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

type ListPoolsPropertiesOutput struct{ *pulumi.OutputState }

func (ListPoolsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListPoolsProperties)(nil)).Elem()
}

func (o ListPoolsPropertiesOutput) ToListPoolsPropertiesOutput() ListPoolsPropertiesOutput {
	return o
}

func (o ListPoolsPropertiesOutput) ToListPoolsPropertiesOutputWithContext(ctx context.Context) ListPoolsPropertiesOutput {
	return o
}

// The pools for this page
func (o ListPoolsPropertiesOutput) Data() PoolindexArrayOutput {
	return o.ApplyT(func(v ListPoolsProperties) []Poolindex { return v.Data }).(PoolindexArrayOutput)
}

// Metadata for list responses
func (o ListPoolsPropertiesOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListPoolsProperties) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

type PoolType struct {
	// Contactlists that will be notified when the pool is updated
	Contacts  []SimpleContactlist `pulumi:"contacts"`
	CreatedAt *string             `pulumi:"createdAt"`
	// Domains that are using this pool
	Domains []SimpleDomain `pulumi:"domains"`
	// Whether the pool is enabled or not
	Enabled *bool `pulumi:"enabled"`
	// Whether the pool is considered failed or not
	Failed *bool    `pulumi:"failed"`
	Id     *int     `pulumi:"id"`
	Ito    *Poolito `pulumi:"ito"`
	// Links for the pool
	Links *PoolLinksProperties `pulumi:"links"`
	// The number of records that must be available for this pool to be used for failover. Between 0 and 64.
	MinimumFailover *int    `pulumi:"minimumFailover"`
	Name            *string `pulumi:"name"`
	// The minimum number of entries from the pool to return when queried. Between 0 and 64.
	Return *int `pulumi:"return"`
	// Templates that are using this pool
	Templates []SimpleTemplate `pulumi:"templates"`
	// The type of pool
	Type      *PoolTypeEnum `pulumi:"type"`
	UpdatedAt *string       `pulumi:"updatedAt"`
	// The values for this pool
	Values []PoolValuesItemProperties `pulumi:"values"`
}

type PoolTypeOutput struct{ *pulumi.OutputState }

func (PoolTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolType)(nil)).Elem()
}

func (o PoolTypeOutput) ToPoolTypeOutput() PoolTypeOutput {
	return o
}

func (o PoolTypeOutput) ToPoolTypeOutputWithContext(ctx context.Context) PoolTypeOutput {
	return o
}

// Contactlists that will be notified when the pool is updated
func (o PoolTypeOutput) Contacts() SimpleContactlistArrayOutput {
	return o.ApplyT(func(v PoolType) []SimpleContactlist { return v.Contacts }).(SimpleContactlistArrayOutput)
}

func (o PoolTypeOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolType) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Domains that are using this pool
func (o PoolTypeOutput) Domains() SimpleDomainArrayOutput {
	return o.ApplyT(func(v PoolType) []SimpleDomain { return v.Domains }).(SimpleDomainArrayOutput)
}

// Whether the pool is enabled or not
func (o PoolTypeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolType) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Whether the pool is considered failed or not
func (o PoolTypeOutput) Failed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolType) *bool { return v.Failed }).(pulumi.BoolPtrOutput)
}

func (o PoolTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o PoolTypeOutput) Ito() PoolitoPtrOutput {
	return o.ApplyT(func(v PoolType) *Poolito { return v.Ito }).(PoolitoPtrOutput)
}

// Links for the pool
func (o PoolTypeOutput) Links() PoolLinksPropertiesPtrOutput {
	return o.ApplyT(func(v PoolType) *PoolLinksProperties { return v.Links }).(PoolLinksPropertiesPtrOutput)
}

// The number of records that must be available for this pool to be used for failover. Between 0 and 64.
func (o PoolTypeOutput) MinimumFailover() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolType) *int { return v.MinimumFailover }).(pulumi.IntPtrOutput)
}

func (o PoolTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The minimum number of entries from the pool to return when queried. Between 0 and 64.
func (o PoolTypeOutput) Return() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolType) *int { return v.Return }).(pulumi.IntPtrOutput)
}

// Templates that are using this pool
func (o PoolTypeOutput) Templates() SimpleTemplateArrayOutput {
	return o.ApplyT(func(v PoolType) []SimpleTemplate { return v.Templates }).(SimpleTemplateArrayOutput)
}

// The type of pool
func (o PoolTypeOutput) Type() PoolTypeEnumPtrOutput {
	return o.ApplyT(func(v PoolType) *PoolTypeEnum { return v.Type }).(PoolTypeEnumPtrOutput)
}

func (o PoolTypeOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolType) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The values for this pool
func (o PoolTypeOutput) Values() PoolValuesItemPropertiesArrayOutput {
	return o.ApplyT(func(v PoolType) []PoolValuesItemProperties { return v.Values }).(PoolValuesItemPropertiesArrayOutput)
}

type PoolTypePtrOutput struct{ *pulumi.OutputState }

func (PoolTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolType)(nil)).Elem()
}

func (o PoolTypePtrOutput) ToPoolTypePtrOutput() PoolTypePtrOutput {
	return o
}

func (o PoolTypePtrOutput) ToPoolTypePtrOutputWithContext(ctx context.Context) PoolTypePtrOutput {
	return o
}

func (o PoolTypePtrOutput) Elem() PoolTypeOutput {
	return o.ApplyT(func(v *PoolType) PoolType {
		if v != nil {
			return *v
		}
		var ret PoolType
		return ret
	}).(PoolTypeOutput)
}

// Contactlists that will be notified when the pool is updated
func (o PoolTypePtrOutput) Contacts() SimpleContactlistArrayOutput {
	return o.ApplyT(func(v *PoolType) []SimpleContactlist {
		if v == nil {
			return nil
		}
		return v.Contacts
	}).(SimpleContactlistArrayOutput)
}

func (o PoolTypePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolType) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Domains that are using this pool
func (o PoolTypePtrOutput) Domains() SimpleDomainArrayOutput {
	return o.ApplyT(func(v *PoolType) []SimpleDomain {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(SimpleDomainArrayOutput)
}

// Whether the pool is enabled or not
func (o PoolTypePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolType) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Whether the pool is considered failed or not
func (o PoolTypePtrOutput) Failed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolType) *bool {
		if v == nil {
			return nil
		}
		return v.Failed
	}).(pulumi.BoolPtrOutput)
}

func (o PoolTypePtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolType) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

func (o PoolTypePtrOutput) Ito() PoolitoPtrOutput {
	return o.ApplyT(func(v *PoolType) *Poolito {
		if v == nil {
			return nil
		}
		return v.Ito
	}).(PoolitoPtrOutput)
}

// Links for the pool
func (o PoolTypePtrOutput) Links() PoolLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *PoolType) *PoolLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(PoolLinksPropertiesPtrOutput)
}

// The number of records that must be available for this pool to be used for failover. Between 0 and 64.
func (o PoolTypePtrOutput) MinimumFailover() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolType) *int {
		if v == nil {
			return nil
		}
		return v.MinimumFailover
	}).(pulumi.IntPtrOutput)
}

func (o PoolTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The minimum number of entries from the pool to return when queried. Between 0 and 64.
func (o PoolTypePtrOutput) Return() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolType) *int {
		if v == nil {
			return nil
		}
		return v.Return
	}).(pulumi.IntPtrOutput)
}

// Templates that are using this pool
func (o PoolTypePtrOutput) Templates() SimpleTemplateArrayOutput {
	return o.ApplyT(func(v *PoolType) []SimpleTemplate {
		if v == nil {
			return nil
		}
		return v.Templates
	}).(SimpleTemplateArrayOutput)
}

// The type of pool
func (o PoolTypePtrOutput) Type() PoolTypeEnumPtrOutput {
	return o.ApplyT(func(v *PoolType) *PoolTypeEnum {
		if v == nil {
			return nil
		}
		return v.Type
	}).(PoolTypeEnumPtrOutput)
}

func (o PoolTypePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolType) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// The values for this pool
func (o PoolTypePtrOutput) Values() PoolValuesItemPropertiesArrayOutput {
	return o.ApplyT(func(v *PoolType) []PoolValuesItemProperties {
		if v == nil {
			return nil
		}
		return v.Values
	}).(PoolValuesItemPropertiesArrayOutput)
}

// Links for the pool
type PoolLinksProperties struct {
	Self *string `pulumi:"self"`
}

// Links for the pool
type PoolLinksPropertiesOutput struct{ *pulumi.OutputState }

func (PoolLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolLinksProperties)(nil)).Elem()
}

func (o PoolLinksPropertiesOutput) ToPoolLinksPropertiesOutput() PoolLinksPropertiesOutput {
	return o
}

func (o PoolLinksPropertiesOutput) ToPoolLinksPropertiesOutputWithContext(ctx context.Context) PoolLinksPropertiesOutput {
	return o
}

func (o PoolLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type PoolLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PoolLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolLinksProperties)(nil)).Elem()
}

func (o PoolLinksPropertiesPtrOutput) ToPoolLinksPropertiesPtrOutput() PoolLinksPropertiesPtrOutput {
	return o
}

func (o PoolLinksPropertiesPtrOutput) ToPoolLinksPropertiesPtrOutputWithContext(ctx context.Context) PoolLinksPropertiesPtrOutput {
	return o
}

func (o PoolLinksPropertiesPtrOutput) Elem() PoolLinksPropertiesOutput {
	return o.ApplyT(func(v *PoolLinksProperties) PoolLinksProperties {
		if v != nil {
			return *v
		}
		var ret PoolLinksProperties
		return ret
	}).(PoolLinksPropertiesOutput)
}

func (o PoolLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// A possible value for the pool. Depends on the type of pool.
type PoolValuesItemProperties struct {
	// Is the value active or not?
	Activated *bool `pulumi:"activated"`
	// Is this value enabled or not?
	Enabled *bool `pulumi:"enabled"`
	// Is this value considered failed by monitoring
	Failed *bool `pulumi:"failed"`
	// A handicap for this value
	Handicap *float64 `pulumi:"handicap"`
	// The failover/check policy for this value
	Policy *PoolValuesItemPropertiesPolicy `pulumi:"policy"`
	// The ID of the check to use from Sonar
	SonarCheckId *int `pulumi:"sonarCheckId"`
	// The response time in the last check
	Speed *float64    `pulumi:"speed"`
	Value interface{} `pulumi:"value"`
	// A weight for the value. Must be between 1 and 1000000
	Weight *int `pulumi:"weight"`
}

// A possible value for the pool. Depends on the type of pool.
type PoolValuesItemPropertiesOutput struct{ *pulumi.OutputState }

func (PoolValuesItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolValuesItemProperties)(nil)).Elem()
}

func (o PoolValuesItemPropertiesOutput) ToPoolValuesItemPropertiesOutput() PoolValuesItemPropertiesOutput {
	return o
}

func (o PoolValuesItemPropertiesOutput) ToPoolValuesItemPropertiesOutputWithContext(ctx context.Context) PoolValuesItemPropertiesOutput {
	return o
}

// Is the value active or not?
func (o PoolValuesItemPropertiesOutput) Activated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolValuesItemProperties) *bool { return v.Activated }).(pulumi.BoolPtrOutput)
}

// Is this value enabled or not?
func (o PoolValuesItemPropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolValuesItemProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Is this value considered failed by monitoring
func (o PoolValuesItemPropertiesOutput) Failed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolValuesItemProperties) *bool { return v.Failed }).(pulumi.BoolPtrOutput)
}

// A handicap for this value
func (o PoolValuesItemPropertiesOutput) Handicap() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PoolValuesItemProperties) *float64 { return v.Handicap }).(pulumi.Float64PtrOutput)
}

// The failover/check policy for this value
func (o PoolValuesItemPropertiesOutput) Policy() PoolValuesItemPropertiesPolicyPtrOutput {
	return o.ApplyT(func(v PoolValuesItemProperties) *PoolValuesItemPropertiesPolicy { return v.Policy }).(PoolValuesItemPropertiesPolicyPtrOutput)
}

// The ID of the check to use from Sonar
func (o PoolValuesItemPropertiesOutput) SonarCheckId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolValuesItemProperties) *int { return v.SonarCheckId }).(pulumi.IntPtrOutput)
}

// The response time in the last check
func (o PoolValuesItemPropertiesOutput) Speed() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PoolValuesItemProperties) *float64 { return v.Speed }).(pulumi.Float64PtrOutput)
}

func (o PoolValuesItemPropertiesOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolValuesItemProperties) interface{} { return v.Value }).(pulumi.AnyOutput)
}

// A weight for the value. Must be between 1 and 1000000
func (o PoolValuesItemPropertiesOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolValuesItemProperties) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type PoolValuesItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (PoolValuesItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolValuesItemProperties)(nil)).Elem()
}

func (o PoolValuesItemPropertiesArrayOutput) ToPoolValuesItemPropertiesArrayOutput() PoolValuesItemPropertiesArrayOutput {
	return o
}

func (o PoolValuesItemPropertiesArrayOutput) ToPoolValuesItemPropertiesArrayOutputWithContext(ctx context.Context) PoolValuesItemPropertiesArrayOutput {
	return o
}

func (o PoolValuesItemPropertiesArrayOutput) Index(i pulumi.IntInput) PoolValuesItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolValuesItemProperties {
		return vs[0].([]PoolValuesItemProperties)[vs[1].(int)]
	}).(PoolValuesItemPropertiesOutput)
}

type Poolindex struct {
	// Contactlists that will be notified when the pool is updated
	Contacts  []SimpleContactlist `pulumi:"contacts"`
	CreatedAt *string             `pulumi:"createdAt"`
	// Domains that are using this pool
	Domains []SimpleDomain `pulumi:"domains"`
	// Whether the pool is enabled or not
	Enabled *bool `pulumi:"enabled"`
	// Whether the pool is considered failed or not
	Failed *bool    `pulumi:"failed"`
	Id     *int     `pulumi:"id"`
	Ito    *Poolito `pulumi:"ito"`
	// Links for the pool
	Links *PoolindexLinksProperties `pulumi:"links"`
	// The number of records that must be available for this pool to be used for failover. Between 0 and 64.
	MinimumFailover *int    `pulumi:"minimumFailover"`
	Name            *string `pulumi:"name"`
	// The minimum number of entries from the pool to return when queried. Between 0 and 64.
	Return *int `pulumi:"return"`
	// Templates that are using this pool
	Templates []SimpleTemplate `pulumi:"templates"`
	// The type of pool
	Type      *PoolindexType `pulumi:"type"`
	UpdatedAt *string        `pulumi:"updatedAt"`
	// The values for this pool
	Values []PoolindexValuesItemProperties `pulumi:"values"`
}

type PoolindexOutput struct{ *pulumi.OutputState }

func (PoolindexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Poolindex)(nil)).Elem()
}

func (o PoolindexOutput) ToPoolindexOutput() PoolindexOutput {
	return o
}

func (o PoolindexOutput) ToPoolindexOutputWithContext(ctx context.Context) PoolindexOutput {
	return o
}

// Contactlists that will be notified when the pool is updated
func (o PoolindexOutput) Contacts() SimpleContactlistArrayOutput {
	return o.ApplyT(func(v Poolindex) []SimpleContactlist { return v.Contacts }).(SimpleContactlistArrayOutput)
}

func (o PoolindexOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Poolindex) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Domains that are using this pool
func (o PoolindexOutput) Domains() SimpleDomainArrayOutput {
	return o.ApplyT(func(v Poolindex) []SimpleDomain { return v.Domains }).(SimpleDomainArrayOutput)
}

// Whether the pool is enabled or not
func (o PoolindexOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Poolindex) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Whether the pool is considered failed or not
func (o PoolindexOutput) Failed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Poolindex) *bool { return v.Failed }).(pulumi.BoolPtrOutput)
}

func (o PoolindexOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Poolindex) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o PoolindexOutput) Ito() PoolitoPtrOutput {
	return o.ApplyT(func(v Poolindex) *Poolito { return v.Ito }).(PoolitoPtrOutput)
}

// Links for the pool
func (o PoolindexOutput) Links() PoolindexLinksPropertiesPtrOutput {
	return o.ApplyT(func(v Poolindex) *PoolindexLinksProperties { return v.Links }).(PoolindexLinksPropertiesPtrOutput)
}

// The number of records that must be available for this pool to be used for failover. Between 0 and 64.
func (o PoolindexOutput) MinimumFailover() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Poolindex) *int { return v.MinimumFailover }).(pulumi.IntPtrOutput)
}

func (o PoolindexOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Poolindex) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The minimum number of entries from the pool to return when queried. Between 0 and 64.
func (o PoolindexOutput) Return() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Poolindex) *int { return v.Return }).(pulumi.IntPtrOutput)
}

// Templates that are using this pool
func (o PoolindexOutput) Templates() SimpleTemplateArrayOutput {
	return o.ApplyT(func(v Poolindex) []SimpleTemplate { return v.Templates }).(SimpleTemplateArrayOutput)
}

// The type of pool
func (o PoolindexOutput) Type() PoolindexTypePtrOutput {
	return o.ApplyT(func(v Poolindex) *PoolindexType { return v.Type }).(PoolindexTypePtrOutput)
}

func (o PoolindexOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Poolindex) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The values for this pool
func (o PoolindexOutput) Values() PoolindexValuesItemPropertiesArrayOutput {
	return o.ApplyT(func(v Poolindex) []PoolindexValuesItemProperties { return v.Values }).(PoolindexValuesItemPropertiesArrayOutput)
}

type PoolindexArrayOutput struct{ *pulumi.OutputState }

func (PoolindexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Poolindex)(nil)).Elem()
}

func (o PoolindexArrayOutput) ToPoolindexArrayOutput() PoolindexArrayOutput {
	return o
}

func (o PoolindexArrayOutput) ToPoolindexArrayOutputWithContext(ctx context.Context) PoolindexArrayOutput {
	return o
}

func (o PoolindexArrayOutput) Index(i pulumi.IntInput) PoolindexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Poolindex {
		return vs[0].([]Poolindex)[vs[1].(int)]
	}).(PoolindexOutput)
}

// Links for the pool
type PoolindexLinksProperties struct {
	Self *string `pulumi:"self"`
}

// Links for the pool
type PoolindexLinksPropertiesOutput struct{ *pulumi.OutputState }

func (PoolindexLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolindexLinksProperties)(nil)).Elem()
}

func (o PoolindexLinksPropertiesOutput) ToPoolindexLinksPropertiesOutput() PoolindexLinksPropertiesOutput {
	return o
}

func (o PoolindexLinksPropertiesOutput) ToPoolindexLinksPropertiesOutputWithContext(ctx context.Context) PoolindexLinksPropertiesOutput {
	return o
}

func (o PoolindexLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolindexLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type PoolindexLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PoolindexLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolindexLinksProperties)(nil)).Elem()
}

func (o PoolindexLinksPropertiesPtrOutput) ToPoolindexLinksPropertiesPtrOutput() PoolindexLinksPropertiesPtrOutput {
	return o
}

func (o PoolindexLinksPropertiesPtrOutput) ToPoolindexLinksPropertiesPtrOutputWithContext(ctx context.Context) PoolindexLinksPropertiesPtrOutput {
	return o
}

func (o PoolindexLinksPropertiesPtrOutput) Elem() PoolindexLinksPropertiesOutput {
	return o.ApplyT(func(v *PoolindexLinksProperties) PoolindexLinksProperties {
		if v != nil {
			return *v
		}
		var ret PoolindexLinksProperties
		return ret
	}).(PoolindexLinksPropertiesOutput)
}

func (o PoolindexLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolindexLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// A possible value for the pool. Depends on the type of pool.
type PoolindexValuesItemProperties struct {
	Value interface{} `pulumi:"value"`
	// A weight for the value. Must be between 1 amd 1000000
	Weight *int `pulumi:"weight"`
}

// A possible value for the pool. Depends on the type of pool.
type PoolindexValuesItemPropertiesOutput struct{ *pulumi.OutputState }

func (PoolindexValuesItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolindexValuesItemProperties)(nil)).Elem()
}

func (o PoolindexValuesItemPropertiesOutput) ToPoolindexValuesItemPropertiesOutput() PoolindexValuesItemPropertiesOutput {
	return o
}

func (o PoolindexValuesItemPropertiesOutput) ToPoolindexValuesItemPropertiesOutputWithContext(ctx context.Context) PoolindexValuesItemPropertiesOutput {
	return o
}

func (o PoolindexValuesItemPropertiesOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolindexValuesItemProperties) interface{} { return v.Value }).(pulumi.AnyOutput)
}

// A weight for the value. Must be between 1 amd 1000000
func (o PoolindexValuesItemPropertiesOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolindexValuesItemProperties) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type PoolindexValuesItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (PoolindexValuesItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolindexValuesItemProperties)(nil)).Elem()
}

func (o PoolindexValuesItemPropertiesArrayOutput) ToPoolindexValuesItemPropertiesArrayOutput() PoolindexValuesItemPropertiesArrayOutput {
	return o
}

func (o PoolindexValuesItemPropertiesArrayOutput) ToPoolindexValuesItemPropertiesArrayOutputWithContext(ctx context.Context) PoolindexValuesItemPropertiesArrayOutput {
	return o
}

func (o PoolindexValuesItemPropertiesArrayOutput) Index(i pulumi.IntInput) PoolindexValuesItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolindexValuesItemProperties {
		return vs[0].([]PoolindexValuesItemProperties)[vs[1].(int)]
	}).(PoolindexValuesItemPropertiesOutput)
}

type Poolito struct {
	// The Ito configuration
	Config *PoolitoConfigProperties `pulumi:"config"`
	// Is Ito enabled for this pool?
	Enabled *bool `pulumi:"enabled"`
}

// PoolitoInput is an input type that accepts PoolitoArgs and PoolitoOutput values.
// You can construct a concrete instance of `PoolitoInput` via:
//
//	PoolitoArgs{...}
type PoolitoInput interface {
	pulumi.Input

	ToPoolitoOutput() PoolitoOutput
	ToPoolitoOutputWithContext(context.Context) PoolitoOutput
}

type PoolitoArgs struct {
	// The Ito configuration
	Config PoolitoConfigPropertiesPtrInput `pulumi:"config"`
	// Is Ito enabled for this pool?
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (PoolitoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Poolito)(nil)).Elem()
}

func (i PoolitoArgs) ToPoolitoOutput() PoolitoOutput {
	return i.ToPoolitoOutputWithContext(context.Background())
}

func (i PoolitoArgs) ToPoolitoOutputWithContext(ctx context.Context) PoolitoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolitoOutput)
}

func (i PoolitoArgs) ToPoolitoPtrOutput() PoolitoPtrOutput {
	return i.ToPoolitoPtrOutputWithContext(context.Background())
}

func (i PoolitoArgs) ToPoolitoPtrOutputWithContext(ctx context.Context) PoolitoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolitoOutput).ToPoolitoPtrOutputWithContext(ctx)
}

// PoolitoPtrInput is an input type that accepts PoolitoArgs, PoolitoPtr and PoolitoPtrOutput values.
// You can construct a concrete instance of `PoolitoPtrInput` via:
//
//	        PoolitoArgs{...}
//
//	or:
//
//	        nil
type PoolitoPtrInput interface {
	pulumi.Input

	ToPoolitoPtrOutput() PoolitoPtrOutput
	ToPoolitoPtrOutputWithContext(context.Context) PoolitoPtrOutput
}

type poolitoPtrType PoolitoArgs

func PoolitoPtr(v *PoolitoArgs) PoolitoPtrInput {
	return (*poolitoPtrType)(v)
}

func (*poolitoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Poolito)(nil)).Elem()
}

func (i *poolitoPtrType) ToPoolitoPtrOutput() PoolitoPtrOutput {
	return i.ToPoolitoPtrOutputWithContext(context.Background())
}

func (i *poolitoPtrType) ToPoolitoPtrOutputWithContext(ctx context.Context) PoolitoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolitoPtrOutput)
}

type PoolitoOutput struct{ *pulumi.OutputState }

func (PoolitoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Poolito)(nil)).Elem()
}

func (o PoolitoOutput) ToPoolitoOutput() PoolitoOutput {
	return o
}

func (o PoolitoOutput) ToPoolitoOutputWithContext(ctx context.Context) PoolitoOutput {
	return o
}

func (o PoolitoOutput) ToPoolitoPtrOutput() PoolitoPtrOutput {
	return o.ToPoolitoPtrOutputWithContext(context.Background())
}

func (o PoolitoOutput) ToPoolitoPtrOutputWithContext(ctx context.Context) PoolitoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Poolito) *Poolito {
		return &v
	}).(PoolitoPtrOutput)
}

// The Ito configuration
func (o PoolitoOutput) Config() PoolitoConfigPropertiesPtrOutput {
	return o.ApplyT(func(v Poolito) *PoolitoConfigProperties { return v.Config }).(PoolitoConfigPropertiesPtrOutput)
}

// Is Ito enabled for this pool?
func (o PoolitoOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Poolito) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type PoolitoPtrOutput struct{ *pulumi.OutputState }

func (PoolitoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Poolito)(nil)).Elem()
}

func (o PoolitoPtrOutput) ToPoolitoPtrOutput() PoolitoPtrOutput {
	return o
}

func (o PoolitoPtrOutput) ToPoolitoPtrOutputWithContext(ctx context.Context) PoolitoPtrOutput {
	return o
}

func (o PoolitoPtrOutput) Elem() PoolitoOutput {
	return o.ApplyT(func(v *Poolito) Poolito {
		if v != nil {
			return *v
		}
		var ret Poolito
		return ret
	}).(PoolitoOutput)
}

// The Ito configuration
func (o PoolitoPtrOutput) Config() PoolitoConfigPropertiesPtrOutput {
	return o.ApplyT(func(v *Poolito) *PoolitoConfigProperties {
		if v == nil {
			return nil
		}
		return v.Config
	}).(PoolitoConfigPropertiesPtrOutput)
}

// Is Ito enabled for this pool?
func (o PoolitoPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Poolito) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Ito configuration
type PoolitoConfigProperties struct {
	// Percentage of how much is the response time allowed to deviate?
	DeviationAllowance *PoolitoConfigPropertiesDeviationAllowance `pulumi:"deviationAllowance"`
	HandicapFactor     *PoolitoConfigPropertiesHandicapFactor     `pulumi:"handicapFactor"`
	// The maximum number of results to return
	MaximumNumberOfResults *int `pulumi:"maximumNumberOfResults"`
	// Where monitoring should be performed from
	MonitoringRegion *PoolitoConfigPropertiesMonitoringRegion `pulumi:"monitoringRegion"`
	// The number of seconds between each check
	Period *PoolitoConfigPropertiesPeriod `pulumi:"period"`
}

// PoolitoConfigPropertiesInput is an input type that accepts PoolitoConfigPropertiesArgs and PoolitoConfigPropertiesOutput values.
// You can construct a concrete instance of `PoolitoConfigPropertiesInput` via:
//
//	PoolitoConfigPropertiesArgs{...}
type PoolitoConfigPropertiesInput interface {
	pulumi.Input

	ToPoolitoConfigPropertiesOutput() PoolitoConfigPropertiesOutput
	ToPoolitoConfigPropertiesOutputWithContext(context.Context) PoolitoConfigPropertiesOutput
}

// The Ito configuration
type PoolitoConfigPropertiesArgs struct {
	// Percentage of how much is the response time allowed to deviate?
	DeviationAllowance PoolitoConfigPropertiesDeviationAllowancePtrInput `pulumi:"deviationAllowance"`
	HandicapFactor     PoolitoConfigPropertiesHandicapFactorPtrInput     `pulumi:"handicapFactor"`
	// The maximum number of results to return
	MaximumNumberOfResults pulumi.IntPtrInput `pulumi:"maximumNumberOfResults"`
	// Where monitoring should be performed from
	MonitoringRegion PoolitoConfigPropertiesMonitoringRegionPtrInput `pulumi:"monitoringRegion"`
	// The number of seconds between each check
	Period PoolitoConfigPropertiesPeriodPtrInput `pulumi:"period"`
}

func (PoolitoConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolitoConfigProperties)(nil)).Elem()
}

func (i PoolitoConfigPropertiesArgs) ToPoolitoConfigPropertiesOutput() PoolitoConfigPropertiesOutput {
	return i.ToPoolitoConfigPropertiesOutputWithContext(context.Background())
}

func (i PoolitoConfigPropertiesArgs) ToPoolitoConfigPropertiesOutputWithContext(ctx context.Context) PoolitoConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolitoConfigPropertiesOutput)
}

func (i PoolitoConfigPropertiesArgs) ToPoolitoConfigPropertiesPtrOutput() PoolitoConfigPropertiesPtrOutput {
	return i.ToPoolitoConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i PoolitoConfigPropertiesArgs) ToPoolitoConfigPropertiesPtrOutputWithContext(ctx context.Context) PoolitoConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolitoConfigPropertiesOutput).ToPoolitoConfigPropertiesPtrOutputWithContext(ctx)
}

// PoolitoConfigPropertiesPtrInput is an input type that accepts PoolitoConfigPropertiesArgs, PoolitoConfigPropertiesPtr and PoolitoConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `PoolitoConfigPropertiesPtrInput` via:
//
//	        PoolitoConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type PoolitoConfigPropertiesPtrInput interface {
	pulumi.Input

	ToPoolitoConfigPropertiesPtrOutput() PoolitoConfigPropertiesPtrOutput
	ToPoolitoConfigPropertiesPtrOutputWithContext(context.Context) PoolitoConfigPropertiesPtrOutput
}

type poolitoConfigPropertiesPtrType PoolitoConfigPropertiesArgs

func PoolitoConfigPropertiesPtr(v *PoolitoConfigPropertiesArgs) PoolitoConfigPropertiesPtrInput {
	return (*poolitoConfigPropertiesPtrType)(v)
}

func (*poolitoConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolitoConfigProperties)(nil)).Elem()
}

func (i *poolitoConfigPropertiesPtrType) ToPoolitoConfigPropertiesPtrOutput() PoolitoConfigPropertiesPtrOutput {
	return i.ToPoolitoConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *poolitoConfigPropertiesPtrType) ToPoolitoConfigPropertiesPtrOutputWithContext(ctx context.Context) PoolitoConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolitoConfigPropertiesPtrOutput)
}

// The Ito configuration
type PoolitoConfigPropertiesOutput struct{ *pulumi.OutputState }

func (PoolitoConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolitoConfigProperties)(nil)).Elem()
}

func (o PoolitoConfigPropertiesOutput) ToPoolitoConfigPropertiesOutput() PoolitoConfigPropertiesOutput {
	return o
}

func (o PoolitoConfigPropertiesOutput) ToPoolitoConfigPropertiesOutputWithContext(ctx context.Context) PoolitoConfigPropertiesOutput {
	return o
}

func (o PoolitoConfigPropertiesOutput) ToPoolitoConfigPropertiesPtrOutput() PoolitoConfigPropertiesPtrOutput {
	return o.ToPoolitoConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o PoolitoConfigPropertiesOutput) ToPoolitoConfigPropertiesPtrOutputWithContext(ctx context.Context) PoolitoConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolitoConfigProperties) *PoolitoConfigProperties {
		return &v
	}).(PoolitoConfigPropertiesPtrOutput)
}

// Percentage of how much is the response time allowed to deviate?
func (o PoolitoConfigPropertiesOutput) DeviationAllowance() PoolitoConfigPropertiesDeviationAllowancePtrOutput {
	return o.ApplyT(func(v PoolitoConfigProperties) *PoolitoConfigPropertiesDeviationAllowance {
		return v.DeviationAllowance
	}).(PoolitoConfigPropertiesDeviationAllowancePtrOutput)
}

func (o PoolitoConfigPropertiesOutput) HandicapFactor() PoolitoConfigPropertiesHandicapFactorPtrOutput {
	return o.ApplyT(func(v PoolitoConfigProperties) *PoolitoConfigPropertiesHandicapFactor { return v.HandicapFactor }).(PoolitoConfigPropertiesHandicapFactorPtrOutput)
}

// The maximum number of results to return
func (o PoolitoConfigPropertiesOutput) MaximumNumberOfResults() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolitoConfigProperties) *int { return v.MaximumNumberOfResults }).(pulumi.IntPtrOutput)
}

// Where monitoring should be performed from
func (o PoolitoConfigPropertiesOutput) MonitoringRegion() PoolitoConfigPropertiesMonitoringRegionPtrOutput {
	return o.ApplyT(func(v PoolitoConfigProperties) *PoolitoConfigPropertiesMonitoringRegion { return v.MonitoringRegion }).(PoolitoConfigPropertiesMonitoringRegionPtrOutput)
}

// The number of seconds between each check
func (o PoolitoConfigPropertiesOutput) Period() PoolitoConfigPropertiesPeriodPtrOutput {
	return o.ApplyT(func(v PoolitoConfigProperties) *PoolitoConfigPropertiesPeriod { return v.Period }).(PoolitoConfigPropertiesPeriodPtrOutput)
}

type PoolitoConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PoolitoConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolitoConfigProperties)(nil)).Elem()
}

func (o PoolitoConfigPropertiesPtrOutput) ToPoolitoConfigPropertiesPtrOutput() PoolitoConfigPropertiesPtrOutput {
	return o
}

func (o PoolitoConfigPropertiesPtrOutput) ToPoolitoConfigPropertiesPtrOutputWithContext(ctx context.Context) PoolitoConfigPropertiesPtrOutput {
	return o
}

func (o PoolitoConfigPropertiesPtrOutput) Elem() PoolitoConfigPropertiesOutput {
	return o.ApplyT(func(v *PoolitoConfigProperties) PoolitoConfigProperties {
		if v != nil {
			return *v
		}
		var ret PoolitoConfigProperties
		return ret
	}).(PoolitoConfigPropertiesOutput)
}

// Percentage of how much is the response time allowed to deviate?
func (o PoolitoConfigPropertiesPtrOutput) DeviationAllowance() PoolitoConfigPropertiesDeviationAllowancePtrOutput {
	return o.ApplyT(func(v *PoolitoConfigProperties) *PoolitoConfigPropertiesDeviationAllowance {
		if v == nil {
			return nil
		}
		return v.DeviationAllowance
	}).(PoolitoConfigPropertiesDeviationAllowancePtrOutput)
}

func (o PoolitoConfigPropertiesPtrOutput) HandicapFactor() PoolitoConfigPropertiesHandicapFactorPtrOutput {
	return o.ApplyT(func(v *PoolitoConfigProperties) *PoolitoConfigPropertiesHandicapFactor {
		if v == nil {
			return nil
		}
		return v.HandicapFactor
	}).(PoolitoConfigPropertiesHandicapFactorPtrOutput)
}

// The maximum number of results to return
func (o PoolitoConfigPropertiesPtrOutput) MaximumNumberOfResults() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolitoConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaximumNumberOfResults
	}).(pulumi.IntPtrOutput)
}

// Where monitoring should be performed from
func (o PoolitoConfigPropertiesPtrOutput) MonitoringRegion() PoolitoConfigPropertiesMonitoringRegionPtrOutput {
	return o.ApplyT(func(v *PoolitoConfigProperties) *PoolitoConfigPropertiesMonitoringRegion {
		if v == nil {
			return nil
		}
		return v.MonitoringRegion
	}).(PoolitoConfigPropertiesMonitoringRegionPtrOutput)
}

// The number of seconds between each check
func (o PoolitoConfigPropertiesPtrOutput) Period() PoolitoConfigPropertiesPeriodPtrOutput {
	return o.ApplyT(func(v *PoolitoConfigProperties) *PoolitoConfigPropertiesPeriod {
		if v == nil {
			return nil
		}
		return v.Period
	}).(PoolitoConfigPropertiesPeriodPtrOutput)
}

// A simple version of a contact list when inclued with other resources
type SimpleContactlist struct {
	// Unique ID for the contact list
	Id *int `pulumi:"id"`
	// Links for domain objects
	Links *SimpleContactlistLinksProperties `pulumi:"links"`
}

// A simple version of a contact list when inclued with other resources
type SimpleContactlistOutput struct{ *pulumi.OutputState }

func (SimpleContactlistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleContactlist)(nil)).Elem()
}

func (o SimpleContactlistOutput) ToSimpleContactlistOutput() SimpleContactlistOutput {
	return o
}

func (o SimpleContactlistOutput) ToSimpleContactlistOutputWithContext(ctx context.Context) SimpleContactlistOutput {
	return o
}

// Unique ID for the contact list
func (o SimpleContactlistOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleContactlist) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links for domain objects
func (o SimpleContactlistOutput) Links() SimpleContactlistLinksPropertiesPtrOutput {
	return o.ApplyT(func(v SimpleContactlist) *SimpleContactlistLinksProperties { return v.Links }).(SimpleContactlistLinksPropertiesPtrOutput)
}

type SimpleContactlistArrayOutput struct{ *pulumi.OutputState }

func (SimpleContactlistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SimpleContactlist)(nil)).Elem()
}

func (o SimpleContactlistArrayOutput) ToSimpleContactlistArrayOutput() SimpleContactlistArrayOutput {
	return o
}

func (o SimpleContactlistArrayOutput) ToSimpleContactlistArrayOutputWithContext(ctx context.Context) SimpleContactlistArrayOutput {
	return o
}

func (o SimpleContactlistArrayOutput) Index(i pulumi.IntInput) SimpleContactlistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SimpleContactlist {
		return vs[0].([]SimpleContactlist)[vs[1].(int)]
	}).(SimpleContactlistOutput)
}

// Links for domain objects
type SimpleContactlistLinksProperties struct {
	Self *string `pulumi:"self"`
}

// Links for domain objects
type SimpleContactlistLinksPropertiesOutput struct{ *pulumi.OutputState }

func (SimpleContactlistLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleContactlistLinksProperties)(nil)).Elem()
}

func (o SimpleContactlistLinksPropertiesOutput) ToSimpleContactlistLinksPropertiesOutput() SimpleContactlistLinksPropertiesOutput {
	return o
}

func (o SimpleContactlistLinksPropertiesOutput) ToSimpleContactlistLinksPropertiesOutputWithContext(ctx context.Context) SimpleContactlistLinksPropertiesOutput {
	return o
}

func (o SimpleContactlistLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleContactlistLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type SimpleContactlistLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SimpleContactlistLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleContactlistLinksProperties)(nil)).Elem()
}

func (o SimpleContactlistLinksPropertiesPtrOutput) ToSimpleContactlistLinksPropertiesPtrOutput() SimpleContactlistLinksPropertiesPtrOutput {
	return o
}

func (o SimpleContactlistLinksPropertiesPtrOutput) ToSimpleContactlistLinksPropertiesPtrOutputWithContext(ctx context.Context) SimpleContactlistLinksPropertiesPtrOutput {
	return o
}

func (o SimpleContactlistLinksPropertiesPtrOutput) Elem() SimpleContactlistLinksPropertiesOutput {
	return o.ApplyT(func(v *SimpleContactlistLinksProperties) SimpleContactlistLinksProperties {
		if v != nil {
			return *v
		}
		var ret SimpleContactlistLinksProperties
		return ret
	}).(SimpleContactlistLinksPropertiesOutput)
}

func (o SimpleContactlistLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleContactlistLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type SimpleDomain struct {
	CreatedAt *string `pulumi:"createdAt"`
	// Is the domain enabled
	Enabled *bool `pulumi:"enabled"`
	// Is GeoIP functionality enabled for the domain
	Geoip *bool `pulumi:"geoip"`
	// Is Global Traffic Director enabled for the domain
	Gtd *bool `pulumi:"gtd"`
	// A unique numeric ID for this domain
	Id *int `pulumi:"id"`
	// Links for domain objects
	Links *SimpleDomainLinksProperties `pulumi:"links"`
	// The name of the domain
	Name *string `pulumi:"name"`
	// A note for the domain
	Note   *string             `pulumi:"note"`
	Status *SimpleDomainStatus `pulumi:"status"`
	// An array of tags for this domain.
	Tags      []Tag   `pulumi:"tags"`
	UpdatedAt *string `pulumi:"updatedAt"`
	// The version of the domain resource
	Version *int `pulumi:"version"`
}

type SimpleDomainOutput struct{ *pulumi.OutputState }

func (SimpleDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleDomain)(nil)).Elem()
}

func (o SimpleDomainOutput) ToSimpleDomainOutput() SimpleDomainOutput {
	return o
}

func (o SimpleDomainOutput) ToSimpleDomainOutputWithContext(ctx context.Context) SimpleDomainOutput {
	return o
}

func (o SimpleDomainOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Is the domain enabled
func (o SimpleDomainOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Is GeoIP functionality enabled for the domain
func (o SimpleDomainOutput) Geoip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *bool { return v.Geoip }).(pulumi.BoolPtrOutput)
}

// Is Global Traffic Director enabled for the domain
func (o SimpleDomainOutput) Gtd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *bool { return v.Gtd }).(pulumi.BoolPtrOutput)
}

// A unique numeric ID for this domain
func (o SimpleDomainOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links for domain objects
func (o SimpleDomainOutput) Links() SimpleDomainLinksPropertiesPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *SimpleDomainLinksProperties { return v.Links }).(SimpleDomainLinksPropertiesPtrOutput)
}

// The name of the domain
func (o SimpleDomainOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A note for the domain
func (o SimpleDomainOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *string { return v.Note }).(pulumi.StringPtrOutput)
}

func (o SimpleDomainOutput) Status() SimpleDomainStatusPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *SimpleDomainStatus { return v.Status }).(SimpleDomainStatusPtrOutput)
}

// An array of tags for this domain.
func (o SimpleDomainOutput) Tags() TagArrayOutput {
	return o.ApplyT(func(v SimpleDomain) []Tag { return v.Tags }).(TagArrayOutput)
}

func (o SimpleDomainOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The version of the domain resource
func (o SimpleDomainOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleDomain) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type SimpleDomainArrayOutput struct{ *pulumi.OutputState }

func (SimpleDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SimpleDomain)(nil)).Elem()
}

func (o SimpleDomainArrayOutput) ToSimpleDomainArrayOutput() SimpleDomainArrayOutput {
	return o
}

func (o SimpleDomainArrayOutput) ToSimpleDomainArrayOutputWithContext(ctx context.Context) SimpleDomainArrayOutput {
	return o
}

func (o SimpleDomainArrayOutput) Index(i pulumi.IntInput) SimpleDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SimpleDomain {
		return vs[0].([]SimpleDomain)[vs[1].(int)]
	}).(SimpleDomainOutput)
}

// Links for domain objects
type SimpleDomainLinksProperties struct {
	Records *string `pulumi:"records"`
	Self    *string `pulumi:"self"`
}

// Links for domain objects
type SimpleDomainLinksPropertiesOutput struct{ *pulumi.OutputState }

func (SimpleDomainLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleDomainLinksProperties)(nil)).Elem()
}

func (o SimpleDomainLinksPropertiesOutput) ToSimpleDomainLinksPropertiesOutput() SimpleDomainLinksPropertiesOutput {
	return o
}

func (o SimpleDomainLinksPropertiesOutput) ToSimpleDomainLinksPropertiesOutputWithContext(ctx context.Context) SimpleDomainLinksPropertiesOutput {
	return o
}

func (o SimpleDomainLinksPropertiesOutput) Records() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomainLinksProperties) *string { return v.Records }).(pulumi.StringPtrOutput)
}

func (o SimpleDomainLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleDomainLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type SimpleDomainLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SimpleDomainLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleDomainLinksProperties)(nil)).Elem()
}

func (o SimpleDomainLinksPropertiesPtrOutput) ToSimpleDomainLinksPropertiesPtrOutput() SimpleDomainLinksPropertiesPtrOutput {
	return o
}

func (o SimpleDomainLinksPropertiesPtrOutput) ToSimpleDomainLinksPropertiesPtrOutputWithContext(ctx context.Context) SimpleDomainLinksPropertiesPtrOutput {
	return o
}

func (o SimpleDomainLinksPropertiesPtrOutput) Elem() SimpleDomainLinksPropertiesOutput {
	return o.ApplyT(func(v *SimpleDomainLinksProperties) SimpleDomainLinksProperties {
		if v != nil {
			return *v
		}
		var ret SimpleDomainLinksProperties
		return ret
	}).(SimpleDomainLinksPropertiesOutput)
}

func (o SimpleDomainLinksPropertiesPtrOutput) Records() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleDomainLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Records
	}).(pulumi.StringPtrOutput)
}

func (o SimpleDomainLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleDomainLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type SimpleTemplate struct {
	// The unique ID for this template
	Id *int `pulumi:"id"`
	// Links for the template
	Links *SimpleTemplateLinksProperties `pulumi:"links"`
	// The name for the template
	Name *string `pulumi:"name"`
	// The version of the template resource
	Version *int `pulumi:"version"`
}

type SimpleTemplateOutput struct{ *pulumi.OutputState }

func (SimpleTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleTemplate)(nil)).Elem()
}

func (o SimpleTemplateOutput) ToSimpleTemplateOutput() SimpleTemplateOutput {
	return o
}

func (o SimpleTemplateOutput) ToSimpleTemplateOutputWithContext(ctx context.Context) SimpleTemplateOutput {
	return o
}

// The unique ID for this template
func (o SimpleTemplateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleTemplate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links for the template
func (o SimpleTemplateOutput) Links() SimpleTemplateLinksPropertiesPtrOutput {
	return o.ApplyT(func(v SimpleTemplate) *SimpleTemplateLinksProperties { return v.Links }).(SimpleTemplateLinksPropertiesPtrOutput)
}

// The name for the template
func (o SimpleTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The version of the template resource
func (o SimpleTemplateOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleTemplate) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type SimpleTemplateArrayOutput struct{ *pulumi.OutputState }

func (SimpleTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SimpleTemplate)(nil)).Elem()
}

func (o SimpleTemplateArrayOutput) ToSimpleTemplateArrayOutput() SimpleTemplateArrayOutput {
	return o
}

func (o SimpleTemplateArrayOutput) ToSimpleTemplateArrayOutputWithContext(ctx context.Context) SimpleTemplateArrayOutput {
	return o
}

func (o SimpleTemplateArrayOutput) Index(i pulumi.IntInput) SimpleTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SimpleTemplate {
		return vs[0].([]SimpleTemplate)[vs[1].(int)]
	}).(SimpleTemplateOutput)
}

// Links for the template
type SimpleTemplateLinksProperties struct {
	Records *string `pulumi:"records"`
	Self    *string `pulumi:"self"`
}

// Links for the template
type SimpleTemplateLinksPropertiesOutput struct{ *pulumi.OutputState }

func (SimpleTemplateLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleTemplateLinksProperties)(nil)).Elem()
}

func (o SimpleTemplateLinksPropertiesOutput) ToSimpleTemplateLinksPropertiesOutput() SimpleTemplateLinksPropertiesOutput {
	return o
}

func (o SimpleTemplateLinksPropertiesOutput) ToSimpleTemplateLinksPropertiesOutputWithContext(ctx context.Context) SimpleTemplateLinksPropertiesOutput {
	return o
}

func (o SimpleTemplateLinksPropertiesOutput) Records() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleTemplateLinksProperties) *string { return v.Records }).(pulumi.StringPtrOutput)
}

func (o SimpleTemplateLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleTemplateLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type SimpleTemplateLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SimpleTemplateLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleTemplateLinksProperties)(nil)).Elem()
}

func (o SimpleTemplateLinksPropertiesPtrOutput) ToSimpleTemplateLinksPropertiesPtrOutput() SimpleTemplateLinksPropertiesPtrOutput {
	return o
}

func (o SimpleTemplateLinksPropertiesPtrOutput) ToSimpleTemplateLinksPropertiesPtrOutputWithContext(ctx context.Context) SimpleTemplateLinksPropertiesPtrOutput {
	return o
}

func (o SimpleTemplateLinksPropertiesPtrOutput) Elem() SimpleTemplateLinksPropertiesOutput {
	return o.ApplyT(func(v *SimpleTemplateLinksProperties) SimpleTemplateLinksProperties {
		if v != nil {
			return *v
		}
		var ret SimpleTemplateLinksProperties
		return ret
	}).(SimpleTemplateLinksPropertiesOutput)
}

func (o SimpleTemplateLinksPropertiesPtrOutput) Records() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleTemplateLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Records
	}).(pulumi.StringPtrOutput)
}

func (o SimpleTemplateLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleTemplateLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// A tag is used to group resources together
type Tag struct {
	// Unique ID for the tag
	Id *int `pulumi:"id"`
	// Links for tags
	Links *TagLinksProperties `pulumi:"links"`
	// A name for this tag
	Name *string `pulumi:"name"`
}

// A tag is used to group resources together
type TagOutput struct{ *pulumi.OutputState }

func (TagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tag)(nil)).Elem()
}

func (o TagOutput) ToTagOutput() TagOutput {
	return o
}

func (o TagOutput) ToTagOutputWithContext(ctx context.Context) TagOutput {
	return o
}

// Unique ID for the tag
func (o TagOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Tag) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Links for tags
func (o TagOutput) Links() TagLinksPropertiesPtrOutput {
	return o.ApplyT(func(v Tag) *TagLinksProperties { return v.Links }).(TagLinksPropertiesPtrOutput)
}

// A name for this tag
func (o TagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Tag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type TagArrayOutput struct{ *pulumi.OutputState }

func (TagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tag)(nil)).Elem()
}

func (o TagArrayOutput) ToTagArrayOutput() TagArrayOutput {
	return o
}

func (o TagArrayOutput) ToTagArrayOutputWithContext(ctx context.Context) TagArrayOutput {
	return o
}

func (o TagArrayOutput) Index(i pulumi.IntInput) TagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Tag {
		return vs[0].([]Tag)[vs[1].(int)]
	}).(TagOutput)
}

// Links for tags
type TagLinksProperties struct {
	Self *string `pulumi:"self"`
}

// Links for tags
type TagLinksPropertiesOutput struct{ *pulumi.OutputState }

func (TagLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagLinksProperties)(nil)).Elem()
}

func (o TagLinksPropertiesOutput) ToTagLinksPropertiesOutput() TagLinksPropertiesOutput {
	return o
}

func (o TagLinksPropertiesOutput) ToTagLinksPropertiesOutputWithContext(ctx context.Context) TagLinksPropertiesOutput {
	return o
}

func (o TagLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type TagLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TagLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagLinksProperties)(nil)).Elem()
}

func (o TagLinksPropertiesPtrOutput) ToTagLinksPropertiesPtrOutput() TagLinksPropertiesPtrOutput {
	return o
}

func (o TagLinksPropertiesPtrOutput) ToTagLinksPropertiesPtrOutputWithContext(ctx context.Context) TagLinksPropertiesPtrOutput {
	return o
}

func (o TagLinksPropertiesPtrOutput) Elem() TagLinksPropertiesOutput {
	return o.ApplyT(func(v *TagLinksProperties) TagLinksProperties {
		if v != nil {
			return *v
		}
		var ret TagLinksProperties
		return ret
	}).(TagLinksPropertiesOutput)
}

func (o TagLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// A possible value for the pool. Depends on the type of pool.
type ValuesItemProperties struct {
	// Is this value enabled or not?
	Enabled *bool `pulumi:"enabled"`
	// A handicap for this value
	Handicap *int `pulumi:"handicap"`
	// The failover/check policy for this value
	Policy *ValuesItemPropertiesPolicy `pulumi:"policy"`
	// The ID of the check to use from Sonar
	SonarCheckId *int        `pulumi:"sonarCheckId"`
	Value        interface{} `pulumi:"value"`
	// A weight for the value. Must be between 1 and 1000000
	Weight *int `pulumi:"weight"`
}

// ValuesItemPropertiesInput is an input type that accepts ValuesItemPropertiesArgs and ValuesItemPropertiesOutput values.
// You can construct a concrete instance of `ValuesItemPropertiesInput` via:
//
//	ValuesItemPropertiesArgs{...}
type ValuesItemPropertiesInput interface {
	pulumi.Input

	ToValuesItemPropertiesOutput() ValuesItemPropertiesOutput
	ToValuesItemPropertiesOutputWithContext(context.Context) ValuesItemPropertiesOutput
}

// A possible value for the pool. Depends on the type of pool.
type ValuesItemPropertiesArgs struct {
	// Is this value enabled or not?
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A handicap for this value
	Handicap pulumi.IntPtrInput `pulumi:"handicap"`
	// The failover/check policy for this value
	Policy ValuesItemPropertiesPolicyPtrInput `pulumi:"policy"`
	// The ID of the check to use from Sonar
	SonarCheckId pulumi.IntPtrInput `pulumi:"sonarCheckId"`
	Value        pulumi.Input       `pulumi:"value"`
	// A weight for the value. Must be between 1 and 1000000
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ValuesItemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValuesItemProperties)(nil)).Elem()
}

func (i ValuesItemPropertiesArgs) ToValuesItemPropertiesOutput() ValuesItemPropertiesOutput {
	return i.ToValuesItemPropertiesOutputWithContext(context.Background())
}

func (i ValuesItemPropertiesArgs) ToValuesItemPropertiesOutputWithContext(ctx context.Context) ValuesItemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValuesItemPropertiesOutput)
}

// ValuesItemPropertiesArrayInput is an input type that accepts ValuesItemPropertiesArray and ValuesItemPropertiesArrayOutput values.
// You can construct a concrete instance of `ValuesItemPropertiesArrayInput` via:
//
//	ValuesItemPropertiesArray{ ValuesItemPropertiesArgs{...} }
type ValuesItemPropertiesArrayInput interface {
	pulumi.Input

	ToValuesItemPropertiesArrayOutput() ValuesItemPropertiesArrayOutput
	ToValuesItemPropertiesArrayOutputWithContext(context.Context) ValuesItemPropertiesArrayOutput
}

type ValuesItemPropertiesArray []ValuesItemPropertiesInput

func (ValuesItemPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValuesItemProperties)(nil)).Elem()
}

func (i ValuesItemPropertiesArray) ToValuesItemPropertiesArrayOutput() ValuesItemPropertiesArrayOutput {
	return i.ToValuesItemPropertiesArrayOutputWithContext(context.Background())
}

func (i ValuesItemPropertiesArray) ToValuesItemPropertiesArrayOutputWithContext(ctx context.Context) ValuesItemPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValuesItemPropertiesArrayOutput)
}

// A possible value for the pool. Depends on the type of pool.
type ValuesItemPropertiesOutput struct{ *pulumi.OutputState }

func (ValuesItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValuesItemProperties)(nil)).Elem()
}

func (o ValuesItemPropertiesOutput) ToValuesItemPropertiesOutput() ValuesItemPropertiesOutput {
	return o
}

func (o ValuesItemPropertiesOutput) ToValuesItemPropertiesOutputWithContext(ctx context.Context) ValuesItemPropertiesOutput {
	return o
}

// Is this value enabled or not?
func (o ValuesItemPropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ValuesItemProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A handicap for this value
func (o ValuesItemPropertiesOutput) Handicap() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ValuesItemProperties) *int { return v.Handicap }).(pulumi.IntPtrOutput)
}

// The failover/check policy for this value
func (o ValuesItemPropertiesOutput) Policy() ValuesItemPropertiesPolicyPtrOutput {
	return o.ApplyT(func(v ValuesItemProperties) *ValuesItemPropertiesPolicy { return v.Policy }).(ValuesItemPropertiesPolicyPtrOutput)
}

// The ID of the check to use from Sonar
func (o ValuesItemPropertiesOutput) SonarCheckId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ValuesItemProperties) *int { return v.SonarCheckId }).(pulumi.IntPtrOutput)
}

func (o ValuesItemPropertiesOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v ValuesItemProperties) interface{} { return v.Value }).(pulumi.AnyOutput)
}

// A weight for the value. Must be between 1 and 1000000
func (o ValuesItemPropertiesOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ValuesItemProperties) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ValuesItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ValuesItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValuesItemProperties)(nil)).Elem()
}

func (o ValuesItemPropertiesArrayOutput) ToValuesItemPropertiesArrayOutput() ValuesItemPropertiesArrayOutput {
	return o
}

func (o ValuesItemPropertiesArrayOutput) ToValuesItemPropertiesArrayOutputWithContext(ctx context.Context) ValuesItemPropertiesArrayOutput {
	return o
}

func (o ValuesItemPropertiesArrayOutput) Index(i pulumi.IntInput) ValuesItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValuesItemProperties {
		return vs[0].([]ValuesItemProperties)[vs[1].(int)]
	}).(ValuesItemPropertiesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PoolitoInput)(nil)).Elem(), PoolitoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolitoPtrInput)(nil)).Elem(), PoolitoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolitoConfigPropertiesInput)(nil)).Elem(), PoolitoConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolitoConfigPropertiesPtrInput)(nil)).Elem(), PoolitoConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ValuesItemPropertiesInput)(nil)).Elem(), ValuesItemPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ValuesItemPropertiesArrayInput)(nil)).Elem(), ValuesItemPropertiesArray{})
	pulumi.RegisterOutputType(DataPropertiesOutput{})
	pulumi.RegisterOutputType(DataPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataPropertiesLinksPropertiesOutput{})
	pulumi.RegisterOutputType(DataPropertiesLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GetPoolPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataOutput{})
	pulumi.RegisterOutputType(ListMetadataPtrOutput{})
	pulumi.RegisterOutputType(ListMetadataLinksPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ListMetadataPaginationPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataPaginationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ListPoolsPropertiesOutput{})
	pulumi.RegisterOutputType(PoolTypeOutput{})
	pulumi.RegisterOutputType(PoolTypePtrOutput{})
	pulumi.RegisterOutputType(PoolLinksPropertiesOutput{})
	pulumi.RegisterOutputType(PoolLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PoolValuesItemPropertiesOutput{})
	pulumi.RegisterOutputType(PoolValuesItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(PoolindexOutput{})
	pulumi.RegisterOutputType(PoolindexArrayOutput{})
	pulumi.RegisterOutputType(PoolindexLinksPropertiesOutput{})
	pulumi.RegisterOutputType(PoolindexLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PoolindexValuesItemPropertiesOutput{})
	pulumi.RegisterOutputType(PoolindexValuesItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(PoolitoOutput{})
	pulumi.RegisterOutputType(PoolitoPtrOutput{})
	pulumi.RegisterOutputType(PoolitoConfigPropertiesOutput{})
	pulumi.RegisterOutputType(PoolitoConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SimpleContactlistOutput{})
	pulumi.RegisterOutputType(SimpleContactlistArrayOutput{})
	pulumi.RegisterOutputType(SimpleContactlistLinksPropertiesOutput{})
	pulumi.RegisterOutputType(SimpleContactlistLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SimpleDomainOutput{})
	pulumi.RegisterOutputType(SimpleDomainArrayOutput{})
	pulumi.RegisterOutputType(SimpleDomainLinksPropertiesOutput{})
	pulumi.RegisterOutputType(SimpleDomainLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SimpleTemplateOutput{})
	pulumi.RegisterOutputType(SimpleTemplateArrayOutput{})
	pulumi.RegisterOutputType(SimpleTemplateLinksPropertiesOutput{})
	pulumi.RegisterOutputType(SimpleTemplateLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TagOutput{})
	pulumi.RegisterOutputType(TagArrayOutput{})
	pulumi.RegisterOutputType(TagLinksPropertiesOutput{})
	pulumi.RegisterOutputType(TagLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ValuesItemPropertiesOutput{})
	pulumi.RegisterOutputType(ValuesItemPropertiesArrayOutput{})
}
