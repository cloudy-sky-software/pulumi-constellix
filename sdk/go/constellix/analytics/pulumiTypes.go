// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package analytics

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Analytics for your account
type Analytics struct {
	// The end date for the analytics
	End *string `pulumi:"end"`
	// Details about the interval between time periods in the analytics
	Interval *AnalyticsIntervalProperties `pulumi:"interval"`
	Links    *AnalyticsLinksProperties    `pulumi:"links"`
	// The start date for the analytics
	Start *string `pulumi:"start"`
	// Some statistics for these analytics
	Stats *AnalyticsStatsProperties `pulumi:"stats"`
	// Query counts for all dates within the requested range
	Values []AnalyticsValuesItemProperties `pulumi:"values"`
}

// Analytics for your account
type AnalyticsOutput struct{ *pulumi.OutputState }

func (AnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Analytics)(nil)).Elem()
}

func (o AnalyticsOutput) ToAnalyticsOutput() AnalyticsOutput {
	return o
}

func (o AnalyticsOutput) ToAnalyticsOutputWithContext(ctx context.Context) AnalyticsOutput {
	return o
}

// The end date for the analytics
func (o AnalyticsOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Analytics) *string { return v.End }).(pulumi.StringPtrOutput)
}

// Details about the interval between time periods in the analytics
func (o AnalyticsOutput) Interval() AnalyticsIntervalPropertiesPtrOutput {
	return o.ApplyT(func(v Analytics) *AnalyticsIntervalProperties { return v.Interval }).(AnalyticsIntervalPropertiesPtrOutput)
}

func (o AnalyticsOutput) Links() AnalyticsLinksPropertiesPtrOutput {
	return o.ApplyT(func(v Analytics) *AnalyticsLinksProperties { return v.Links }).(AnalyticsLinksPropertiesPtrOutput)
}

// The start date for the analytics
func (o AnalyticsOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Analytics) *string { return v.Start }).(pulumi.StringPtrOutput)
}

// Some statistics for these analytics
func (o AnalyticsOutput) Stats() AnalyticsStatsPropertiesPtrOutput {
	return o.ApplyT(func(v Analytics) *AnalyticsStatsProperties { return v.Stats }).(AnalyticsStatsPropertiesPtrOutput)
}

// Query counts for all dates within the requested range
func (o AnalyticsOutput) Values() AnalyticsValuesItemPropertiesArrayOutput {
	return o.ApplyT(func(v Analytics) []AnalyticsValuesItemProperties { return v.Values }).(AnalyticsValuesItemPropertiesArrayOutput)
}

type AnalyticsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Analytics)(nil)).Elem()
}

func (o AnalyticsPtrOutput) ToAnalyticsPtrOutput() AnalyticsPtrOutput {
	return o
}

func (o AnalyticsPtrOutput) ToAnalyticsPtrOutputWithContext(ctx context.Context) AnalyticsPtrOutput {
	return o
}

func (o AnalyticsPtrOutput) Elem() AnalyticsOutput {
	return o.ApplyT(func(v *Analytics) Analytics {
		if v != nil {
			return *v
		}
		var ret Analytics
		return ret
	}).(AnalyticsOutput)
}

// The end date for the analytics
func (o AnalyticsPtrOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Analytics) *string {
		if v == nil {
			return nil
		}
		return v.End
	}).(pulumi.StringPtrOutput)
}

// Details about the interval between time periods in the analytics
func (o AnalyticsPtrOutput) Interval() AnalyticsIntervalPropertiesPtrOutput {
	return o.ApplyT(func(v *Analytics) *AnalyticsIntervalProperties {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(AnalyticsIntervalPropertiesPtrOutput)
}

func (o AnalyticsPtrOutput) Links() AnalyticsLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *Analytics) *AnalyticsLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(AnalyticsLinksPropertiesPtrOutput)
}

// The start date for the analytics
func (o AnalyticsPtrOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Analytics) *string {
		if v == nil {
			return nil
		}
		return v.Start
	}).(pulumi.StringPtrOutput)
}

// Some statistics for these analytics
func (o AnalyticsPtrOutput) Stats() AnalyticsStatsPropertiesPtrOutput {
	return o.ApplyT(func(v *Analytics) *AnalyticsStatsProperties {
		if v == nil {
			return nil
		}
		return v.Stats
	}).(AnalyticsStatsPropertiesPtrOutput)
}

// Query counts for all dates within the requested range
func (o AnalyticsPtrOutput) Values() AnalyticsValuesItemPropertiesArrayOutput {
	return o.ApplyT(func(v *Analytics) []AnalyticsValuesItemProperties {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalyticsValuesItemPropertiesArrayOutput)
}

// Details about the interval between time periods in the analytics
type AnalyticsIntervalProperties struct {
	// The maximum number of seconds between time periods
	Max *int `pulumi:"max"`
	// The mean average number of seconds between time periods
	Mean *float64 `pulumi:"mean"`
	// The minimum number of seconds between time periods
	Min *int `pulumi:"min"`
}

// Details about the interval between time periods in the analytics
type AnalyticsIntervalPropertiesOutput struct{ *pulumi.OutputState }

func (AnalyticsIntervalPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsIntervalProperties)(nil)).Elem()
}

func (o AnalyticsIntervalPropertiesOutput) ToAnalyticsIntervalPropertiesOutput() AnalyticsIntervalPropertiesOutput {
	return o
}

func (o AnalyticsIntervalPropertiesOutput) ToAnalyticsIntervalPropertiesOutputWithContext(ctx context.Context) AnalyticsIntervalPropertiesOutput {
	return o
}

// The maximum number of seconds between time periods
func (o AnalyticsIntervalPropertiesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnalyticsIntervalProperties) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The mean average number of seconds between time periods
func (o AnalyticsIntervalPropertiesOutput) Mean() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalyticsIntervalProperties) *float64 { return v.Mean }).(pulumi.Float64PtrOutput)
}

// The minimum number of seconds between time periods
func (o AnalyticsIntervalPropertiesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnalyticsIntervalProperties) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type AnalyticsIntervalPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsIntervalPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsIntervalProperties)(nil)).Elem()
}

func (o AnalyticsIntervalPropertiesPtrOutput) ToAnalyticsIntervalPropertiesPtrOutput() AnalyticsIntervalPropertiesPtrOutput {
	return o
}

func (o AnalyticsIntervalPropertiesPtrOutput) ToAnalyticsIntervalPropertiesPtrOutputWithContext(ctx context.Context) AnalyticsIntervalPropertiesPtrOutput {
	return o
}

func (o AnalyticsIntervalPropertiesPtrOutput) Elem() AnalyticsIntervalPropertiesOutput {
	return o.ApplyT(func(v *AnalyticsIntervalProperties) AnalyticsIntervalProperties {
		if v != nil {
			return *v
		}
		var ret AnalyticsIntervalProperties
		return ret
	}).(AnalyticsIntervalPropertiesOutput)
}

// The maximum number of seconds between time periods
func (o AnalyticsIntervalPropertiesPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AnalyticsIntervalProperties) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The mean average number of seconds between time periods
func (o AnalyticsIntervalPropertiesPtrOutput) Mean() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalyticsIntervalProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Mean
	}).(pulumi.Float64PtrOutput)
}

// The minimum number of seconds between time periods
func (o AnalyticsIntervalPropertiesPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AnalyticsIntervalProperties) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

type AnalyticsLinksProperties struct {
	// The URL for these analytics
	Self *string `pulumi:"self"`
}

type AnalyticsLinksPropertiesOutput struct{ *pulumi.OutputState }

func (AnalyticsLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsLinksProperties)(nil)).Elem()
}

func (o AnalyticsLinksPropertiesOutput) ToAnalyticsLinksPropertiesOutput() AnalyticsLinksPropertiesOutput {
	return o
}

func (o AnalyticsLinksPropertiesOutput) ToAnalyticsLinksPropertiesOutputWithContext(ctx context.Context) AnalyticsLinksPropertiesOutput {
	return o
}

// The URL for these analytics
func (o AnalyticsLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type AnalyticsLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsLinksProperties)(nil)).Elem()
}

func (o AnalyticsLinksPropertiesPtrOutput) ToAnalyticsLinksPropertiesPtrOutput() AnalyticsLinksPropertiesPtrOutput {
	return o
}

func (o AnalyticsLinksPropertiesPtrOutput) ToAnalyticsLinksPropertiesPtrOutputWithContext(ctx context.Context) AnalyticsLinksPropertiesPtrOutput {
	return o
}

func (o AnalyticsLinksPropertiesPtrOutput) Elem() AnalyticsLinksPropertiesOutput {
	return o.ApplyT(func(v *AnalyticsLinksProperties) AnalyticsLinksProperties {
		if v != nil {
			return *v
		}
		var ret AnalyticsLinksProperties
		return ret
	}).(AnalyticsLinksPropertiesOutput)
}

// The URL for these analytics
func (o AnalyticsLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// Some statistics for these analytics
type AnalyticsStatsProperties struct {
	// The number of time periods
	Count *int `pulumi:"count"`
	// The maximum number of queries for one time period
	Max *int `pulumi:"max"`
	// The mean average number of queries per time period
	Mean *float64 `pulumi:"mean"`
	// The minimum number of queries for one time period
	Min *int `pulumi:"min"`
	// The sum of queries for this date range
	Sum *int `pulumi:"sum"`
}

// Some statistics for these analytics
type AnalyticsStatsPropertiesOutput struct{ *pulumi.OutputState }

func (AnalyticsStatsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsStatsProperties)(nil)).Elem()
}

func (o AnalyticsStatsPropertiesOutput) ToAnalyticsStatsPropertiesOutput() AnalyticsStatsPropertiesOutput {
	return o
}

func (o AnalyticsStatsPropertiesOutput) ToAnalyticsStatsPropertiesOutputWithContext(ctx context.Context) AnalyticsStatsPropertiesOutput {
	return o
}

// The number of time periods
func (o AnalyticsStatsPropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnalyticsStatsProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The maximum number of queries for one time period
func (o AnalyticsStatsPropertiesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnalyticsStatsProperties) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The mean average number of queries per time period
func (o AnalyticsStatsPropertiesOutput) Mean() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalyticsStatsProperties) *float64 { return v.Mean }).(pulumi.Float64PtrOutput)
}

// The minimum number of queries for one time period
func (o AnalyticsStatsPropertiesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnalyticsStatsProperties) *int { return v.Min }).(pulumi.IntPtrOutput)
}

// The sum of queries for this date range
func (o AnalyticsStatsPropertiesOutput) Sum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnalyticsStatsProperties) *int { return v.Sum }).(pulumi.IntPtrOutput)
}

type AnalyticsStatsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsStatsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsStatsProperties)(nil)).Elem()
}

func (o AnalyticsStatsPropertiesPtrOutput) ToAnalyticsStatsPropertiesPtrOutput() AnalyticsStatsPropertiesPtrOutput {
	return o
}

func (o AnalyticsStatsPropertiesPtrOutput) ToAnalyticsStatsPropertiesPtrOutputWithContext(ctx context.Context) AnalyticsStatsPropertiesPtrOutput {
	return o
}

func (o AnalyticsStatsPropertiesPtrOutput) Elem() AnalyticsStatsPropertiesOutput {
	return o.ApplyT(func(v *AnalyticsStatsProperties) AnalyticsStatsProperties {
		if v != nil {
			return *v
		}
		var ret AnalyticsStatsProperties
		return ret
	}).(AnalyticsStatsPropertiesOutput)
}

// The number of time periods
func (o AnalyticsStatsPropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AnalyticsStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The maximum number of queries for one time period
func (o AnalyticsStatsPropertiesPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AnalyticsStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The mean average number of queries per time period
func (o AnalyticsStatsPropertiesPtrOutput) Mean() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalyticsStatsProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Mean
	}).(pulumi.Float64PtrOutput)
}

// The minimum number of queries for one time period
func (o AnalyticsStatsPropertiesPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AnalyticsStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// The sum of queries for this date range
func (o AnalyticsStatsPropertiesPtrOutput) Sum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AnalyticsStatsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Sum
	}).(pulumi.IntPtrOutput)
}

// Query count for a particular date
type AnalyticsValuesItemProperties struct {
	Date  *string `pulumi:"date"`
	Value *int    `pulumi:"value"`
}

// Query count for a particular date
type AnalyticsValuesItemPropertiesOutput struct{ *pulumi.OutputState }

func (AnalyticsValuesItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsValuesItemProperties)(nil)).Elem()
}

func (o AnalyticsValuesItemPropertiesOutput) ToAnalyticsValuesItemPropertiesOutput() AnalyticsValuesItemPropertiesOutput {
	return o
}

func (o AnalyticsValuesItemPropertiesOutput) ToAnalyticsValuesItemPropertiesOutputWithContext(ctx context.Context) AnalyticsValuesItemPropertiesOutput {
	return o
}

func (o AnalyticsValuesItemPropertiesOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsValuesItemProperties) *string { return v.Date }).(pulumi.StringPtrOutput)
}

func (o AnalyticsValuesItemPropertiesOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnalyticsValuesItemProperties) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type AnalyticsValuesItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsValuesItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsValuesItemProperties)(nil)).Elem()
}

func (o AnalyticsValuesItemPropertiesArrayOutput) ToAnalyticsValuesItemPropertiesArrayOutput() AnalyticsValuesItemPropertiesArrayOutput {
	return o
}

func (o AnalyticsValuesItemPropertiesArrayOutput) ToAnalyticsValuesItemPropertiesArrayOutputWithContext(ctx context.Context) AnalyticsValuesItemPropertiesArrayOutput {
	return o
}

func (o AnalyticsValuesItemPropertiesArrayOutput) Index(i pulumi.IntInput) AnalyticsValuesItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsValuesItemProperties {
		return vs[0].([]AnalyticsValuesItemProperties)[vs[1].(int)]
	}).(AnalyticsValuesItemPropertiesOutput)
}

type ListAnalyticsProperties struct {
	// Analytics for your account
	Data *Analytics `pulumi:"data"`
}

type ListAnalyticsPropertiesOutput struct{ *pulumi.OutputState }

func (ListAnalyticsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAnalyticsProperties)(nil)).Elem()
}

func (o ListAnalyticsPropertiesOutput) ToListAnalyticsPropertiesOutput() ListAnalyticsPropertiesOutput {
	return o
}

func (o ListAnalyticsPropertiesOutput) ToListAnalyticsPropertiesOutputWithContext(ctx context.Context) ListAnalyticsPropertiesOutput {
	return o
}

// Analytics for your account
func (o ListAnalyticsPropertiesOutput) Data() AnalyticsPtrOutput {
	return o.ApplyT(func(v ListAnalyticsProperties) *Analytics { return v.Data }).(AnalyticsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalyticsOutput{})
	pulumi.RegisterOutputType(AnalyticsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsIntervalPropertiesOutput{})
	pulumi.RegisterOutputType(AnalyticsIntervalPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsLinksPropertiesOutput{})
	pulumi.RegisterOutputType(AnalyticsLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsStatsPropertiesOutput{})
	pulumi.RegisterOutputType(AnalyticsStatsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsValuesItemPropertiesOutput{})
	pulumi.RegisterOutputType(AnalyticsValuesItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ListAnalyticsPropertiesOutput{})
}
