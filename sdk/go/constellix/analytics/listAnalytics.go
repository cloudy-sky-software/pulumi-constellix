// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package analytics

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListAnalytics(ctx *pulumi.Context, args *ListAnalyticsArgs, opts ...pulumi.InvokeOption) (*ListAnalyticsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListAnalyticsResult
	err := ctx.Invoke("constellix:analytics:listAnalytics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListAnalyticsArgs struct {
}

type ListAnalyticsResult struct {
	// Analytics for your account
	Data *Analytics `pulumi:"data"`
}

func ListAnalyticsOutput(ctx *pulumi.Context, args ListAnalyticsOutputArgs, opts ...pulumi.InvokeOption) ListAnalyticsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListAnalyticsResultOutput, error) {
			args := v.(ListAnalyticsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListAnalyticsResult
			secret, err := ctx.InvokePackageRaw("constellix:analytics:listAnalytics", args, &rv, "", opts...)
			if err != nil {
				return ListAnalyticsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListAnalyticsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListAnalyticsResultOutput), nil
			}
			return output, nil
		}).(ListAnalyticsResultOutput)
}

type ListAnalyticsOutputArgs struct {
}

func (ListAnalyticsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAnalyticsArgs)(nil)).Elem()
}

type ListAnalyticsResultOutput struct{ *pulumi.OutputState }

func (ListAnalyticsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAnalyticsResult)(nil)).Elem()
}

func (o ListAnalyticsResultOutput) ToListAnalyticsResultOutput() ListAnalyticsResultOutput {
	return o
}

func (o ListAnalyticsResultOutput) ToListAnalyticsResultOutputWithContext(ctx context.Context) ListAnalyticsResultOutput {
	return o
}

// Analytics for your account
func (o ListAnalyticsResultOutput) Data() AnalyticsPtrOutput {
	return o.ApplyT(func(v ListAnalyticsResult) *Analytics { return v.Data }).(AnalyticsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListAnalyticsResultOutput{})
}
