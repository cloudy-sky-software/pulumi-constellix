// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package geoproximities

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Geo Proximity Location
type GeoProximityLocation struct {
	pulumi.CustomResourceState

	// The numeric ID for a city
	City pulumi.IntPtrOutput `pulumi:"city"`
	// 2 digit ISO country code
	Country pulumi.StringPtrOutput  `pulumi:"country"`
	Data    DataPropertiesPtrOutput `pulumi:"data"`
	// Latitude of the location
	Latitude pulumi.Float64PtrOutput `pulumi:"latitude"`
	// Longitude of the location
	Longitude pulumi.Float64PtrOutput `pulumi:"longitude"`
	// The name of the Geo Proximity location
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Region, state or province code
	Region pulumi.StringPtrOutput `pulumi:"region"`
}

// NewGeoProximityLocation registers a new resource with the given unique name, arguments, and options.
func NewGeoProximityLocation(ctx *pulumi.Context,
	name string, args *GeoProximityLocationArgs, opts ...pulumi.ResourceOption) (*GeoProximityLocation, error) {
	if args == nil {
		args = &GeoProximityLocationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GeoProximityLocation
	err := ctx.RegisterResource("constellix:geoproximities:GeoProximityLocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGeoProximityLocation gets an existing GeoProximityLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGeoProximityLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GeoProximityLocationState, opts ...pulumi.ResourceOption) (*GeoProximityLocation, error) {
	var resource GeoProximityLocation
	err := ctx.ReadResource("constellix:geoproximities:GeoProximityLocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GeoProximityLocation resources.
type geoProximityLocationState struct {
}

type GeoProximityLocationState struct {
}

func (GeoProximityLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*geoProximityLocationState)(nil)).Elem()
}

type geoProximityLocationArgs struct {
	// The numeric ID for a city
	City *int `pulumi:"city"`
	// 2 digit ISO country code
	Country *string `pulumi:"country"`
	// Latitude of the location
	Latitude *float64 `pulumi:"latitude"`
	// Longitude of the location
	Longitude *float64 `pulumi:"longitude"`
	// The name of the Geo Proximity location
	Name *string `pulumi:"name"`
	// Region, state or province code
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a GeoProximityLocation resource.
type GeoProximityLocationArgs struct {
	// The numeric ID for a city
	City pulumi.IntPtrInput
	// 2 digit ISO country code
	Country pulumi.StringPtrInput
	// Latitude of the location
	Latitude pulumi.Float64PtrInput
	// Longitude of the location
	Longitude pulumi.Float64PtrInput
	// The name of the Geo Proximity location
	Name pulumi.StringPtrInput
	// Region, state or province code
	Region pulumi.StringPtrInput
}

func (GeoProximityLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*geoProximityLocationArgs)(nil)).Elem()
}

type GeoProximityLocationInput interface {
	pulumi.Input

	ToGeoProximityLocationOutput() GeoProximityLocationOutput
	ToGeoProximityLocationOutputWithContext(ctx context.Context) GeoProximityLocationOutput
}

func (*GeoProximityLocation) ElementType() reflect.Type {
	return reflect.TypeOf((**GeoProximityLocation)(nil)).Elem()
}

func (i *GeoProximityLocation) ToGeoProximityLocationOutput() GeoProximityLocationOutput {
	return i.ToGeoProximityLocationOutputWithContext(context.Background())
}

func (i *GeoProximityLocation) ToGeoProximityLocationOutputWithContext(ctx context.Context) GeoProximityLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoProximityLocationOutput)
}

type GeoProximityLocationOutput struct{ *pulumi.OutputState }

func (GeoProximityLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GeoProximityLocation)(nil)).Elem()
}

func (o GeoProximityLocationOutput) ToGeoProximityLocationOutput() GeoProximityLocationOutput {
	return o
}

func (o GeoProximityLocationOutput) ToGeoProximityLocationOutputWithContext(ctx context.Context) GeoProximityLocationOutput {
	return o
}

// The numeric ID for a city
func (o GeoProximityLocationOutput) City() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GeoProximityLocation) pulumi.IntPtrOutput { return v.City }).(pulumi.IntPtrOutput)
}

// 2 digit ISO country code
func (o GeoProximityLocationOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeoProximityLocation) pulumi.StringPtrOutput { return v.Country }).(pulumi.StringPtrOutput)
}

func (o GeoProximityLocationOutput) Data() DataPropertiesPtrOutput {
	return o.ApplyT(func(v *GeoProximityLocation) DataPropertiesPtrOutput { return v.Data }).(DataPropertiesPtrOutput)
}

// Latitude of the location
func (o GeoProximityLocationOutput) Latitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GeoProximityLocation) pulumi.Float64PtrOutput { return v.Latitude }).(pulumi.Float64PtrOutput)
}

// Longitude of the location
func (o GeoProximityLocationOutput) Longitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GeoProximityLocation) pulumi.Float64PtrOutput { return v.Longitude }).(pulumi.Float64PtrOutput)
}

// The name of the Geo Proximity location
func (o GeoProximityLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeoProximityLocation) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// Region, state or province code
func (o GeoProximityLocationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeoProximityLocation) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GeoProximityLocationInput)(nil)).Elem(), &GeoProximityLocation{})
	pulumi.RegisterOutputType(GeoProximityLocationOutput{})
}
