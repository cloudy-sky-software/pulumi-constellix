// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package templates

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListTemplateRecords(ctx *pulumi.Context, args *ListTemplateRecordsArgs, opts ...pulumi.InvokeOption) (*ListTemplateRecordsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListTemplateRecordsResult
	err := ctx.Invoke("constellix:templates:listTemplateRecords", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListTemplateRecordsArgs struct {
	// The ID of the template object
	TemplateId string `pulumi:"templateId"`
}

type ListTemplateRecordsResult struct {
	// The records for this page
	Data []ListTemplateRecordsPropertiesDataItem `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

func ListTemplateRecordsOutput(ctx *pulumi.Context, args ListTemplateRecordsOutputArgs, opts ...pulumi.InvokeOption) ListTemplateRecordsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListTemplateRecordsResultOutput, error) {
			args := v.(ListTemplateRecordsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListTemplateRecordsResult
			secret, err := ctx.InvokePackageRaw("constellix:templates:listTemplateRecords", args, &rv, "", opts...)
			if err != nil {
				return ListTemplateRecordsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListTemplateRecordsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListTemplateRecordsResultOutput), nil
			}
			return output, nil
		}).(ListTemplateRecordsResultOutput)
}

type ListTemplateRecordsOutputArgs struct {
	// The ID of the template object
	TemplateId pulumi.StringInput `pulumi:"templateId"`
}

func (ListTemplateRecordsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListTemplateRecordsArgs)(nil)).Elem()
}

type ListTemplateRecordsResultOutput struct{ *pulumi.OutputState }

func (ListTemplateRecordsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListTemplateRecordsResult)(nil)).Elem()
}

func (o ListTemplateRecordsResultOutput) ToListTemplateRecordsResultOutput() ListTemplateRecordsResultOutput {
	return o
}

func (o ListTemplateRecordsResultOutput) ToListTemplateRecordsResultOutputWithContext(ctx context.Context) ListTemplateRecordsResultOutput {
	return o
}

// The records for this page
func (o ListTemplateRecordsResultOutput) Data() ListTemplateRecordsPropertiesDataItemArrayOutput {
	return o.ApplyT(func(v ListTemplateRecordsResult) []ListTemplateRecordsPropertiesDataItem { return v.Data }).(ListTemplateRecordsPropertiesDataItemArrayOutput)
}

// Metadata for list responses
func (o ListTemplateRecordsResultOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListTemplateRecordsResult) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListTemplateRecordsResultOutput{})
}
