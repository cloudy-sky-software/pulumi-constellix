// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package templates

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListTemplates(ctx *pulumi.Context, args *ListTemplatesArgs, opts ...pulumi.InvokeOption) (*ListTemplatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListTemplatesResult
	err := ctx.Invoke("constellix:templates:listTemplates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListTemplatesArgs struct {
}

type ListTemplatesResult struct {
	// The records for this page
	Data []TemplateType `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

func ListTemplatesOutput(ctx *pulumi.Context, args ListTemplatesOutputArgs, opts ...pulumi.InvokeOption) ListTemplatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListTemplatesResultOutput, error) {
			args := v.(ListTemplatesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListTemplatesResult
			secret, err := ctx.InvokePackageRaw("constellix:templates:listTemplates", args, &rv, "", opts...)
			if err != nil {
				return ListTemplatesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListTemplatesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListTemplatesResultOutput), nil
			}
			return output, nil
		}).(ListTemplatesResultOutput)
}

type ListTemplatesOutputArgs struct {
}

func (ListTemplatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListTemplatesArgs)(nil)).Elem()
}

type ListTemplatesResultOutput struct{ *pulumi.OutputState }

func (ListTemplatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListTemplatesResult)(nil)).Elem()
}

func (o ListTemplatesResultOutput) ToListTemplatesResultOutput() ListTemplatesResultOutput {
	return o
}

func (o ListTemplatesResultOutput) ToListTemplatesResultOutputWithContext(ctx context.Context) ListTemplatesResultOutput {
	return o
}

// The records for this page
func (o ListTemplatesResultOutput) Data() TemplateTypeArrayOutput {
	return o.ApplyT(func(v ListTemplatesResult) []TemplateType { return v.Data }).(TemplateTypeArrayOutput)
}

// Metadata for list responses
func (o ListTemplatesResultOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListTemplatesResult) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListTemplatesResultOutput{})
}
