// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package templates

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPTR(ctx *pulumi.Context, args *LookupPTRArgs, opts ...pulumi.InvokeOption) (*LookupPTRResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPTRResult
	err := ctx.Invoke("constellix:templates:getPTR", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPTRArgs struct {
	// The ID of the record
	Id string `pulumi:"id"`
	// The ID of the template object
	TemplateId string `pulumi:"templateId"`
}

type LookupPTRResult struct {
	// A simple version of a contact list when inclued with other resources
	Contacts *SimpleContactlist `pulumi:"contacts"`
	Domain   *SimpleDomain      `pulumi:"domain"`
	// Whether the record is enabled or not. A disabled record will return an NXDOMAIN response.
	Enabled *bool `pulumi:"enabled"`
	// Disable the record if all hosts fail. If all hosts fail, another matching IP Filter, nearest Proximity or World (Default) record will be used instead.
	GeoFailover *bool `pulumi:"geoFailover"`
	// Geo Proximity Location
	Geoproximity *SimpleGeoproximity `pulumi:"geoproximity"`
	// A unique ID for this domain record
	Id       *int            `pulumi:"id"`
	Ipfilter *SimpleIpfilter `pulumi:"ipfilter"`
	// If the requesting IP matches the IP filter, don't return a response
	IpfilterDrop *bool `pulumi:"ipfilterDrop"`
	// The previous values of the record in the different modes
	LastValues *GetPTRPropertiesLastValuesProperties `pulumi:"lastValues"`
	// Links for the domain record
	Links *TemplaterecordLinksProperties `pulumi:"links"`
	// How the record should work
	Mode *GetPTRPropertiesMode `pulumi:"mode"`
	// The name of the record
	Name *string `pulumi:"name"`
	// A note about the record. Max 512 characters.
	Notes *string `pulumi:"notes"`
	// The region for this record
	Region *RecordRegion `pulumi:"region"`
	// Only used on POST or PATCH requests for ANAME records, used to specify whether the hostname should be looked up immediately. Will be null otherwise.
	SkipLookup *bool           `pulumi:"skipLookup"`
	Template   *SimpleTemplate `pulumi:"template"`
	// The time to live in seconds for this record. must be between 0 and 2147483647
	Ttl *int `pulumi:"ttl"`
	// The type of record
	Type *GetPTRPropertiesType `pulumi:"type"`
	// Standard record mode
	Value []ValuePtrValueItemProperties `pulumi:"value"`
}

func LookupPTROutput(ctx *pulumi.Context, args LookupPTROutputArgs, opts ...pulumi.InvokeOption) LookupPTRResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPTRResultOutput, error) {
			args := v.(LookupPTRArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupPTRResult
			secret, err := ctx.InvokePackageRaw("constellix:templates:getPTR", args, &rv, "", opts...)
			if err != nil {
				return LookupPTRResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupPTRResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupPTRResultOutput), nil
			}
			return output, nil
		}).(LookupPTRResultOutput)
}

type LookupPTROutputArgs struct {
	// The ID of the record
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the template object
	TemplateId pulumi.StringInput `pulumi:"templateId"`
}

func (LookupPTROutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPTRArgs)(nil)).Elem()
}

type LookupPTRResultOutput struct{ *pulumi.OutputState }

func (LookupPTRResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPTRResult)(nil)).Elem()
}

func (o LookupPTRResultOutput) ToLookupPTRResultOutput() LookupPTRResultOutput {
	return o
}

func (o LookupPTRResultOutput) ToLookupPTRResultOutputWithContext(ctx context.Context) LookupPTRResultOutput {
	return o
}

// A simple version of a contact list when inclued with other resources
func (o LookupPTRResultOutput) Contacts() SimpleContactlistPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *SimpleContactlist { return v.Contacts }).(SimpleContactlistPtrOutput)
}

func (o LookupPTRResultOutput) Domain() SimpleDomainPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *SimpleDomain { return v.Domain }).(SimpleDomainPtrOutput)
}

// Whether the record is enabled or not. A disabled record will return an NXDOMAIN response.
func (o LookupPTRResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Disable the record if all hosts fail. If all hosts fail, another matching IP Filter, nearest Proximity or World (Default) record will be used instead.
func (o LookupPTRResultOutput) GeoFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *bool { return v.GeoFailover }).(pulumi.BoolPtrOutput)
}

// Geo Proximity Location
func (o LookupPTRResultOutput) Geoproximity() SimpleGeoproximityPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *SimpleGeoproximity { return v.Geoproximity }).(SimpleGeoproximityPtrOutput)
}

// A unique ID for this domain record
func (o LookupPTRResultOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LookupPTRResultOutput) Ipfilter() SimpleIpfilterPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *SimpleIpfilter { return v.Ipfilter }).(SimpleIpfilterPtrOutput)
}

// If the requesting IP matches the IP filter, don't return a response
func (o LookupPTRResultOutput) IpfilterDrop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *bool { return v.IpfilterDrop }).(pulumi.BoolPtrOutput)
}

// The previous values of the record in the different modes
func (o LookupPTRResultOutput) LastValues() GetPTRPropertiesLastValuesPropertiesPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *GetPTRPropertiesLastValuesProperties { return v.LastValues }).(GetPTRPropertiesLastValuesPropertiesPtrOutput)
}

// Links for the domain record
func (o LookupPTRResultOutput) Links() TemplaterecordLinksPropertiesPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *TemplaterecordLinksProperties { return v.Links }).(TemplaterecordLinksPropertiesPtrOutput)
}

// How the record should work
func (o LookupPTRResultOutput) Mode() GetPTRPropertiesModePtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *GetPTRPropertiesMode { return v.Mode }).(GetPTRPropertiesModePtrOutput)
}

// The name of the record
func (o LookupPTRResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A note about the record. Max 512 characters.
func (o LookupPTRResultOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The region for this record
func (o LookupPTRResultOutput) Region() RecordRegionPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *RecordRegion { return v.Region }).(RecordRegionPtrOutput)
}

// Only used on POST or PATCH requests for ANAME records, used to specify whether the hostname should be looked up immediately. Will be null otherwise.
func (o LookupPTRResultOutput) SkipLookup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *bool { return v.SkipLookup }).(pulumi.BoolPtrOutput)
}

func (o LookupPTRResultOutput) Template() SimpleTemplatePtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *SimpleTemplate { return v.Template }).(SimpleTemplatePtrOutput)
}

// The time to live in seconds for this record. must be between 0 and 2147483647
func (o LookupPTRResultOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

// The type of record
func (o LookupPTRResultOutput) Type() GetPTRPropertiesTypePtrOutput {
	return o.ApplyT(func(v LookupPTRResult) *GetPTRPropertiesType { return v.Type }).(GetPTRPropertiesTypePtrOutput)
}

// Standard record mode
func (o LookupPTRResultOutput) Value() ValuePtrValueItemPropertiesArrayOutput {
	return o.ApplyT(func(v LookupPTRResult) []ValuePtrValueItemProperties { return v.Value }).(ValuePtrValueItemPropertiesArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPTRResultOutput{})
}
