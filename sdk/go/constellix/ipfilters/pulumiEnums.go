// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ipfilters

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContinentsItem string

const (
	ContinentsItemWorld = ContinentsItem("world")
	ContinentsItemAf    = ContinentsItem("AF")
	ContinentsItemAn    = ContinentsItem("AN")
	ContinentsItemAs    = ContinentsItem("AS")
	ContinentsItemEu    = ContinentsItem("EU")
	ContinentsItemNa    = ContinentsItem("NA")
	ContinentsItemOc    = ContinentsItem("OC")
	ContinentsItemSa    = ContinentsItem("SA")
)

func (ContinentsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinentsItem)(nil)).Elem()
}

func (e ContinentsItem) ToContinentsItemOutput() ContinentsItemOutput {
	return pulumi.ToOutput(e).(ContinentsItemOutput)
}

func (e ContinentsItem) ToContinentsItemOutputWithContext(ctx context.Context) ContinentsItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContinentsItemOutput)
}

func (e ContinentsItem) ToContinentsItemPtrOutput() ContinentsItemPtrOutput {
	return e.ToContinentsItemPtrOutputWithContext(context.Background())
}

func (e ContinentsItem) ToContinentsItemPtrOutputWithContext(ctx context.Context) ContinentsItemPtrOutput {
	return ContinentsItem(e).ToContinentsItemOutputWithContext(ctx).ToContinentsItemPtrOutputWithContext(ctx)
}

func (e ContinentsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContinentsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContinentsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContinentsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContinentsItemOutput struct{ *pulumi.OutputState }

func (ContinentsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinentsItem)(nil)).Elem()
}

func (o ContinentsItemOutput) ToContinentsItemOutput() ContinentsItemOutput {
	return o
}

func (o ContinentsItemOutput) ToContinentsItemOutputWithContext(ctx context.Context) ContinentsItemOutput {
	return o
}

func (o ContinentsItemOutput) ToContinentsItemPtrOutput() ContinentsItemPtrOutput {
	return o.ToContinentsItemPtrOutputWithContext(context.Background())
}

func (o ContinentsItemOutput) ToContinentsItemPtrOutputWithContext(ctx context.Context) ContinentsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContinentsItem) *ContinentsItem {
		return &v
	}).(ContinentsItemPtrOutput)
}

func (o ContinentsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContinentsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContinentsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContinentsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContinentsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContinentsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContinentsItemPtrOutput struct{ *pulumi.OutputState }

func (ContinentsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinentsItem)(nil)).Elem()
}

func (o ContinentsItemPtrOutput) ToContinentsItemPtrOutput() ContinentsItemPtrOutput {
	return o
}

func (o ContinentsItemPtrOutput) ToContinentsItemPtrOutputWithContext(ctx context.Context) ContinentsItemPtrOutput {
	return o
}

func (o ContinentsItemPtrOutput) Elem() ContinentsItemOutput {
	return o.ApplyT(func(v *ContinentsItem) ContinentsItem {
		if v != nil {
			return *v
		}
		var ret ContinentsItem
		return ret
	}).(ContinentsItemOutput)
}

func (o ContinentsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContinentsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContinentsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContinentsItemInput is an input type that accepts values of the ContinentsItem enum
// A concrete instance of `ContinentsItemInput` can be one of the following:
//
//	ContinentsItemWorld
//	ContinentsItemAf
//	ContinentsItemAn
//	ContinentsItemAs
//	ContinentsItemEu
//	ContinentsItemNa
//	ContinentsItemOc
//	ContinentsItemSa
type ContinentsItemInput interface {
	pulumi.Input

	ToContinentsItemOutput() ContinentsItemOutput
	ToContinentsItemOutputWithContext(context.Context) ContinentsItemOutput
}

var continentsItemPtrType = reflect.TypeOf((**ContinentsItem)(nil)).Elem()

type ContinentsItemPtrInput interface {
	pulumi.Input

	ToContinentsItemPtrOutput() ContinentsItemPtrOutput
	ToContinentsItemPtrOutputWithContext(context.Context) ContinentsItemPtrOutput
}

type continentsItemPtr string

func ContinentsItemPtr(v string) ContinentsItemPtrInput {
	return (*continentsItemPtr)(&v)
}

func (*continentsItemPtr) ElementType() reflect.Type {
	return continentsItemPtrType
}

func (in *continentsItemPtr) ToContinentsItemPtrOutput() ContinentsItemPtrOutput {
	return pulumi.ToOutput(in).(ContinentsItemPtrOutput)
}

func (in *continentsItemPtr) ToContinentsItemPtrOutputWithContext(ctx context.Context) ContinentsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContinentsItemPtrOutput)
}

// ContinentsItemArrayInput is an input type that accepts ContinentsItemArray and ContinentsItemArrayOutput values.
// You can construct a concrete instance of `ContinentsItemArrayInput` via:
//
//	ContinentsItemArray{ ContinentsItemArgs{...} }
type ContinentsItemArrayInput interface {
	pulumi.Input

	ToContinentsItemArrayOutput() ContinentsItemArrayOutput
	ToContinentsItemArrayOutputWithContext(context.Context) ContinentsItemArrayOutput
}

type ContinentsItemArray []ContinentsItem

func (ContinentsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContinentsItem)(nil)).Elem()
}

func (i ContinentsItemArray) ToContinentsItemArrayOutput() ContinentsItemArrayOutput {
	return i.ToContinentsItemArrayOutputWithContext(context.Background())
}

func (i ContinentsItemArray) ToContinentsItemArrayOutputWithContext(ctx context.Context) ContinentsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinentsItemArrayOutput)
}

type ContinentsItemArrayOutput struct{ *pulumi.OutputState }

func (ContinentsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContinentsItem)(nil)).Elem()
}

func (o ContinentsItemArrayOutput) ToContinentsItemArrayOutput() ContinentsItemArrayOutput {
	return o
}

func (o ContinentsItemArrayOutput) ToContinentsItemArrayOutputWithContext(ctx context.Context) ContinentsItemArrayOutput {
	return o
}

func (o ContinentsItemArrayOutput) Index(i pulumi.IntInput) ContinentsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContinentsItem {
		return vs[0].([]ContinentsItem)[vs[1].(int)]
	}).(ContinentsItemOutput)
}

type IpfilterContinentsItem string

const (
	IpfilterContinentsItemAf = IpfilterContinentsItem("AF")
	IpfilterContinentsItemAn = IpfilterContinentsItem("AN")
	IpfilterContinentsItemAs = IpfilterContinentsItem("AS")
	IpfilterContinentsItemEu = IpfilterContinentsItem("EU")
	IpfilterContinentsItemNa = IpfilterContinentsItem("NA")
	IpfilterContinentsItemOc = IpfilterContinentsItem("OC")
	IpfilterContinentsItemSa = IpfilterContinentsItem("SA")
)

type IpfilterContinentsItemOutput struct{ *pulumi.OutputState }

func (IpfilterContinentsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpfilterContinentsItem)(nil)).Elem()
}

func (o IpfilterContinentsItemOutput) ToIpfilterContinentsItemOutput() IpfilterContinentsItemOutput {
	return o
}

func (o IpfilterContinentsItemOutput) ToIpfilterContinentsItemOutputWithContext(ctx context.Context) IpfilterContinentsItemOutput {
	return o
}

func (o IpfilterContinentsItemOutput) ToIpfilterContinentsItemPtrOutput() IpfilterContinentsItemPtrOutput {
	return o.ToIpfilterContinentsItemPtrOutputWithContext(context.Background())
}

func (o IpfilterContinentsItemOutput) ToIpfilterContinentsItemPtrOutputWithContext(ctx context.Context) IpfilterContinentsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpfilterContinentsItem) *IpfilterContinentsItem {
		return &v
	}).(IpfilterContinentsItemPtrOutput)
}

func (o IpfilterContinentsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IpfilterContinentsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpfilterContinentsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IpfilterContinentsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpfilterContinentsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpfilterContinentsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IpfilterContinentsItemPtrOutput struct{ *pulumi.OutputState }

func (IpfilterContinentsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpfilterContinentsItem)(nil)).Elem()
}

func (o IpfilterContinentsItemPtrOutput) ToIpfilterContinentsItemPtrOutput() IpfilterContinentsItemPtrOutput {
	return o
}

func (o IpfilterContinentsItemPtrOutput) ToIpfilterContinentsItemPtrOutputWithContext(ctx context.Context) IpfilterContinentsItemPtrOutput {
	return o
}

func (o IpfilterContinentsItemPtrOutput) Elem() IpfilterContinentsItemOutput {
	return o.ApplyT(func(v *IpfilterContinentsItem) IpfilterContinentsItem {
		if v != nil {
			return *v
		}
		var ret IpfilterContinentsItem
		return ret
	}).(IpfilterContinentsItemOutput)
}

func (o IpfilterContinentsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpfilterContinentsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IpfilterContinentsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IpfilterContinentsItemArrayOutput struct{ *pulumi.OutputState }

func (IpfilterContinentsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpfilterContinentsItem)(nil)).Elem()
}

func (o IpfilterContinentsItemArrayOutput) ToIpfilterContinentsItemArrayOutput() IpfilterContinentsItemArrayOutput {
	return o
}

func (o IpfilterContinentsItemArrayOutput) ToIpfilterContinentsItemArrayOutputWithContext(ctx context.Context) IpfilterContinentsItemArrayOutput {
	return o
}

func (o IpfilterContinentsItemArrayOutput) Index(i pulumi.IntInput) IpfilterContinentsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpfilterContinentsItem {
		return vs[0].([]IpfilterContinentsItem)[vs[1].(int)]
	}).(IpfilterContinentsItemOutput)
}

// The continent for this region
type RegionsItemPropertiesContinent string

const (
	RegionsItemPropertiesContinentWorld = RegionsItemPropertiesContinent("world")
	RegionsItemPropertiesContinentAf    = RegionsItemPropertiesContinent("AF")
	RegionsItemPropertiesContinentAn    = RegionsItemPropertiesContinent("AN")
	RegionsItemPropertiesContinentAs    = RegionsItemPropertiesContinent("AS")
	RegionsItemPropertiesContinentEu    = RegionsItemPropertiesContinent("EU")
	RegionsItemPropertiesContinentNa    = RegionsItemPropertiesContinent("NA")
	RegionsItemPropertiesContinentOc    = RegionsItemPropertiesContinent("OC")
	RegionsItemPropertiesContinentSa    = RegionsItemPropertiesContinent("SA")
)

func (RegionsItemPropertiesContinent) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionsItemPropertiesContinent)(nil)).Elem()
}

func (e RegionsItemPropertiesContinent) ToRegionsItemPropertiesContinentOutput() RegionsItemPropertiesContinentOutput {
	return pulumi.ToOutput(e).(RegionsItemPropertiesContinentOutput)
}

func (e RegionsItemPropertiesContinent) ToRegionsItemPropertiesContinentOutputWithContext(ctx context.Context) RegionsItemPropertiesContinentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionsItemPropertiesContinentOutput)
}

func (e RegionsItemPropertiesContinent) ToRegionsItemPropertiesContinentPtrOutput() RegionsItemPropertiesContinentPtrOutput {
	return e.ToRegionsItemPropertiesContinentPtrOutputWithContext(context.Background())
}

func (e RegionsItemPropertiesContinent) ToRegionsItemPropertiesContinentPtrOutputWithContext(ctx context.Context) RegionsItemPropertiesContinentPtrOutput {
	return RegionsItemPropertiesContinent(e).ToRegionsItemPropertiesContinentOutputWithContext(ctx).ToRegionsItemPropertiesContinentPtrOutputWithContext(ctx)
}

func (e RegionsItemPropertiesContinent) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionsItemPropertiesContinent) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionsItemPropertiesContinent) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionsItemPropertiesContinent) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionsItemPropertiesContinentOutput struct{ *pulumi.OutputState }

func (RegionsItemPropertiesContinentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionsItemPropertiesContinent)(nil)).Elem()
}

func (o RegionsItemPropertiesContinentOutput) ToRegionsItemPropertiesContinentOutput() RegionsItemPropertiesContinentOutput {
	return o
}

func (o RegionsItemPropertiesContinentOutput) ToRegionsItemPropertiesContinentOutputWithContext(ctx context.Context) RegionsItemPropertiesContinentOutput {
	return o
}

func (o RegionsItemPropertiesContinentOutput) ToRegionsItemPropertiesContinentPtrOutput() RegionsItemPropertiesContinentPtrOutput {
	return o.ToRegionsItemPropertiesContinentPtrOutputWithContext(context.Background())
}

func (o RegionsItemPropertiesContinentOutput) ToRegionsItemPropertiesContinentPtrOutputWithContext(ctx context.Context) RegionsItemPropertiesContinentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionsItemPropertiesContinent) *RegionsItemPropertiesContinent {
		return &v
	}).(RegionsItemPropertiesContinentPtrOutput)
}

func (o RegionsItemPropertiesContinentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionsItemPropertiesContinentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionsItemPropertiesContinent) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionsItemPropertiesContinentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionsItemPropertiesContinentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionsItemPropertiesContinent) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionsItemPropertiesContinentPtrOutput struct{ *pulumi.OutputState }

func (RegionsItemPropertiesContinentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionsItemPropertiesContinent)(nil)).Elem()
}

func (o RegionsItemPropertiesContinentPtrOutput) ToRegionsItemPropertiesContinentPtrOutput() RegionsItemPropertiesContinentPtrOutput {
	return o
}

func (o RegionsItemPropertiesContinentPtrOutput) ToRegionsItemPropertiesContinentPtrOutputWithContext(ctx context.Context) RegionsItemPropertiesContinentPtrOutput {
	return o
}

func (o RegionsItemPropertiesContinentPtrOutput) Elem() RegionsItemPropertiesContinentOutput {
	return o.ApplyT(func(v *RegionsItemPropertiesContinent) RegionsItemPropertiesContinent {
		if v != nil {
			return *v
		}
		var ret RegionsItemPropertiesContinent
		return ret
	}).(RegionsItemPropertiesContinentOutput)
}

func (o RegionsItemPropertiesContinentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionsItemPropertiesContinentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionsItemPropertiesContinent) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionsItemPropertiesContinentInput is an input type that accepts values of the RegionsItemPropertiesContinent enum
// A concrete instance of `RegionsItemPropertiesContinentInput` can be one of the following:
//
//	RegionsItemPropertiesContinentWorld
//	RegionsItemPropertiesContinentAf
//	RegionsItemPropertiesContinentAn
//	RegionsItemPropertiesContinentAs
//	RegionsItemPropertiesContinentEu
//	RegionsItemPropertiesContinentNa
//	RegionsItemPropertiesContinentOc
//	RegionsItemPropertiesContinentSa
type RegionsItemPropertiesContinentInput interface {
	pulumi.Input

	ToRegionsItemPropertiesContinentOutput() RegionsItemPropertiesContinentOutput
	ToRegionsItemPropertiesContinentOutputWithContext(context.Context) RegionsItemPropertiesContinentOutput
}

var regionsItemPropertiesContinentPtrType = reflect.TypeOf((**RegionsItemPropertiesContinent)(nil)).Elem()

type RegionsItemPropertiesContinentPtrInput interface {
	pulumi.Input

	ToRegionsItemPropertiesContinentPtrOutput() RegionsItemPropertiesContinentPtrOutput
	ToRegionsItemPropertiesContinentPtrOutputWithContext(context.Context) RegionsItemPropertiesContinentPtrOutput
}

type regionsItemPropertiesContinentPtr string

func RegionsItemPropertiesContinentPtr(v string) RegionsItemPropertiesContinentPtrInput {
	return (*regionsItemPropertiesContinentPtr)(&v)
}

func (*regionsItemPropertiesContinentPtr) ElementType() reflect.Type {
	return regionsItemPropertiesContinentPtrType
}

func (in *regionsItemPropertiesContinentPtr) ToRegionsItemPropertiesContinentPtrOutput() RegionsItemPropertiesContinentPtrOutput {
	return pulumi.ToOutput(in).(RegionsItemPropertiesContinentPtrOutput)
}

func (in *regionsItemPropertiesContinentPtr) ToRegionsItemPropertiesContinentPtrOutputWithContext(ctx context.Context) RegionsItemPropertiesContinentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionsItemPropertiesContinentPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContinentsItemInput)(nil)).Elem(), ContinentsItem("world"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContinentsItemPtrInput)(nil)).Elem(), ContinentsItem("world"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContinentsItemArrayInput)(nil)).Elem(), ContinentsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionsItemPropertiesContinentInput)(nil)).Elem(), RegionsItemPropertiesContinent("world"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionsItemPropertiesContinentPtrInput)(nil)).Elem(), RegionsItemPropertiesContinent("world"))
	pulumi.RegisterOutputType(ContinentsItemOutput{})
	pulumi.RegisterOutputType(ContinentsItemPtrOutput{})
	pulumi.RegisterOutputType(ContinentsItemArrayOutput{})
	pulumi.RegisterOutputType(IpfilterContinentsItemOutput{})
	pulumi.RegisterOutputType(IpfilterContinentsItemPtrOutput{})
	pulumi.RegisterOutputType(IpfilterContinentsItemArrayOutput{})
	pulumi.RegisterOutputType(RegionsItemPropertiesContinentOutput{})
	pulumi.RegisterOutputType(RegionsItemPropertiesContinentPtrOutput{})
}
