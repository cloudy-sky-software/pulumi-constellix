// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ipfilters

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListIPFilters(ctx *pulumi.Context, args *ListIPFiltersArgs, opts ...pulumi.InvokeOption) (*ListIPFiltersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListIPFiltersResult
	err := ctx.Invoke("constellix:ipfilters:listIPFilters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListIPFiltersArgs struct {
}

type ListIPFiltersResult struct {
	Data []IpfilterType `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

func ListIPFiltersOutput(ctx *pulumi.Context, args ListIPFiltersOutputArgs, opts ...pulumi.InvokeOption) ListIPFiltersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListIPFiltersResultOutput, error) {
			args := v.(ListIPFiltersArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListIPFiltersResult
			secret, err := ctx.InvokePackageRaw("constellix:ipfilters:listIPFilters", args, &rv, "", opts...)
			if err != nil {
				return ListIPFiltersResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListIPFiltersResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListIPFiltersResultOutput), nil
			}
			return output, nil
		}).(ListIPFiltersResultOutput)
}

type ListIPFiltersOutputArgs struct {
}

func (ListIPFiltersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListIPFiltersArgs)(nil)).Elem()
}

type ListIPFiltersResultOutput struct{ *pulumi.OutputState }

func (ListIPFiltersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListIPFiltersResult)(nil)).Elem()
}

func (o ListIPFiltersResultOutput) ToListIPFiltersResultOutput() ListIPFiltersResultOutput {
	return o
}

func (o ListIPFiltersResultOutput) ToListIPFiltersResultOutputWithContext(ctx context.Context) ListIPFiltersResultOutput {
	return o
}

func (o ListIPFiltersResultOutput) Data() IpfilterTypeArrayOutput {
	return o.ApplyT(func(v ListIPFiltersResult) []IpfilterType { return v.Data }).(IpfilterTypeArrayOutput)
}

// Metadata for list responses
func (o ListIPFiltersResultOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListIPFiltersResult) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListIPFiltersResultOutput{})
}
