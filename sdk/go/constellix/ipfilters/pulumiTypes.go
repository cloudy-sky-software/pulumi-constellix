// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ipfilters

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-constellix/sdk/go/constellix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DataProperties struct {
	// The ID of the object
	Id    *int                           `pulumi:"id"`
	Links *DataPropertiesLinksProperties `pulumi:"links"`
}

type DataPropertiesOutput struct{ *pulumi.OutputState }

func (DataPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataProperties)(nil)).Elem()
}

func (o DataPropertiesOutput) ToDataPropertiesOutput() DataPropertiesOutput {
	return o
}

func (o DataPropertiesOutput) ToDataPropertiesOutputWithContext(ctx context.Context) DataPropertiesOutput {
	return o
}

// The ID of the object
func (o DataPropertiesOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataProperties) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o DataPropertiesOutput) Links() DataPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v DataProperties) *DataPropertiesLinksProperties { return v.Links }).(DataPropertiesLinksPropertiesPtrOutput)
}

type DataPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataProperties)(nil)).Elem()
}

func (o DataPropertiesPtrOutput) ToDataPropertiesPtrOutput() DataPropertiesPtrOutput {
	return o
}

func (o DataPropertiesPtrOutput) ToDataPropertiesPtrOutputWithContext(ctx context.Context) DataPropertiesPtrOutput {
	return o
}

func (o DataPropertiesPtrOutput) Elem() DataPropertiesOutput {
	return o.ApplyT(func(v *DataProperties) DataProperties {
		if v != nil {
			return *v
		}
		var ret DataProperties
		return ret
	}).(DataPropertiesOutput)
}

// The ID of the object
func (o DataPropertiesPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataProperties) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

func (o DataPropertiesPtrOutput) Links() DataPropertiesLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *DataProperties) *DataPropertiesLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(DataPropertiesLinksPropertiesPtrOutput)
}

type DataPropertiesLinksProperties struct {
	// The URL for the new object
	Self *string `pulumi:"self"`
}

type DataPropertiesLinksPropertiesOutput struct{ *pulumi.OutputState }

func (DataPropertiesLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPropertiesLinksProperties)(nil)).Elem()
}

func (o DataPropertiesLinksPropertiesOutput) ToDataPropertiesLinksPropertiesOutput() DataPropertiesLinksPropertiesOutput {
	return o
}

func (o DataPropertiesLinksPropertiesOutput) ToDataPropertiesLinksPropertiesOutputWithContext(ctx context.Context) DataPropertiesLinksPropertiesOutput {
	return o
}

// The URL for the new object
func (o DataPropertiesLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPropertiesLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type DataPropertiesLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataPropertiesLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPropertiesLinksProperties)(nil)).Elem()
}

func (o DataPropertiesLinksPropertiesPtrOutput) ToDataPropertiesLinksPropertiesPtrOutput() DataPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o DataPropertiesLinksPropertiesPtrOutput) ToDataPropertiesLinksPropertiesPtrOutputWithContext(ctx context.Context) DataPropertiesLinksPropertiesPtrOutput {
	return o
}

func (o DataPropertiesLinksPropertiesPtrOutput) Elem() DataPropertiesLinksPropertiesOutput {
	return o.ApplyT(func(v *DataPropertiesLinksProperties) DataPropertiesLinksProperties {
		if v != nil {
			return *v
		}
		var ret DataPropertiesLinksProperties
		return ret
	}).(DataPropertiesLinksPropertiesOutput)
}

// The URL for the new object
func (o DataPropertiesLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPropertiesLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type GetIPFilterProperties struct {
	Data *IpfilterType `pulumi:"data"`
}

type GetIPFilterPropertiesOutput struct{ *pulumi.OutputState }

func (GetIPFilterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPFilterProperties)(nil)).Elem()
}

func (o GetIPFilterPropertiesOutput) ToGetIPFilterPropertiesOutput() GetIPFilterPropertiesOutput {
	return o
}

func (o GetIPFilterPropertiesOutput) ToGetIPFilterPropertiesOutputWithContext(ctx context.Context) GetIPFilterPropertiesOutput {
	return o
}

func (o GetIPFilterPropertiesOutput) Data() IpfilterTypePtrOutput {
	return o.ApplyT(func(v GetIPFilterProperties) *IpfilterType { return v.Data }).(IpfilterTypePtrOutput)
}

type IpfilterType struct {
	// AS Numbers that this rule applies to. Values must be between 0 and 4,294,967,295
	Asn []int `pulumi:"asn"`
	// A list of continents in this filter
	Continents []IpfilterContinentsItem `pulumi:"continents"`
	// 2 digit ISO code for countries in this filter - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
	Countries []string `pulumi:"countries"`
	// The unique ID for this IP filter
	Id *int `pulumi:"id"`
	// IPv4 addresses and CIDRs that this filter applies to
	Ipv4 []string `pulumi:"ipv4"`
	// IPv6 addresses and CIDRs that this filter applies to
	Ipv6 []string `pulumi:"ipv6"`
	// Links for domain objects
	Links *IpfilterLinksProperties `pulumi:"links"`
	// The name for this IP filter
	Name *string `pulumi:"name"`
	// Regions for this IP filter.
	Regions []Region `pulumi:"regions"`
	// Values should be multiples of 100. Upper limit is the quota assigned to the account.
	RulesLimit *int `pulumi:"rulesLimit"`
}

type IpfilterTypeOutput struct{ *pulumi.OutputState }

func (IpfilterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpfilterType)(nil)).Elem()
}

func (o IpfilterTypeOutput) ToIpfilterTypeOutput() IpfilterTypeOutput {
	return o
}

func (o IpfilterTypeOutput) ToIpfilterTypeOutputWithContext(ctx context.Context) IpfilterTypeOutput {
	return o
}

// AS Numbers that this rule applies to. Values must be between 0 and 4,294,967,295
func (o IpfilterTypeOutput) Asn() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IpfilterType) []int { return v.Asn }).(pulumi.IntArrayOutput)
}

// A list of continents in this filter
func (o IpfilterTypeOutput) Continents() IpfilterContinentsItemArrayOutput {
	return o.ApplyT(func(v IpfilterType) []IpfilterContinentsItem { return v.Continents }).(IpfilterContinentsItemArrayOutput)
}

// 2 digit ISO code for countries in this filter - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
func (o IpfilterTypeOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IpfilterType) []string { return v.Countries }).(pulumi.StringArrayOutput)
}

// The unique ID for this IP filter
func (o IpfilterTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpfilterType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 addresses and CIDRs that this filter applies to
func (o IpfilterTypeOutput) Ipv4() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IpfilterType) []string { return v.Ipv4 }).(pulumi.StringArrayOutput)
}

// IPv6 addresses and CIDRs that this filter applies to
func (o IpfilterTypeOutput) Ipv6() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IpfilterType) []string { return v.Ipv6 }).(pulumi.StringArrayOutput)
}

// Links for domain objects
func (o IpfilterTypeOutput) Links() IpfilterLinksPropertiesPtrOutput {
	return o.ApplyT(func(v IpfilterType) *IpfilterLinksProperties { return v.Links }).(IpfilterLinksPropertiesPtrOutput)
}

// The name for this IP filter
func (o IpfilterTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpfilterType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Regions for this IP filter.
func (o IpfilterTypeOutput) Regions() RegionArrayOutput {
	return o.ApplyT(func(v IpfilterType) []Region { return v.Regions }).(RegionArrayOutput)
}

// Values should be multiples of 100. Upper limit is the quota assigned to the account.
func (o IpfilterTypeOutput) RulesLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpfilterType) *int { return v.RulesLimit }).(pulumi.IntPtrOutput)
}

type IpfilterTypePtrOutput struct{ *pulumi.OutputState }

func (IpfilterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpfilterType)(nil)).Elem()
}

func (o IpfilterTypePtrOutput) ToIpfilterTypePtrOutput() IpfilterTypePtrOutput {
	return o
}

func (o IpfilterTypePtrOutput) ToIpfilterTypePtrOutputWithContext(ctx context.Context) IpfilterTypePtrOutput {
	return o
}

func (o IpfilterTypePtrOutput) Elem() IpfilterTypeOutput {
	return o.ApplyT(func(v *IpfilterType) IpfilterType {
		if v != nil {
			return *v
		}
		var ret IpfilterType
		return ret
	}).(IpfilterTypeOutput)
}

// AS Numbers that this rule applies to. Values must be between 0 and 4,294,967,295
func (o IpfilterTypePtrOutput) Asn() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *IpfilterType) []int {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.IntArrayOutput)
}

// A list of continents in this filter
func (o IpfilterTypePtrOutput) Continents() IpfilterContinentsItemArrayOutput {
	return o.ApplyT(func(v *IpfilterType) []IpfilterContinentsItem {
		if v == nil {
			return nil
		}
		return v.Continents
	}).(IpfilterContinentsItemArrayOutput)
}

// 2 digit ISO code for countries in this filter - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
func (o IpfilterTypePtrOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IpfilterType) []string {
		if v == nil {
			return nil
		}
		return v.Countries
	}).(pulumi.StringArrayOutput)
}

// The unique ID for this IP filter
func (o IpfilterTypePtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IpfilterType) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// IPv4 addresses and CIDRs that this filter applies to
func (o IpfilterTypePtrOutput) Ipv4() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IpfilterType) []string {
		if v == nil {
			return nil
		}
		return v.Ipv4
	}).(pulumi.StringArrayOutput)
}

// IPv6 addresses and CIDRs that this filter applies to
func (o IpfilterTypePtrOutput) Ipv6() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IpfilterType) []string {
		if v == nil {
			return nil
		}
		return v.Ipv6
	}).(pulumi.StringArrayOutput)
}

// Links for domain objects
func (o IpfilterTypePtrOutput) Links() IpfilterLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *IpfilterType) *IpfilterLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(IpfilterLinksPropertiesPtrOutput)
}

// The name for this IP filter
func (o IpfilterTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpfilterType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Regions for this IP filter.
func (o IpfilterTypePtrOutput) Regions() RegionArrayOutput {
	return o.ApplyT(func(v *IpfilterType) []Region {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(RegionArrayOutput)
}

// Values should be multiples of 100. Upper limit is the quota assigned to the account.
func (o IpfilterTypePtrOutput) RulesLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IpfilterType) *int {
		if v == nil {
			return nil
		}
		return v.RulesLimit
	}).(pulumi.IntPtrOutput)
}

type IpfilterTypeArrayOutput struct{ *pulumi.OutputState }

func (IpfilterTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpfilterType)(nil)).Elem()
}

func (o IpfilterTypeArrayOutput) ToIpfilterTypeArrayOutput() IpfilterTypeArrayOutput {
	return o
}

func (o IpfilterTypeArrayOutput) ToIpfilterTypeArrayOutputWithContext(ctx context.Context) IpfilterTypeArrayOutput {
	return o
}

func (o IpfilterTypeArrayOutput) Index(i pulumi.IntInput) IpfilterTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpfilterType {
		return vs[0].([]IpfilterType)[vs[1].(int)]
	}).(IpfilterTypeOutput)
}

// Links for domain objects
type IpfilterLinksProperties struct {
	Self *string `pulumi:"self"`
}

// Links for domain objects
type IpfilterLinksPropertiesOutput struct{ *pulumi.OutputState }

func (IpfilterLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpfilterLinksProperties)(nil)).Elem()
}

func (o IpfilterLinksPropertiesOutput) ToIpfilterLinksPropertiesOutput() IpfilterLinksPropertiesOutput {
	return o
}

func (o IpfilterLinksPropertiesOutput) ToIpfilterLinksPropertiesOutputWithContext(ctx context.Context) IpfilterLinksPropertiesOutput {
	return o
}

func (o IpfilterLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpfilterLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type IpfilterLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IpfilterLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpfilterLinksProperties)(nil)).Elem()
}

func (o IpfilterLinksPropertiesPtrOutput) ToIpfilterLinksPropertiesPtrOutput() IpfilterLinksPropertiesPtrOutput {
	return o
}

func (o IpfilterLinksPropertiesPtrOutput) ToIpfilterLinksPropertiesPtrOutputWithContext(ctx context.Context) IpfilterLinksPropertiesPtrOutput {
	return o
}

func (o IpfilterLinksPropertiesPtrOutput) Elem() IpfilterLinksPropertiesOutput {
	return o.ApplyT(func(v *IpfilterLinksProperties) IpfilterLinksProperties {
		if v != nil {
			return *v
		}
		var ret IpfilterLinksProperties
		return ret
	}).(IpfilterLinksPropertiesOutput)
}

func (o IpfilterLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpfilterLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

type ListIPFiltersProperties struct {
	Data []IpfilterType `pulumi:"data"`
	// Metadata for list responses
	Meta *ListMetadata `pulumi:"meta"`
}

type ListIPFiltersPropertiesOutput struct{ *pulumi.OutputState }

func (ListIPFiltersPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListIPFiltersProperties)(nil)).Elem()
}

func (o ListIPFiltersPropertiesOutput) ToListIPFiltersPropertiesOutput() ListIPFiltersPropertiesOutput {
	return o
}

func (o ListIPFiltersPropertiesOutput) ToListIPFiltersPropertiesOutputWithContext(ctx context.Context) ListIPFiltersPropertiesOutput {
	return o
}

func (o ListIPFiltersPropertiesOutput) Data() IpfilterTypeArrayOutput {
	return o.ApplyT(func(v ListIPFiltersProperties) []IpfilterType { return v.Data }).(IpfilterTypeArrayOutput)
}

// Metadata for list responses
func (o ListIPFiltersPropertiesOutput) Meta() ListMetadataPtrOutput {
	return o.ApplyT(func(v ListIPFiltersProperties) *ListMetadata { return v.Meta }).(ListMetadataPtrOutput)
}

// Metadata for list responses
type ListMetadata struct {
	// Relevant links for this list
	Links *ListMetadataLinksProperties `pulumi:"links"`
	// Pagination details
	Pagination *ListMetadataPaginationProperties `pulumi:"pagination"`
}

// Metadata for list responses
type ListMetadataOutput struct{ *pulumi.OutputState }

func (ListMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadata)(nil)).Elem()
}

func (o ListMetadataOutput) ToListMetadataOutput() ListMetadataOutput {
	return o
}

func (o ListMetadataOutput) ToListMetadataOutputWithContext(ctx context.Context) ListMetadataOutput {
	return o
}

// Relevant links for this list
func (o ListMetadataOutput) Links() ListMetadataLinksPropertiesPtrOutput {
	return o.ApplyT(func(v ListMetadata) *ListMetadataLinksProperties { return v.Links }).(ListMetadataLinksPropertiesPtrOutput)
}

// Pagination details
func (o ListMetadataOutput) Pagination() ListMetadataPaginationPropertiesPtrOutput {
	return o.ApplyT(func(v ListMetadata) *ListMetadataPaginationProperties { return v.Pagination }).(ListMetadataPaginationPropertiesPtrOutput)
}

type ListMetadataPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadata)(nil)).Elem()
}

func (o ListMetadataPtrOutput) ToListMetadataPtrOutput() ListMetadataPtrOutput {
	return o
}

func (o ListMetadataPtrOutput) ToListMetadataPtrOutputWithContext(ctx context.Context) ListMetadataPtrOutput {
	return o
}

func (o ListMetadataPtrOutput) Elem() ListMetadataOutput {
	return o.ApplyT(func(v *ListMetadata) ListMetadata {
		if v != nil {
			return *v
		}
		var ret ListMetadata
		return ret
	}).(ListMetadataOutput)
}

// Relevant links for this list
func (o ListMetadataPtrOutput) Links() ListMetadataLinksPropertiesPtrOutput {
	return o.ApplyT(func(v *ListMetadata) *ListMetadataLinksProperties {
		if v == nil {
			return nil
		}
		return v.Links
	}).(ListMetadataLinksPropertiesPtrOutput)
}

// Pagination details
func (o ListMetadataPtrOutput) Pagination() ListMetadataPaginationPropertiesPtrOutput {
	return o.ApplyT(func(v *ListMetadata) *ListMetadataPaginationProperties {
		if v == nil {
			return nil
		}
		return v.Pagination
	}).(ListMetadataPaginationPropertiesPtrOutput)
}

// Relevant links for this list
type ListMetadataLinksProperties struct {
	First    *string `pulumi:"first"`
	Last     *string `pulumi:"last"`
	Next     *string `pulumi:"next"`
	Previous *string `pulumi:"previous"`
	Self     *string `pulumi:"self"`
}

// Relevant links for this list
type ListMetadataLinksPropertiesOutput struct{ *pulumi.OutputState }

func (ListMetadataLinksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadataLinksProperties)(nil)).Elem()
}

func (o ListMetadataLinksPropertiesOutput) ToListMetadataLinksPropertiesOutput() ListMetadataLinksPropertiesOutput {
	return o
}

func (o ListMetadataLinksPropertiesOutput) ToListMetadataLinksPropertiesOutputWithContext(ctx context.Context) ListMetadataLinksPropertiesOutput {
	return o
}

func (o ListMetadataLinksPropertiesOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.First }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Last }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Previous() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Previous }).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListMetadataLinksProperties) *string { return v.Self }).(pulumi.StringPtrOutput)
}

type ListMetadataLinksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataLinksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadataLinksProperties)(nil)).Elem()
}

func (o ListMetadataLinksPropertiesPtrOutput) ToListMetadataLinksPropertiesPtrOutput() ListMetadataLinksPropertiesPtrOutput {
	return o
}

func (o ListMetadataLinksPropertiesPtrOutput) ToListMetadataLinksPropertiesPtrOutputWithContext(ctx context.Context) ListMetadataLinksPropertiesPtrOutput {
	return o
}

func (o ListMetadataLinksPropertiesPtrOutput) Elem() ListMetadataLinksPropertiesOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) ListMetadataLinksProperties {
		if v != nil {
			return *v
		}
		var ret ListMetadataLinksProperties
		return ret
	}).(ListMetadataLinksPropertiesOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.First
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Last
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Previous() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Previous
	}).(pulumi.StringPtrOutput)
}

func (o ListMetadataLinksPropertiesPtrOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListMetadataLinksProperties) *string {
		if v == nil {
			return nil
		}
		return v.Self
	}).(pulumi.StringPtrOutput)
}

// Pagination details
type ListMetadataPaginationProperties struct {
	// The number of items in this page of the response
	Count *int `pulumi:"count"`
	// The current results page
	CurrentPage *int `pulumi:"currentPage"`
	// The number of items per page
	PerPage *int `pulumi:"perPage"`
	// The total number of objects matching the query
	Total *int `pulumi:"total"`
	// The total number of pages
	TotalPages *int `pulumi:"totalPages"`
}

// Pagination details
type ListMetadataPaginationPropertiesOutput struct{ *pulumi.OutputState }

func (ListMetadataPaginationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListMetadataPaginationProperties)(nil)).Elem()
}

func (o ListMetadataPaginationPropertiesOutput) ToListMetadataPaginationPropertiesOutput() ListMetadataPaginationPropertiesOutput {
	return o
}

func (o ListMetadataPaginationPropertiesOutput) ToListMetadataPaginationPropertiesOutputWithContext(ctx context.Context) ListMetadataPaginationPropertiesOutput {
	return o
}

// The number of items in this page of the response
func (o ListMetadataPaginationPropertiesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The current results page
func (o ListMetadataPaginationPropertiesOutput) CurrentPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.CurrentPage }).(pulumi.IntPtrOutput)
}

// The number of items per page
func (o ListMetadataPaginationPropertiesOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// The total number of objects matching the query
func (o ListMetadataPaginationPropertiesOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.Total }).(pulumi.IntPtrOutput)
}

// The total number of pages
func (o ListMetadataPaginationPropertiesOutput) TotalPages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListMetadataPaginationProperties) *int { return v.TotalPages }).(pulumi.IntPtrOutput)
}

type ListMetadataPaginationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ListMetadataPaginationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListMetadataPaginationProperties)(nil)).Elem()
}

func (o ListMetadataPaginationPropertiesPtrOutput) ToListMetadataPaginationPropertiesPtrOutput() ListMetadataPaginationPropertiesPtrOutput {
	return o
}

func (o ListMetadataPaginationPropertiesPtrOutput) ToListMetadataPaginationPropertiesPtrOutputWithContext(ctx context.Context) ListMetadataPaginationPropertiesPtrOutput {
	return o
}

func (o ListMetadataPaginationPropertiesPtrOutput) Elem() ListMetadataPaginationPropertiesOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) ListMetadataPaginationProperties {
		if v != nil {
			return *v
		}
		var ret ListMetadataPaginationProperties
		return ret
	}).(ListMetadataPaginationPropertiesOutput)
}

// The number of items in this page of the response
func (o ListMetadataPaginationPropertiesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The current results page
func (o ListMetadataPaginationPropertiesPtrOutput) CurrentPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.CurrentPage
	}).(pulumi.IntPtrOutput)
}

// The number of items per page
func (o ListMetadataPaginationPropertiesPtrOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.PerPage
	}).(pulumi.IntPtrOutput)
}

// The total number of objects matching the query
func (o ListMetadataPaginationPropertiesPtrOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.Total
	}).(pulumi.IntPtrOutput)
}

// The total number of pages
func (o ListMetadataPaginationPropertiesPtrOutput) TotalPages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListMetadataPaginationProperties) *int {
		if v == nil {
			return nil
		}
		return v.TotalPages
	}).(pulumi.IntPtrOutput)
}

// IP Filter Region
type Region struct {
	// AS Number for this region
	Asn *int `pulumi:"asn"`
	// The continent for this region
	Continent *string `pulumi:"continent"`
	// The country for the region
	Country *string `pulumi:"country"`
	// The region code
	Region *string `pulumi:"region"`
}

// IP Filter Region
type RegionOutput struct{ *pulumi.OutputState }

func (RegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Region)(nil)).Elem()
}

func (o RegionOutput) ToRegionOutput() RegionOutput {
	return o
}

func (o RegionOutput) ToRegionOutputWithContext(ctx context.Context) RegionOutput {
	return o
}

// AS Number for this region
func (o RegionOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Region) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The continent for this region
func (o RegionOutput) Continent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Region) *string { return v.Continent }).(pulumi.StringPtrOutput)
}

// The country for the region
func (o RegionOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Region) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// The region code
func (o RegionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Region) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type RegionArrayOutput struct{ *pulumi.OutputState }

func (RegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Region)(nil)).Elem()
}

func (o RegionArrayOutput) ToRegionArrayOutput() RegionArrayOutput {
	return o
}

func (o RegionArrayOutput) ToRegionArrayOutputWithContext(ctx context.Context) RegionArrayOutput {
	return o
}

func (o RegionArrayOutput) Index(i pulumi.IntInput) RegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Region {
		return vs[0].([]Region)[vs[1].(int)]
	}).(RegionOutput)
}

type RegionsItemProperties struct {
	// Optional AS Number that this rule applies to. Values must be between 0 and 4,294,967,295
	Asn *int `pulumi:"asn"`
	// The continent for this region
	Continent *RegionsItemPropertiesContinent `pulumi:"continent"`
	// Optional 2 digit ISO code for the country - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
	Country *string `pulumi:"country"`
	// Optional 2 digit code for the region
	Region *string `pulumi:"region"`
}

// RegionsItemPropertiesInput is an input type that accepts RegionsItemPropertiesArgs and RegionsItemPropertiesOutput values.
// You can construct a concrete instance of `RegionsItemPropertiesInput` via:
//
//	RegionsItemPropertiesArgs{...}
type RegionsItemPropertiesInput interface {
	pulumi.Input

	ToRegionsItemPropertiesOutput() RegionsItemPropertiesOutput
	ToRegionsItemPropertiesOutputWithContext(context.Context) RegionsItemPropertiesOutput
}

type RegionsItemPropertiesArgs struct {
	// Optional AS Number that this rule applies to. Values must be between 0 and 4,294,967,295
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// The continent for this region
	Continent RegionsItemPropertiesContinentPtrInput `pulumi:"continent"`
	// Optional 2 digit ISO code for the country - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Optional 2 digit code for the region
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (RegionsItemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionsItemProperties)(nil)).Elem()
}

func (i RegionsItemPropertiesArgs) ToRegionsItemPropertiesOutput() RegionsItemPropertiesOutput {
	return i.ToRegionsItemPropertiesOutputWithContext(context.Background())
}

func (i RegionsItemPropertiesArgs) ToRegionsItemPropertiesOutputWithContext(ctx context.Context) RegionsItemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionsItemPropertiesOutput)
}

// RegionsItemPropertiesArrayInput is an input type that accepts RegionsItemPropertiesArray and RegionsItemPropertiesArrayOutput values.
// You can construct a concrete instance of `RegionsItemPropertiesArrayInput` via:
//
//	RegionsItemPropertiesArray{ RegionsItemPropertiesArgs{...} }
type RegionsItemPropertiesArrayInput interface {
	pulumi.Input

	ToRegionsItemPropertiesArrayOutput() RegionsItemPropertiesArrayOutput
	ToRegionsItemPropertiesArrayOutputWithContext(context.Context) RegionsItemPropertiesArrayOutput
}

type RegionsItemPropertiesArray []RegionsItemPropertiesInput

func (RegionsItemPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionsItemProperties)(nil)).Elem()
}

func (i RegionsItemPropertiesArray) ToRegionsItemPropertiesArrayOutput() RegionsItemPropertiesArrayOutput {
	return i.ToRegionsItemPropertiesArrayOutputWithContext(context.Background())
}

func (i RegionsItemPropertiesArray) ToRegionsItemPropertiesArrayOutputWithContext(ctx context.Context) RegionsItemPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionsItemPropertiesArrayOutput)
}

type RegionsItemPropertiesOutput struct{ *pulumi.OutputState }

func (RegionsItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionsItemProperties)(nil)).Elem()
}

func (o RegionsItemPropertiesOutput) ToRegionsItemPropertiesOutput() RegionsItemPropertiesOutput {
	return o
}

func (o RegionsItemPropertiesOutput) ToRegionsItemPropertiesOutputWithContext(ctx context.Context) RegionsItemPropertiesOutput {
	return o
}

// Optional AS Number that this rule applies to. Values must be between 0 and 4,294,967,295
func (o RegionsItemPropertiesOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegionsItemProperties) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The continent for this region
func (o RegionsItemPropertiesOutput) Continent() RegionsItemPropertiesContinentPtrOutput {
	return o.ApplyT(func(v RegionsItemProperties) *RegionsItemPropertiesContinent { return v.Continent }).(RegionsItemPropertiesContinentPtrOutput)
}

// Optional 2 digit ISO code for the country - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
func (o RegionsItemPropertiesOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegionsItemProperties) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Optional 2 digit code for the region
func (o RegionsItemPropertiesOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegionsItemProperties) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type RegionsItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (RegionsItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionsItemProperties)(nil)).Elem()
}

func (o RegionsItemPropertiesArrayOutput) ToRegionsItemPropertiesArrayOutput() RegionsItemPropertiesArrayOutput {
	return o
}

func (o RegionsItemPropertiesArrayOutput) ToRegionsItemPropertiesArrayOutputWithContext(ctx context.Context) RegionsItemPropertiesArrayOutput {
	return o
}

func (o RegionsItemPropertiesArrayOutput) Index(i pulumi.IntInput) RegionsItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegionsItemProperties {
		return vs[0].([]RegionsItemProperties)[vs[1].(int)]
	}).(RegionsItemPropertiesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegionsItemPropertiesInput)(nil)).Elem(), RegionsItemPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionsItemPropertiesArrayInput)(nil)).Elem(), RegionsItemPropertiesArray{})
	pulumi.RegisterOutputType(DataPropertiesOutput{})
	pulumi.RegisterOutputType(DataPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataPropertiesLinksPropertiesOutput{})
	pulumi.RegisterOutputType(DataPropertiesLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GetIPFilterPropertiesOutput{})
	pulumi.RegisterOutputType(IpfilterTypeOutput{})
	pulumi.RegisterOutputType(IpfilterTypePtrOutput{})
	pulumi.RegisterOutputType(IpfilterTypeArrayOutput{})
	pulumi.RegisterOutputType(IpfilterLinksPropertiesOutput{})
	pulumi.RegisterOutputType(IpfilterLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ListIPFiltersPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataOutput{})
	pulumi.RegisterOutputType(ListMetadataPtrOutput{})
	pulumi.RegisterOutputType(ListMetadataLinksPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataLinksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ListMetadataPaginationPropertiesOutput{})
	pulumi.RegisterOutputType(ListMetadataPaginationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RegionOutput{})
	pulumi.RegisterOutputType(RegionArrayOutput{})
	pulumi.RegisterOutputType(RegionsItemPropertiesOutput{})
	pulumi.RegisterOutputType(RegionsItemPropertiesArrayOutput{})
}
